diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java
index 48f4b42..1334026 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFilePrettyPrinter.java
@@ -24,6 +24,7 @@ import java.io.DataInput;
 import java.io.IOException;
 import java.io.PrintStream;
 import java.util.ArrayList;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Locale;
 import java.util.Map;
@@ -168,16 +169,28 @@ public class HFilePrettyPrinter extends Configured implements Tool {
 
     if (cmd.hasOption("r")) {
       String regionName = cmd.getOptionValue("r");
+      String encodedRegionName = null;
+      List<Path> regionFiles = null;
+      Path regionDir = null;
       byte[] rn = Bytes.toBytes(regionName);
       byte[][] hri = HRegionInfo.parseRegionName(rn);
       Path rootDir = FSUtils.getRootDir(getConf());
       Path tableDir = FSUtils.getTableDir(rootDir, TableName.valueOf(hri[0]));
-      String enc = HRegionInfo.encodeRegionName(rn);
-      Path regionDir = new Path(tableDir, enc);
+      if (TableName.valueOf(hri[0]).equals(TableName.META_TABLE_NAME)) {
+        encodedRegionName = HRegionInfo.FIRST_META_REGIONINFO.getEncodedName();
+        regionDir = new Path(tableDir, encodedRegionName);
+        regionFiles = HFile.getStoreFiles(FileSystem.get(getConf()),
+          regionDir);
+        regionFiles = filterNonHFiles(regionFiles);
+      } else {
+        encodedRegionName = HRegionInfo.encodeRegionName(rn);
+        regionDir = new Path(tableDir, encodedRegionName);
+        regionFiles = HFile.getStoreFiles(FileSystem.get(getConf()),
+          regionDir);
+        regionFiles = filterNonHFiles(regionFiles);
+      }
       if (verbose)
         System.out.println("region dir -> " + regionDir);
-      List<Path> regionFiles = HFile.getStoreFiles(FileSystem.get(getConf()),
-          regionDir);
       if (verbose)
         System.out.println("Number of region files found -> "
             + regionFiles.size());
@@ -193,6 +206,22 @@ public class HFilePrettyPrinter extends Configured implements Tool {
 
     return true;
   }
+  
+  /**
+   * Remove "oldWals" and "recovered.edits" from path list.
+   */
+  private List<Path> filterNonHFiles(List<Path> files) {
+    if (files.isEmpty()) return files;
+    Iterator<Path> it = files.iterator();
+    while(it.hasNext()) {
+      String path= it.next().toString();
+      if(path.contains(HConstants.HREGION_OLDLOGDIR_NAME) || 
+          path.contains(HConstants.RECOVERED_EDITS_DIR)) {
+        it.remove();
+      }
+    }
+    return files;    
+  }
 
   /**
    * Runs the command-line pretty-printer, and returns the desired command
