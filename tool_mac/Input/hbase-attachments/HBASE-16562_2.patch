From 7363a76660583492c5c037113ac06cfef92e034e Mon Sep 17 00:00:00 2001
From: chenheng <chenheng@apache.org>
Date: Wed, 7 Sep 2016 15:29:55 +0800
Subject: [PATCH] HBASE-16562 ITBLL should fail to start if misconfigured,
 addendum

---
 .../hbase/test/IntegrationTestBigLinkedList.java    | 21 ++++++++++-----------
 1 file changed, 10 insertions(+), 11 deletions(-)

diff --git a/hbase-it/src/test/java/org/apache/hadoop/hbase/test/IntegrationTestBigLinkedList.java b/hbase-it/src/test/java/org/apache/hadoop/hbase/test/IntegrationTestBigLinkedList.java
index 41aa128..07c5cf2 100644
--- a/hbase-it/src/test/java/org/apache/hadoop/hbase/test/IntegrationTestBigLinkedList.java
+++ b/hbase-it/src/test/java/org/apache/hadoop/hbase/test/IntegrationTestBigLinkedList.java
@@ -676,17 +676,6 @@ public class IntegrationTestBigLinkedList extends IntegrationTestBase {
         Integer width = (args.length < 4) ? null : Integer.parseInt(args[3]);
         Integer wrapMultiplier = (args.length < 5) ? null : Integer.parseInt(args[4]);
         Integer numWalkers = (args.length < 6) ? null : Integer.parseInt(args[5]);
-
-        long wrap = (long)width*wrapMultiplier;
-        if (wrap < numNodes && numNodes % wrap != 0) {
-          /**
-           *  numNodes should be a multiple of width*wrapMultiplier.
-           *  If numNodes less than wrap, wrap will be set to be equal with numNodes,
-           *  See {@link GeneratorMapper#setup(Mapper.Context)}
-           * */
-          System.err.println(USAGE);
-          return 1;
-        }
         return run(numMappers, numNodes, tmpOutput, width, wrapMultiplier, numWalkers);
       } catch (NumberFormatException e) {
         System.err.println("Parsing generator arguments failed: " + e.getMessage());
@@ -818,6 +807,16 @@ public class IntegrationTestBigLinkedList extends IntegrationTestBase {
     public int run(int numMappers, long numNodes, Path tmpOutput,
         Integer width, Integer wrapMultiplier, Integer numWalkers)
         throws Exception {
+      long wrap = (long)width*wrapMultiplier;
+      if (wrap < numNodes && numNodes % wrap != 0) {
+        /**
+         *  numNodes should be a multiple of width*wrapMultiplier.
+         *  If numNodes less than wrap, wrap will be set to be equal with numNodes,
+         *  See {@link GeneratorMapper#setup(Mapper.Context)}
+         * */
+        System.err.println(USAGE);
+        return 1;
+      }
       int ret = runRandomInputGenerator(numMappers, numNodes, tmpOutput, width, wrapMultiplier,
           numWalkers);
       if (ret > 0) {
-- 
2.9.3

