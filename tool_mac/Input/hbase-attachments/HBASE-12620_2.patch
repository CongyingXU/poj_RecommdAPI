 src/main/docbkx/security.xml | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/src/main/docbkx/security.xml b/src/main/docbkx/security.xml
index d649f95..329394e 100644
--- a/src/main/docbkx/security.xml
+++ b/src/main/docbkx/security.xml
@@ -1384,6 +1384,25 @@ static HTable createTableAndWriteDataWithLabels(TableName tableName, String... l
           can also configure a set of <code>ScanLabelGenerators</code> to be used by the system, as
           a comma-separated list.</para>
       </section>
+      <section>
+        <title>Replicating visibility tags as strings</title>
+          <para> As mentioned in the above sections, the interface <code>VisibilityLabelService</code> could
+            be used to implement the way the visibility labels can be stored in the cells. Similarly we could also control
+            how the visibility labels can be replicated to a peer cluster. This would be helpful in cases where there is no
+            common Global visibility labels table among the two clusters such that the ordinals of the visibility labels are same
+            across both clusters.  In such cases it would be better to replicate the visibility labels as strings and use the ordinals
+            in the labels table in the peer cluster to control how the visibility labels should be stored in peer cluster. Use the below
+            configuration to configure replication of visibility labels to peer cluster as strings. See
+            <link
+              xlink:href="https://issues.apache.org/jira/browse/HBASE-11639"></link> for more details.
+          </para>
+          <programlisting language="xml"><![CDATA[
+            <property>
+              <name>hbase.coprocessor.regionserver.classes</name>
+              <value>org.apache.hadoop.hbase.security.visibility.VisibilityController$VisibilityReplication</value>
+            </property>
+       ]]></programlisting>
+      </section>
     </section>
 
     <section xml:id="hbase.encryption.server">
