From 6c255e13ef6e4b2f71a2df3e53b30f2db06f1328 Mon Sep 17 00:00:00 2001
From: Mike Drob <mdrob@apache.org>
Date: Tue, 2 May 2017 16:01:24 -0500
Subject: [PATCH] HBASE-16196 Update jruby to a newer version.

---
 bin/draining_servers.rb                            | 12 +++++-----
 bin/get-active-master.rb                           |  8 +++----
 bin/region_status.rb                               | 26 +++++++++++-----------
 bin/replication/copy_tables_desc.rb                | 17 +++++++-------
 bin/shutdown_regionserver.rb                       |  6 ++---
 hbase-shell/src/main/ruby/hbase/admin.rb           | 15 ++++++++-----
 hbase-shell/src/main/ruby/hbase/security.rb        |  2 +-
 hbase-shell/src/main/ruby/hbase_constants.rb       |  6 ++---
 hbase-shell/src/main/ruby/irb/hirb.rb              |  2 +-
 hbase-shell/src/main/ruby/shell/commands.rb        | 15 +++++--------
 hbase-shell/src/main/ruby/shell/formatter.rb       |  9 +++++---
 .../hadoop/hbase/client/AbstractTestShell.java     |  2 +-
 .../hadoop/hbase/client/TestShellNoCluster.java    |  2 +-
 .../hbase/client/rsgroup/TestShellRSGroups.java    |  2 +-
 hbase-shell/src/test/ruby/hbase/admin_test.rb      |  4 ++--
 pom.xml                                            |  2 +-
 16 files changed, 67 insertions(+), 63 deletions(-)

diff --git a/bin/draining_servers.rb b/bin/draining_servers.rb
index 6849605..8a615a8 100644
--- a/bin/draining_servers.rb
+++ b/bin/draining_servers.rb
@@ -21,12 +21,12 @@
 require 'optparse'
 include Java
 
-import org.apache.hadoop.hbase.HBaseConfiguration
-import org.apache.hadoop.hbase.client.ConnectionFactory
-import org.apache.hadoop.hbase.client.HBaseAdmin
-import org.apache.hadoop.hbase.zookeeper.ZKUtil
-import org.apache.commons.logging.Log
-import org.apache.commons.logging.LogFactory
+java_import org.apache.hadoop.hbase.HBaseConfiguration
+java_import org.apache.hadoop.hbase.client.ConnectionFactory
+java_import org.apache.hadoop.hbase.client.HBaseAdmin
+java_import org.apache.hadoop.hbase.zookeeper.ZKUtil
+java_import org.apache.commons.logging.Log
+java_import org.apache.commons.logging.LogFactory
 
 # Name of this script
 NAME = "draining_servers"
diff --git a/bin/get-active-master.rb b/bin/get-active-master.rb
index f7e1ff6..bd303b3 100644
--- a/bin/get-active-master.rb
+++ b/bin/get-active-master.rb
@@ -18,10 +18,10 @@
 # Prints the hostname of the machine running the active master.
 
 include Java 
-import org.apache.hadoop.hbase.HBaseConfiguration
-import org.apache.hadoop.hbase.ServerName
-import org.apache.hadoop.hbase.zookeeper.ZKUtil
-import org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher
+java_import org.apache.hadoop.hbase.HBaseConfiguration
+java_import org.apache.hadoop.hbase.ServerName
+java_import org.apache.hadoop.hbase.zookeeper.ZKUtil
+java_import org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher
 
 # disable debug/info logging on this script for clarity
 log_level = org.apache.log4j.Level::ERROR
diff --git a/bin/region_status.rb b/bin/region_status.rb
index f889de9..aab7e12 100644
--- a/bin/region_status.rb
+++ b/bin/region_status.rb
@@ -45,19 +45,19 @@ end
 
 require 'java'
 
-import org.apache.hadoop.hbase.HBaseConfiguration
-import org.apache.hadoop.hbase.TableName
-import org.apache.hadoop.hbase.HConstants
-import org.apache.hadoop.hbase.MasterNotRunningException
-import org.apache.hadoop.hbase.client.HBaseAdmin
-import org.apache.hadoop.hbase.client.Table
-import org.apache.hadoop.hbase.client.Scan
-import org.apache.hadoop.hbase.filter.FirstKeyOnlyFilter
-import org.apache.hadoop.hbase.util.Bytes
-import org.apache.hadoop.hbase.HRegionInfo
-import org.apache.hadoop.hbase.MetaTableAccessor
-import org.apache.hadoop.hbase.HTableDescriptor
-import org.apache.hadoop.hbase.client.ConnectionFactory
+java_import org.apache.hadoop.hbase.HBaseConfiguration
+java_import org.apache.hadoop.hbase.TableName
+java_import org.apache.hadoop.hbase.HConstants
+java_import org.apache.hadoop.hbase.MasterNotRunningException
+java_import org.apache.hadoop.hbase.client.HBaseAdmin
+java_import org.apache.hadoop.hbase.client.Table
+java_import org.apache.hadoop.hbase.client.Scan
+java_import org.apache.hadoop.hbase.filter.FirstKeyOnlyFilter
+java_import org.apache.hadoop.hbase.util.Bytes
+java_import org.apache.hadoop.hbase.HRegionInfo
+java_import org.apache.hadoop.hbase.MetaTableAccessor
+java_import org.apache.hadoop.hbase.HTableDescriptor
+java_import org.apache.hadoop.hbase.client.ConnectionFactory
 
 # disable debug logging on this script for clarity
 log_level = org.apache.log4j.Level::ERROR
diff --git a/bin/replication/copy_tables_desc.rb b/bin/replication/copy_tables_desc.rb
index a7cc3a3..a265bf1 100644
--- a/bin/replication/copy_tables_desc.rb
+++ b/bin/replication/copy_tables_desc.rb
@@ -24,13 +24,14 @@
 #
 
 include Java
-import org.apache.commons.logging.LogFactory
-import org.apache.hadoop.hbase.HBaseConfiguration
-import org.apache.hadoop.hbase.HConstants
-import org.apache.hadoop.hbase.client.HBaseAdmin
-import org.apache.hadoop.hbase.HTableDescriptor
-import org.apache.hadoop.conf.Configuration
-import org.apache.hadoop.hbase.client.ConnectionFactory
+java_import org.apache.commons.logging.LogFactory
+java_import org.apache.hadoop.conf.Configuration
+java_import org.apache.hadoop.hbase.HBaseConfiguration
+java_import org.apache.hadoop.hbase.HConstants
+java_import org.apache.hadoop.hbase.HTableDescriptor
+java_import org.apache.hadoop.hbase.TableName
+java_import org.apache.hadoop.hbase.client.ConnectionFactory
+java_import org.apache.hadoop.hbase.client.HBaseAdmin
 
 # Name of this script
 NAME = "copy_tables_desc"
@@ -44,7 +45,7 @@ end
 def copy (src, dst, table)
   # verify if table exists in source cluster
   begin
-    t = src.getTableDescriptor(table.to_java_bytes)
+    t = src.getTableDescriptor(TableName.valueOf(table))
   rescue org.apache.hadoop.hbase.TableNotFoundException
     puts "Source table \"%s\" doesn't exist, skipping." % table
     return
diff --git a/bin/shutdown_regionserver.rb b/bin/shutdown_regionserver.rb
index 608248f..9d514a7 100644
--- a/bin/shutdown_regionserver.rb
+++ b/bin/shutdown_regionserver.rb
@@ -23,9 +23,9 @@
 #  ./bin/hbase org.jruby.Main bin/shutdown_regionserver.rb c2021:16020
 
 include Java
-import org.apache.hadoop.hbase.HBaseConfiguration
-import org.apache.hadoop.hbase.client.HBaseAdmin
-import org.apache.hadoop.hbase.client.ConnectionFactory
+java_import org.apache.hadoop.hbase.HBaseConfiguration
+java_import org.apache.hadoop.hbase.client.HBaseAdmin
+java_import org.apache.hadoop.hbase.client.ConnectionFactory
 
 def usage(msg=nil)
   $stderr.puts 'Usage: shutdown_regionserver.rb <host:port>..'
diff --git a/hbase-shell/src/main/ruby/hbase/admin.rb b/hbase-shell/src/main/ruby/hbase/admin.rb
index 2db89b7..49aecd2 100644
--- a/hbase-shell/src/main/ruby/hbase/admin.rb
+++ b/hbase-shell/src/main/ruby/hbase/admin.rb
@@ -75,9 +75,9 @@ module Hbase
       end
 
       begin
-        @admin.compactRegion(table_or_region_name.to_java_bytes, family_bytes, false)
+        @admin.compactRegion(table_or_region_name.to_java_bytes, family_bytes)
       rescue java.lang.IllegalArgumentException => e
-        @admin.compact(TableName.valueOf(table_or_region_name), family_bytes, false, compact_type)
+        @admin.compact(TableName.valueOf(table_or_region_name), family_bytes, compact_type)
       end
     end
 
@@ -471,14 +471,17 @@ module Hbase
     #----------------------------------------------------------------------------------------------
     # Returns table's structure description
     def describe(table_name)
+      tableExists(table_name)
       @admin.getTableDescriptor(TableName.valueOf(table_name)).to_s
     end
 
     def get_column_families(table_name)
+      tableExists(table_name)
       @admin.getTableDescriptor(TableName.valueOf(table_name)).getColumnFamilies()
     end
 
     def get_table_attributes(table_name)
+      tableExists(table_name)
       @admin.getTableDescriptor(TableName.valueOf(table_name)).toStringTableAttributes
     end
 
@@ -852,7 +855,7 @@ module Hbase
       family.setMobEnabled(JBoolean.valueOf(arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::IS_MOB))) if arg.include?(org.apache.hadoop.hbase.HColumnDescriptor::IS_MOB)
       family.setMobThreshold(JLong.valueOf(arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::MOB_THRESHOLD))) if arg.include?(org.apache.hadoop.hbase.HColumnDescriptor::MOB_THRESHOLD)
       if arg.include?(org.apache.hadoop.hbase.HColumnDescriptor::BLOOMFILTER)
-        bloomtype = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::BLOOMFILTER).upcase
+        bloomtype = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::BLOOMFILTER).upcase.to_sym
         unless org.apache.hadoop.hbase.regionserver.BloomType.constants.include?(bloomtype)
           raise(ArgumentError, "BloomFilter type #{bloomtype} is not supported. Use one of " + org.apache.hadoop.hbase.regionserver.StoreFile::BloomType.constants.join(" "))
         else
@@ -860,7 +863,7 @@ module Hbase
         end
       end
       if arg.include?(org.apache.hadoop.hbase.HColumnDescriptor::COMPRESSION)
-        compression = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::COMPRESSION).upcase
+        compression = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::COMPRESSION).upcase.to_sym
         unless org.apache.hadoop.hbase.io.compress.Compression::Algorithm.constants.include?(compression)
           raise(ArgumentError, "Compression #{compression} is not supported. Use one of " + org.apache.hadoop.hbase.io.compress.Compression::Algorithm.constants.join(" "))
         else
@@ -878,7 +881,7 @@ module Hbase
         end
       end
       if arg.include?(org.apache.hadoop.hbase.HColumnDescriptor::COMPRESSION_COMPACT)
-        compression = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::COMPRESSION_COMPACT).upcase
+        compression = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::COMPRESSION_COMPACT).upcase.to_sym
         unless org.apache.hadoop.hbase.io.compress.Compression::Algorithm.constants.include?(compression)
           raise(ArgumentError, "Compression #{compression} is not supported. Use one of " + org.apache.hadoop.hbase.io.compress.Compression::Algorithm.constants.join(" "))
         else
@@ -890,7 +893,7 @@ module Hbase
           family.setStoragePolicy(storage_policy)
       end
       if arg.include?(org.apache.hadoop.hbase.HColumnDescriptor::MOB_COMPACT_PARTITION_POLICY)
-        mob_partition_policy = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::MOB_COMPACT_PARTITION_POLICY).upcase
+        mob_partition_policy = arg.delete(org.apache.hadoop.hbase.HColumnDescriptor::MOB_COMPACT_PARTITION_POLICY).upcase.to_sym
         unless org.apache.hadoop.hbase.client.MobCompactPartitionPolicy.constants.include?(mob_partition_policy)
           raise(ArgumentError, "MOB_COMPACT_PARTITION_POLICY #{mob_partition_policy} is not supported. Use one of " + org.apache.hadoop.hbase.client.MobCompactPartitionPolicy.constants.join(" "))
         else
diff --git a/hbase-shell/src/main/ruby/hbase/security.rb b/hbase-shell/src/main/ruby/hbase/security.rb
index 4c884d6..6dd1fe0 100644
--- a/hbase-shell/src/main/ruby/hbase/security.rb
+++ b/hbase-shell/src/main/ruby/hbase/security.rb
@@ -154,7 +154,7 @@ module Hbase
             yield(user_name, "#{namespace},#{table},#{family},#{qualifier}: #{action.to_s}")
           else
             res[user_name] ||= {}
-            res[user_name][family + ":" +qualifier] = action
+            res[user_name]["#{family}:#{qualifier}"] = action
           end
           count += 1
       end
diff --git a/hbase-shell/src/main/ruby/hbase_constants.rb b/hbase-shell/src/main/ruby/hbase_constants.rb
index 55ae9e7..919ec6a 100644
--- a/hbase-shell/src/main/ruby/hbase_constants.rb
+++ b/hbase-shell/src/main/ruby/hbase_constants.rb
@@ -27,9 +27,9 @@
 # whether the table exists and returns nil regardless.
 include Java
 
-include_class('java.lang.Integer') {|package,name| "J#{name}" }
-include_class('java.lang.Long') {|package,name| "J#{name}" }
-include_class('java.lang.Boolean') {|package,name| "J#{name}" }
+java_import('java.lang.Integer') { |_package, name| "J#{name}" }
+java_import('java.lang.Long') { |_package, name| "J#{name}" }
+java_import('java.lang.Boolean') { |_package, name| "J#{name}" }
 
 module HBaseConstants
   COLUMN = "COLUMN"
diff --git a/hbase-shell/src/main/ruby/irb/hirb.rb b/hbase-shell/src/main/ruby/irb/hirb.rb
index b32e691..4d6d277 100644
--- a/hbase-shell/src/main/ruby/irb/hirb.rb
+++ b/hbase-shell/src/main/ruby/irb/hirb.rb
@@ -19,7 +19,7 @@
 require 'rbconfig'
 
 module IRB
-  WINDOZE = Config::CONFIG['host_os'] =~ /mswin|mingw/
+  WINDOZE = RbConfig::CONFIG['host_os'] =~ /mswin|mingw/
 
   # Subclass of IRB so can intercept methods
   class HIRB < Irb
diff --git a/hbase-shell/src/main/ruby/shell/commands.rb b/hbase-shell/src/main/ruby/shell/commands.rb
index 08f2e11..5f7a2e6 100644
--- a/hbase-shell/src/main/ruby/shell/commands.rb
+++ b/hbase-shell/src/main/ruby/shell/commands.rb
@@ -39,7 +39,9 @@ module Shell
         translate_hbase_exceptions(*args) { send(cmd, *args) }
       rescue => e
         rootCause = e
-        while rootCause != nil && rootCause.respond_to?(:cause) && rootCause.cause != nil
+
+        # JRuby9000 made RubyException respond to cause, ignore it for back compat
+        while !rootCause.is_a?(Exception) && rootCause.respond_to?(:cause) && !rootCause.cause.nil?
           rootCause = rootCause.cause
         end
         if @shell.interactive?
@@ -105,13 +107,8 @@ module Shell
 
       def translate_hbase_exceptions(*args)
         yield
-      rescue => e
-        # Since exceptions will be thrown from the java code, 'e' will always be NativeException.
-        # Check for the original java exception and use it if present.
-        raise e unless e.respond_to?(:cause) && e.cause != nil
-        cause = e.cause
-
-         # let individual command handle exceptions first
+      rescue => cause
+        # let individual command handle exceptions first
         if self.respond_to?(:handle_exceptions)
           self.handle_exceptions(cause, *args)
         end
@@ -153,7 +150,7 @@ module Shell
         end
 
         # Throw the other exception which hasn't been handled above
-        raise e
+        raise cause
       end
     end
   end
diff --git a/hbase-shell/src/main/ruby/shell/formatter.rb b/hbase-shell/src/main/ruby/shell/formatter.rb
index aa81c86..fb481e0 100644
--- a/hbase-shell/src/main/ruby/shell/formatter.rb
+++ b/hbase-shell/src/main/ruby/shell/formatter.rb
@@ -31,10 +31,13 @@ module Shell
       end
 
       def refresh_width()
+        @max_width = 0
         if $stdout.tty?
-          @max_width = Java::jline.Terminal.getTerminal().getTerminalWidth()
-        else
-          @max_width = 0
+          begin
+            @max_width = Java::jline.TerminalFactory.get.getWidth
+          rescue NameError => e
+            # nocommit debug log and ignore
+          end
         end
       end
 
diff --git a/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java b/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java
index 1403805..c6ef6e2 100644
--- a/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java
+++ b/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/AbstractTestShell.java
@@ -57,7 +57,7 @@ public abstract class AbstractTestShell {
     List<String> loadPaths = new ArrayList<>(2);
     loadPaths.add("src/main/ruby");
     loadPaths.add("src/test/ruby");
-    jruby.getProvider().setLoadPaths(loadPaths);
+    jruby.setLoadPaths(loadPaths);
     jruby.put("$TEST_CLUSTER", TEST_UTIL);
     System.setProperty("jruby.jit.logging.verbose", "true");
     System.setProperty("jruby.jit.logging", "true");
diff --git a/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestShellNoCluster.java b/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestShellNoCluster.java
index 339f5a1..871240c 100644
--- a/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestShellNoCluster.java
+++ b/hbase-shell/src/test/java/org/apache/hadoop/hbase/client/TestShellNoCluster.java
@@ -39,7 +39,7 @@ public class TestShellNoCluster extends AbstractTestShell {
     List<String> loadPaths = new ArrayList<>(2);
     loadPaths.add("src/main/ruby");
     loadPaths.add("src/test/ruby");
-    jruby.getProvider().setLoadPaths(loadPaths);
+    jruby.setLoadPaths(loadPaths);
     jruby.put("$TEST_CLUSTER", TEST_UTIL);
     System.setProperty("jruby.jit.logging.verbose", "true");
     System.setProperty("jruby.jit.logging", "true");
diff --git a/hbase-shell/src/test/rsgroup/org/apache/hadoop/hbase/client/rsgroup/TestShellRSGroups.java b/hbase-shell/src/test/rsgroup/org/apache/hadoop/hbase/client/rsgroup/TestShellRSGroups.java
index 26da816..b81249b 100644
--- a/hbase-shell/src/test/rsgroup/org/apache/hadoop/hbase/client/rsgroup/TestShellRSGroups.java
+++ b/hbase-shell/src/test/rsgroup/org/apache/hadoop/hbase/client/rsgroup/TestShellRSGroups.java
@@ -77,7 +77,7 @@ public class TestShellRSGroups {
     List<String> loadPaths = new ArrayList<>(2);
     loadPaths.add(basePath+"/src/main/ruby");
     loadPaths.add(basePath+"/src/test/ruby");
-    jruby.getProvider().setLoadPaths(loadPaths);
+    jruby.setLoadPaths(loadPaths);
     jruby.put("$TEST_CLUSTER", TEST_UTIL);
     System.setProperty("jruby.jit.logging.verbose", "true");
     System.setProperty("jruby.jit.logging", "true");
diff --git a/hbase-shell/src/test/ruby/hbase/admin_test.rb b/hbase-shell/src/test/ruby/hbase/admin_test.rb
index de2891b..9a5b749 100644
--- a/hbase-shell/src/test/ruby/hbase/admin_test.rb
+++ b/hbase-shell/src/test/ruby/hbase/admin_test.rb
@@ -248,8 +248,8 @@ module Hbase
     #-------------------------------------------------------------------------------
 
     define_test "describe should fail for non-existent tables" do
-      assert_raise(NativeException) do
-        admin.describe('.NOT.EXISTS.')
+      assert_raise(ArgumentError) do
+        admin.describe('NOT.EXISTS')
       end
     end
 
diff --git a/pom.xml b/pom.xml
index c66c93c..6144df2 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1262,7 +1262,7 @@
     <jersey.version>2.22.2</jersey.version>
     <jetty6.version>6.1.26</jetty6.version>
     <jetty.jspapi.version>6.1.14</jetty.jspapi.version>
-    <jruby.version>1.6.8</jruby.version>
+    <jruby.version>9.1.8.0</jruby.version>
     <junit.version>4.12</junit.version>
     <hamcrest.version>1.3</hamcrest.version>
     <htrace.version>3.1.0-incubating</htrace.version>
-- 
1.9.1

