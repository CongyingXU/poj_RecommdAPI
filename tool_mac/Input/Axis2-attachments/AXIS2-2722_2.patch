Index: src/javax/xml/ws/EndpointReference.java
===================================================================
--- src/javax/xml/ws/EndpointReference.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/EndpointReference.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,49 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws;
+
+import java.io.ByteArrayOutputStream;
+
+import javax.xml.transform.Result;
+import javax.xml.transform.Source;
+import javax.xml.transform.stream.StreamResult;
+import javax.xml.ws.spi.Provider;
+
+public abstract class EndpointReference {
+    protected EndpointReference() {
+    }
+    
+    public static EndpointReference readFrom(Source eprInfoset) {
+        return Provider.provider().readEndpointReference(eprInfoset);
+    }
+    
+    public abstract void writeTo(Result result);
+    
+    public <T> T getPort(Class<T> serviceEndpointInterface, WebServiceFeature... features) {
+        return Provider.provider().getPort(this, serviceEndpointInterface, features);
+    }
+    
+    @Override
+    public String toString() {
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        writeTo(new StreamResult(baos));
+        
+        return baos.toString();
+    }
+}
Index: src/javax/xml/ws/Service.java
===================================================================
--- src/javax/xml/ws/Service.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/Service.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -23,7 +23,6 @@
 import javax.xml.ws.handler.HandlerResolver;
 import javax.xml.ws.spi.Provider;
 import javax.xml.ws.spi.ServiceDelegate;
-import java.net.URI;
 import java.net.URL;
 import java.util.Iterator;
 import java.util.concurrent.Executor;
@@ -44,6 +43,21 @@
         return (T) _delegate.getPort(serviceEndpointInterface);
     }
 
+    //TODO
+    public <T> T getPort(QName portName, Class<T> serviceEndpointInterface, WebServiceFeature... features) {
+        return (T) _delegate.getPort(portName, serviceEndpointInterface, features);
+    }
+    
+    //TODO
+    public <T> T getPort(Class<T> serviceEndpointInterface, WebServiceFeature... features) {
+        return (T) _delegate.getPort(serviceEndpointInterface, features);
+    }
+    
+    //TODO
+    public <T> T getPort(EndpointReference endpointReference, Class<T> serviceEndpointInterface, WebServiceFeature... features) {
+        return (T) _delegate.getPort(endpointReference, serviceEndpointInterface, features);
+    }
+    
     public void addPort(QName portName, String bindingId, String endpointAddress) {
         _delegate.addPort(portName, bindingId, endpointAddress);
     }
@@ -52,15 +66,35 @@
         return _delegate.createDispatch(portName, type, mode);
     }
 
-    public Dispatch<java.lang.Object> createDispatch(QName portName, JAXBContext context, Mode mode) {
+    public Dispatch<Object> createDispatch(QName portName, JAXBContext context, Mode mode) {
         return _delegate.createDispatch(portName, context, mode);
     }
 
+    //TODO
+    public <T> Dispatch<T> createDispatch(QName portName, Class<T> type, Service.Mode mode, WebServiceFeature... features) {
+        return _delegate.createDispatch(portName, type, mode, features);
+    }
+    
+    //TODO
+    public <T> Dispatch<T> createDispatch(EndpointReference endpointReference, Class<T> type, Service.Mode mode, WebServiceFeature... features) {
+        return _delegate.createDispatch(endpointReference, type, mode, features);
+    }
+    
+    //TODO
+    public Dispatch<Object> createDispatch(QName portName, JAXBContext context, Service.Mode mode, WebServiceFeature... features) {
+        return _delegate.createDispatch(portName, context, mode, features);
+    }
+    
+    //TODO
+    public Dispatch<Object> createDispatch(EndpointReference endpointReference, JAXBContext context, Service.Mode mode, WebServiceFeature... features) {
+        return _delegate.createDispatch(endpointReference, context, mode, features);
+    }
+    
     public QName getServiceName() {
         return _delegate.getServiceName();
     }
 
-    public Iterator<javax.xml.namespace.QName> getPorts() {
+    public Iterator<QName> getPorts() {
         return _delegate.getPorts();
     }
 
Index: src/javax/xml/ws/WebServiceContext.java
===================================================================
--- src/javax/xml/ws/WebServiceContext.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/WebServiceContext.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -23,6 +23,12 @@
 
 public interface WebServiceContext {
 
+    //TODO
+    public abstract EndpointReference getEndpointReference(org.w3c.dom.Element... referenceParameters);
+
+    //TODO
+    public abstract <T extends EndpointReference> T getEndpointReference(Class<T> clazz, org.w3c.dom.Element... referenceParameters);
+
     public abstract MessageContext getMessageContext();
 
     public abstract Principal getUserPrincipal();
Index: src/javax/xml/ws/FaultAction.java
===================================================================
--- src/javax/xml/ws/FaultAction.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/FaultAction.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,37 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws;                                                                                         
+                                                                                                              
+import java.lang.annotation.RetentionPolicy;                                                                  
+import java.lang.annotation.ElementType;                                                                      
+import java.lang.annotation.Retention;                                                                        
+import java.lang.annotation.Target;                                                                           
+import java.lang.annotation.Documented;                                                                       
+                                                                                                              
+@Documented                                                                                                   
+@Retention(value=RetentionPolicy.RUNTIME)                                                                     
+@Target(value=ElementType.METHOD)                                                                               
+                                                                                                              
+public @interface FaultAction {                                                                            
+    
+    public Class className();
+    
+    public String value() default "";
+                                                                                                              
+}
Index: src/javax/xml/ws/WebServiceFeature.java
===================================================================
--- src/javax/xml/ws/WebServiceFeature.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/WebServiceFeature.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,32 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws;
+
+public abstract class WebServiceFeature {
+    protected boolean enabled;
+    
+    protected WebServiceFeature() {
+    }
+    
+    public abstract String getID();
+    
+    public boolean isEnabled() {
+        return enabled;
+    }
+}
Index: src/javax/xml/ws/Binding.java
===================================================================
--- src/javax/xml/ws/Binding.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/Binding.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -23,6 +23,9 @@
 
 public interface Binding {
 
+    //TODO
+    public abstract String getBindingID();
+    
     public abstract List<Handler> getHandlerChain();
 
     public abstract void setHandlerChain(List<Handler> list);
Index: src/javax/xml/ws/spi/WebServiceFeatureAnnotation.java
===================================================================
--- src/javax/xml/ws/spi/WebServiceFeatureAnnotation.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/spi/WebServiceFeatureAnnotation.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,39 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws.spi;                                                                                         
+                                                                                                              
+import java.lang.annotation.RetentionPolicy;                                                                  
+import java.lang.annotation.ElementType;                                                                      
+import java.lang.annotation.Retention;                                                                        
+import java.lang.annotation.Target;                                                                           
+import java.lang.annotation.Documented;                                                                       
+
+import javax.xml.ws.WebServiceFeature;
+                                                                                                              
+@Documented                                                                                                   
+@Retention(value=RetentionPolicy.RUNTIME)                                                                     
+@Target(value=ElementType.ANNOTATION_TYPE)                                                                               
+                                                                                                              
+public @interface WebServiceFeatureAnnotation {                                                                            
+                                                                                                              
+    public String id();
+    
+    public Class<? extends WebServiceFeature> bean();
+                                                                                                              
+}
Index: src/javax/xml/ws/spi/Provider.java
===================================================================
--- src/javax/xml/ws/spi/Provider.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/spi/Provider.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -16,12 +16,19 @@
  * specific language governing permissions and limitations
  * under the License.
  */
-
 package javax.xml.ws.spi;
 
 import javax.xml.namespace.QName;
+import javax.xml.transform.Source;
 import javax.xml.ws.Endpoint;
+import javax.xml.ws.EndpointReference;
+import javax.xml.ws.WebServiceFeature;
+import javax.xml.ws.wsaddressing.W3CEndpointReference;
+
+import org.w3c.dom.Element;
+
 import java.net.URL;
+import java.util.List;
 
 public abstract class Provider {
 
@@ -29,7 +36,7 @@
     }
 
     public static Provider provider() {
-        return (Provider) FactoryFinder.find("javax.xml.ws.spi.Provider", DEFAULT_JAXWSPROVIDER);
+        return (Provider) FactoryFinder.find(JAXWSPROVIDER_PROPERTY, DEFAULT_JAXWSPROVIDER);
     }
 
     public abstract ServiceDelegate createServiceDelegate(URL url, QName qname, Class class1);
@@ -38,6 +45,20 @@
 
     public abstract Endpoint createAndPublishEndpoint(String s, Object obj);
 
+    //TODO
+    public abstract EndpointReference readEndpointReference(Source eprInfoset);
+    
+    //TODO
+    public abstract <T> T getPort(EndpointReference endpointReference, Class<T> serviceEndpointInterface, WebServiceFeature... features);
+    
+    //TODO
+    public abstract W3CEndpointReference createW3CEndpointReference(String address,
+            QName serviceName,
+            QName portName,
+            List<Element> metadata,
+            String wsdlDocumentLocation,
+            List<Element> referenceParameters);
+    
     public static final String JAXWSPROVIDER_PROPERTY = "javax.xml.ws.spi.Provider";
     private static final String DEFAULT_JAXWSPROVIDER = "org.apache.axis2.jaxws.spi.Provider";
 }
Index: src/javax/xml/ws/spi/ServiceDelegate.java
===================================================================
--- src/javax/xml/ws/spi/ServiceDelegate.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/spi/ServiceDelegate.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -21,8 +21,10 @@
 import javax.xml.bind.JAXBContext;
 import javax.xml.namespace.QName;
 import javax.xml.ws.Dispatch;
+import javax.xml.ws.EndpointReference;
+import javax.xml.ws.Service;
+import javax.xml.ws.WebServiceFeature;
 import javax.xml.ws.handler.HandlerResolver;
-import java.net.URI;
 import java.net.URL;
 import java.util.Iterator;
 import java.util.concurrent.Executor;
@@ -36,15 +38,36 @@
 
     public abstract <T> T getPort(Class<T> class1);
 
+    //TODO
+    public abstract <T> T getPort(QName portName, Class<T> serviceEndpointInterface, WebServiceFeature... features);
+    
+    //TODO
+    public abstract <T> T getPort(EndpointReference endpointReference, Class<T> serviceEndpointInterface, WebServiceFeature... features);
+    
+    //TODO
+    public abstract <T> T getPort(Class<T> serviceEndpointInterface, WebServiceFeature... features);
+    
     public abstract void addPort(QName qname, String bindingId, String s);
 
-    public abstract <T>Dispatch<T> createDispatch(QName qname, Class<T> class1, javax.xml.ws.Service.Mode mode);
+    public abstract <T>Dispatch<T> createDispatch(QName qname, Class<T> class1, Service.Mode mode);
 
-    public abstract Dispatch<java.lang.Object> createDispatch(QName qname, JAXBContext jaxbcontext, javax.xml.ws.Service.Mode mode);
+    public abstract Dispatch<Object> createDispatch(QName qname, JAXBContext jaxbcontext, javax.xml.ws.Service.Mode mode);
 
+    //TODO
+    public abstract <T> Dispatch<T> createDispatch(QName portName, Class<T> type, Service.Mode mode, WebServiceFeature... features);
+    
+    //TODO
+    public abstract <T> Dispatch<T> createDispatch(EndpointReference endpointReference, Class<T> type, Service.Mode mode, WebServiceFeature... features);
+    
+    //TODO
+    public abstract Dispatch<Object> createDispatch(QName portName, JAXBContext context, Service.Mode mode, WebServiceFeature... features);
+    
+    //TODO
+    public abstract Dispatch<Object> createDispatch(EndpointReference endpointReference, JAXBContext context, Service.Mode mode, WebServiceFeature... features);
+    
     public abstract QName getServiceName();
 
-    public abstract Iterator<javax.xml.namespace.QName> getPorts();
+    public abstract Iterator<QName> getPorts();
 
     public abstract URL getWSDLDocumentLocation();
 
Index: src/javax/xml/ws/wsaddressing/W3CEndpointReferenceBuilder.java
===================================================================
--- src/javax/xml/ws/wsaddressing/W3CEndpointReferenceBuilder.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/wsaddressing/W3CEndpointReferenceBuilder.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws.wsaddressing;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.xml.namespace.QName;
+import javax.xml.ws.spi.Provider;
+
+import org.w3c.dom.Element;
+
+public final class W3CEndpointReferenceBuilder {
+    private String address;
+    private QName serviceName;
+    private QName endpointName;
+    private String wsdlDocumentLocation;
+    private List<Element> referenceParameters;
+    private List<Element> metadataElements;
+    
+    public W3CEndpointReferenceBuilder() {
+    }
+    
+    public W3CEndpointReferenceBuilder address(String address) {
+        this.address = address;
+        return this;
+    }
+    
+    public W3CEndpointReferenceBuilder serviceName(QName serviceName) {
+        this.serviceName = serviceName;
+        return this;
+    }
+    
+    public W3CEndpointReferenceBuilder endpointName(QName endpointName) {
+        //TODO NLS enable
+        if (this.serviceName == null) {
+            throw new IllegalStateException("The endpoint qname cannot be set before the service qname.");
+        }
+        
+        this.endpointName = endpointName;
+        return this;
+    }
+    
+    public W3CEndpointReferenceBuilder wsdlDocumentLocation(String wsdlDocumentLocation) {
+        this.wsdlDocumentLocation = wsdlDocumentLocation;
+        return this;
+    }
+    
+    public W3CEndpointReferenceBuilder referenceParameter(Element referenceParameter) {
+        //TODO NLS enable
+        if (referenceParameter == null) {
+            throw new IllegalArgumentException("A reference parameter cannot be null.");
+        }
+        
+        if (this.referenceParameters == null) {
+            this.referenceParameters = new ArrayList<Element>();
+        }
+        
+        this.referenceParameters.add(referenceParameter);
+        return this;
+    }
+    
+    public W3CEndpointReferenceBuilder metadata(Element metadataElement) {
+        //TODO NLS enable
+        if (metadataElement == null) {
+            throw new IllegalArgumentException("A metadata element cannot be null.");
+        }
+        
+        if (this.metadataElements == null) {
+            this.metadataElements = new ArrayList<Element>();
+        }
+        
+        this.metadataElements.add(metadataElement);
+        return this;
+    }
+    
+    public W3CEndpointReference build() {
+        return Provider.provider().createW3CEndpointReference(address,
+                serviceName,
+                endpointName,
+                metadataElements,
+                wsdlDocumentLocation,
+                referenceParameters);
+    }
+
+    @Override
+    public String toString() {
+        // TODO Auto-generated method stub
+        return super.toString();
+    }
+}
Index: src/javax/xml/ws/wsaddressing/package-info.java
===================================================================
--- src/javax/xml/ws/wsaddressing/package-info.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/wsaddressing/package-info.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,20 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+@javax.xml.bind.annotation.XmlSchema(namespace = "http://www.w3.org/2005/08/addressing", elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)
+package javax.xml.ws.wsaddressing;
Index: src/javax/xml/ws/wsaddressing/W3CEndpointReference.java
===================================================================
--- src/javax/xml/ws/wsaddressing/W3CEndpointReference.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/wsaddressing/W3CEndpointReference.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,251 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws.wsaddressing;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.xml.bind.JAXBContext;
+import javax.xml.bind.JAXBElement;
+import javax.xml.bind.JAXBException;
+import javax.xml.bind.Marshaller;
+import javax.xml.bind.Unmarshaller;
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlAnyAttribute;
+import javax.xml.bind.annotation.XmlAnyElement;
+import javax.xml.bind.annotation.XmlElement;
+import javax.xml.bind.annotation.XmlSchemaType;
+import javax.xml.bind.annotation.XmlTransient;
+import javax.xml.bind.annotation.XmlType;
+import javax.xml.bind.annotation.XmlValue;
+import javax.xml.namespace.QName;
+import javax.xml.transform.Result;
+import javax.xml.transform.Source;
+import javax.xml.ws.EndpointReference;
+import javax.xml.ws.WebServiceException;
+
+/**
+ * <p>Java class for EndpointReferenceType complex type.
+ * 
+ * <p>The following schema fragment specifies the expected content contained within this class.
+ * 
+ * <pre>
+ * &lt;complexType name="EndpointReferenceType">
+ *   &lt;complexContent>
+ *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+ *       &lt;sequence>
+ *         &lt;element name="Address" type="{http://www.w3.org/2005/08/addressing}AttributedURIType"/>
+ *         &lt;element ref="{http://www.w3.org/2005/08/addressing}ReferenceParameters" minOccurs="0"/>
+ *         &lt;element ref="{http://www.w3.org/2005/08/addressing}Metadata" minOccurs="0"/>
+ *         &lt;any/>
+ *       &lt;/sequence>
+ *     &lt;/restriction>
+ *   &lt;/complexContent>
+ * &lt;/complexType>
+ * </pre>
+ * 
+ * 
+ */
+@XmlAccessorType(XmlAccessType.FIELD)
+@XmlType(name = "EndpointReferenceType", propOrder = {
+    "address",
+    "referenceParameters",
+    "metadata",
+    "any"
+})
+public final class W3CEndpointReference extends EndpointReference {
+    @XmlTransient
+    protected static volatile JAXBContext jaxbContext;
+    @XmlTransient
+    protected static final String NS = "http://www.w3.org/2005/08/addressing";
+    @XmlTransient
+    protected static final QName NAME = new QName(NS, "EndpointReference", "wsa");
+    
+    @XmlElement(name = "Address", required = true)
+    protected AttributedURIType address;
+    @XmlElement(name = "ReferenceParameters")
+    protected ReferenceParametersType referenceParameters;
+    @XmlElement(name = "Metadata")
+    protected MetadataType metadata;
+    @XmlAnyElement(lax = true)
+    protected List<Object> any;
+    @XmlAnyAttribute
+    private Map<QName, String> otherAttributes = new HashMap<QName, String>();
+
+    protected W3CEndpointReference() {
+    }
+    
+    public W3CEndpointReference(Source eprInfoset) {
+        super();
+        
+        try {
+            JAXBContext jaxbContext = getJAXBContext();
+            Unmarshaller um = jaxbContext.createUnmarshaller();
+            JAXBElement<W3CEndpointReference> element =
+                um.unmarshal(eprInfoset, W3CEndpointReference.class);
+            W3CEndpointReference w3cEPR = element.getValue();
+            
+            address = w3cEPR.address;
+            referenceParameters = w3cEPR.referenceParameters;
+            metadata = w3cEPR.metadata;
+            any = w3cEPR.any;
+            otherAttributes.putAll(w3cEPR.otherAttributes);
+        }
+        catch (Exception e) {
+            //TODO NLS enable.
+            throw new WebServiceException("Unable to create W3C endpoint reference.", e);
+        }
+    }
+    
+    @Override
+    public void writeTo(Result result) {
+        if (result == null) {
+            //TODO NLS enable
+            throw new IllegalArgumentException("Null is not allowed.");
+        }
+        
+        try {
+            JAXBContext jaxbContext = getJAXBContext();
+            Marshaller m = jaxbContext.createMarshaller();
+            m.setProperty(Marshaller.JAXB_FRAGMENT, Boolean.TRUE);
+            JAXBElement<W3CEndpointReference> element =
+                new JAXBElement<W3CEndpointReference>(NAME, W3CEndpointReference.class, this);
+            m.marshal(element, result);
+        }
+        catch (Exception e) {
+            //TODO NLS enable
+            throw new WebServiceException("writeTo failure.", e);
+        }
+    }
+
+    private JAXBContext getJAXBContext() throws JAXBException {
+        //This is an implementation of double-checked locking.
+        //It works because jaxbContext is volatile.
+        if (jaxbContext == null) {
+            synchronized (W3CEndpointReference.class) {
+                if (jaxbContext == null)
+                    jaxbContext = JAXBContext.newInstance(W3CEndpointReference.class);
+            }
+        }
+        
+        return jaxbContext;
+    }
+
+    /**
+     * <p>Java class for AttributedURIType complex type.
+     * 
+     * <p>The following schema fragment specifies the expected content contained within this class.
+     * 
+     * <pre>
+     * &lt;complexType name="AttributedURIType">
+     *   &lt;simpleContent>
+     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>anyURI">
+     *     &lt;/extension>
+     *   &lt;/simpleContent>
+     * &lt;/complexType>
+     * </pre>
+     * 
+     * 
+     */
+    @XmlAccessorType(XmlAccessType.FIELD)
+    @XmlType(name = "AttributedURIType", propOrder = {
+        "value"
+    })
+    private static class AttributedURIType {
+
+        @XmlValue
+        @XmlSchemaType(name = "anyURI")
+        protected String value;
+        @XmlAnyAttribute
+        private Map<QName, String> otherAttributes = new HashMap<QName, String>();
+        
+        public AttributedURIType() {
+        }
+    }
+
+    /**
+     * <p>Java class for ReferenceParametersType complex type.
+     * 
+     * <p>The following schema fragment specifies the expected content contained within this class.
+     * 
+     * <pre>
+     * &lt;complexType name="ReferenceParametersType">
+     *   &lt;complexContent>
+     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+     *       &lt;sequence>
+     *         &lt;any/>
+     *       &lt;/sequence>
+     *     &lt;/restriction>
+     *   &lt;/complexContent>
+     * &lt;/complexType>
+     * </pre>
+     * 
+     * 
+     */
+    @XmlAccessorType(XmlAccessType.FIELD)
+    @XmlType(name = "ReferenceParametersType", propOrder = {
+        "any"
+    })
+    private static class ReferenceParametersType {
+
+        @XmlAnyElement(lax = true)
+        protected List<Object> any;
+        @XmlAnyAttribute
+        private Map<QName, String> otherAttributes = new HashMap<QName, String>();
+        
+        public ReferenceParametersType() {
+        }
+    }
+
+    /**
+     * <p>Java class for MetadataType complex type.
+     * 
+     * <p>The following schema fragment specifies the expected content contained within this class.
+     * 
+     * <pre>
+     * &lt;complexType name="MetadataType">
+     *   &lt;complexContent>
+     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+     *       &lt;sequence>
+     *         &lt;any/>
+     *       &lt;/sequence>
+     *     &lt;/restriction>
+     *   &lt;/complexContent>
+     * &lt;/complexType>
+     * </pre>
+     * 
+     * 
+     */
+    @XmlAccessorType(XmlAccessType.FIELD)
+    @XmlType(name = "MetadataType", propOrder = {
+        "any"
+    })
+    private static class MetadataType {
+
+        @XmlAnyElement(lax = true)
+        protected List<Object> any;
+        @XmlAnyAttribute
+        private Map<QName, String> otherAttributes = new HashMap<QName, String>();
+        
+        public MetadataType() {
+        }
+    }
+}
Index: src/javax/xml/ws/BindingProvider.java
===================================================================
--- src/javax/xml/ws/BindingProvider.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/BindingProvider.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -21,6 +21,11 @@
 import java.util.Map;
 
 public interface BindingProvider {
+    //TODO
+    public abstract EndpointReference getEndpointReference();
+    
+    //TODO
+    public abstract <T extends EndpointReference> T getEndpointReference(Class<T> clazz);
 
     public abstract Map<java.lang.String, java.lang.Object>      getRequestContext();
 
Index: src/javax/xml/ws/handler/MessageContext.java
===================================================================
--- src/javax/xml/ws/handler/MessageContext.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/handler/MessageContext.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -38,6 +38,7 @@
     public static final String WSDL_INTERFACE = "javax.xml.ws.wsdl.interface";
     public static final String WSDL_OPERATION = "javax.xml.ws.wsdl.operation";
     public static final String HTTP_RESPONSE_CODE = "javax.xml.ws.http.response.code";
+    public static final String REFERENCE_PARAMETERS = "javax.xml.ws.reference.parameters";
     public static final String HTTP_REQUEST_HEADERS = "javax.xml.ws.http.request.headers";
     public static final String HTTP_RESPONSE_HEADERS = "javax.xml.ws.http.response.headers";
     public static final String HTTP_REQUEST_METHOD = "javax.xml.ws.http.request.method";
Index: src/javax/xml/ws/RespectBinding.java
===================================================================
--- src/javax/xml/ws/RespectBinding.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/RespectBinding.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,38 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws;                                                                                         
+                                                                                                              
+import java.lang.annotation.RetentionPolicy;                                                                  
+import java.lang.annotation.ElementType;                                                                      
+import java.lang.annotation.Retention;                                                                        
+import java.lang.annotation.Target;                                                                           
+import java.lang.annotation.Documented;                                                                       
+
+import javax.xml.ws.spi.WebServiceFeatureAnnotation;
+                                                                                                              
+@Documented                                                                                                   
+@Retention(value=RetentionPolicy.RUNTIME)                                                                     
+@Target(value=ElementType.TYPE)                                                                               
+@WebServiceFeatureAnnotation(id=RespectBindingFeature.ID, bean=RespectBindingFeature.class)                                                                                                              
+
+public @interface RespectBinding {                                                                            
+                                                                                                              
+    public boolean enabled() default true;
+                                                                                                              
+}
Index: src/javax/xml/ws/RespectBindingFeature.java
===================================================================
--- src/javax/xml/ws/RespectBindingFeature.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/RespectBindingFeature.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,37 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws;
+
+public final class RespectBindingFeature extends WebServiceFeature {
+    public static final String ID = "javax.xml.ws.RespectBindingFeature";
+    
+    public RespectBindingFeature() {
+        this(true);
+    }
+    
+    public RespectBindingFeature(boolean enabled) {
+        super();
+        this.enabled = enabled;
+    }
+    
+    @Override
+    public String getID() {
+        return ID;
+    }
+}
Index: src/javax/xml/ws/Action.java
===================================================================
--- src/javax/xml/ws/Action.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/Action.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,39 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws;                                                                                         
+                                                                                                              
+import java.lang.annotation.RetentionPolicy;                                                                  
+import java.lang.annotation.ElementType;                                                                      
+import java.lang.annotation.Retention;                                                                        
+import java.lang.annotation.Target;                                                                           
+import java.lang.annotation.Documented;                                                                       
+                                                                                                              
+@Documented                                                                                                   
+@Retention(value=RetentionPolicy.RUNTIME)                                                                     
+@Target(value=ElementType.METHOD)                                                                               
+                                                                                                              
+public @interface Action {                                                                            
+                                                                                                              
+    public FaultAction[] fault() default {};
+    
+    public String input() default "";
+    
+    public String output() default "";
+                                                                                                              
+}
Index: src/javax/xml/ws/Endpoint.java
===================================================================
--- src/javax/xml/ws/Endpoint.java	(.../trunk/java/modules/jaxws-api)	(revision 614841)
+++ src/javax/xml/ws/Endpoint.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -64,6 +64,12 @@
 
     public abstract void setProperties(Map<java.lang.String, java.lang.Object> map);
 
+    //TODO
+    public abstract EndpointReference getEndpointReference(org.w3c.dom.Element... referenceParameters);
+
+    //TODO
+    public abstract <T extends EndpointReference> T getEndpointReference(Class<T> clazz, org.w3c.dom.Element... referenceParameters);
+
     public static final String WSDL_SERVICE = "javax.xml.ws.wsdl.service";
     public static final String WSDL_PORT = "javax.xml.ws.wsdl.port";
 }
Index: src/javax/xml/ws/soap/AddressingFeature.java
===================================================================
--- src/javax/xml/ws/soap/AddressingFeature.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/soap/AddressingFeature.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,49 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws.soap;
+
+import javax.xml.ws.WebServiceFeature;
+
+public final class AddressingFeature extends WebServiceFeature {
+    public static final String ID = "http://www.w3.org/2005/08/addressing/module";
+    
+    protected boolean required;
+    
+    public AddressingFeature() {
+        this(true, false);
+    }
+    
+    public AddressingFeature(boolean enabled) {
+        this(enabled, false);
+    }
+    
+    public AddressingFeature(boolean enabled, boolean required) {
+        this.enabled  = enabled;
+        this.required = required;
+    }
+
+    public boolean isRequired() {
+        return required;
+    }
+    
+    @Override
+    public String getID() {
+        return ID;
+    }
+}
Index: src/javax/xml/ws/soap/Addressing.java
===================================================================
--- src/javax/xml/ws/soap/Addressing.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/soap/Addressing.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,40 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws.soap;                                                                                         
+                                                                                                              
+import java.lang.annotation.RetentionPolicy;                                                                  
+import java.lang.annotation.ElementType;                                                                      
+import java.lang.annotation.Retention;                                                                        
+import java.lang.annotation.Target;                                                                           
+import java.lang.annotation.Documented;
+
+import javax.xml.ws.spi.WebServiceFeatureAnnotation;
+                                                                                                              
+@Documented                                                                                                   
+@Retention(value=RetentionPolicy.RUNTIME)                                                                     
+@Target(value=ElementType.TYPE)                                                                               
+@WebServiceFeatureAnnotation(id=AddressingFeature.ID, bean=AddressingFeature.class)
+                                                                                                              
+public @interface Addressing {                                                                            
+                                                                                                              
+    public boolean enabled() default true;
+    
+    public boolean required() default false;
+                                                                                                              
+}
Index: src/javax/xml/ws/soap/MTOMFeature.java
===================================================================
--- src/javax/xml/ws/soap/MTOMFeature.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/soap/MTOMFeature.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,60 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws.soap;
+
+import javax.xml.ws.WebServiceException;
+import javax.xml.ws.WebServiceFeature;
+
+public final class MTOMFeature extends WebServiceFeature {
+    public static final String ID = "http://www.w3.org/2004/08/soap/features/http-optimization";
+    
+    protected int threshold;
+    
+    public MTOMFeature() {
+        this(true, 0);
+    }
+    
+    public MTOMFeature(boolean enabled) {
+        this(enabled, 0);
+    }
+    
+    public MTOMFeature(int threshold) {
+        this(true, threshold);
+    }
+    
+    public MTOMFeature(boolean enabled, int threshold) {
+        super();
+        
+        //TODO NLS enable
+        if (threshold < 0)
+            throw new WebServiceException("MTOM threshold size cannot be less than zero. It was " + threshold);
+        
+        this.enabled   = enabled;
+        this.threshold = threshold;
+    }
+
+    public int getThreshold() {
+        return threshold;
+    }
+    
+    @Override
+    public String getID() {
+        return ID;
+    }
+}
Index: src/javax/xml/ws/soap/MTOM.java
===================================================================
--- src/javax/xml/ws/soap/MTOM.java	(.../trunk/java/modules/jaxws-api)	(revision 0)
+++ src/javax/xml/ws/soap/MTOM.java	(.../branches/java/jaxws21/modules/jaxws-api)	(revision 614876)
@@ -0,0 +1,40 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *      
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package javax.xml.ws.soap;                                                                                         
+                                                                                                              
+import java.lang.annotation.RetentionPolicy;                                                                  
+import java.lang.annotation.ElementType;                                                                      
+import java.lang.annotation.Retention;                                                                        
+import java.lang.annotation.Target;                                                                           
+import java.lang.annotation.Documented;                                                                       
+
+import javax.xml.ws.spi.WebServiceFeatureAnnotation;
+                                                                                                              
+@Documented                                                                                                   
+@Retention(value=RetentionPolicy.RUNTIME)                                                                     
+@Target(value=ElementType.TYPE)                                                                               
+@WebServiceFeatureAnnotation(id=MTOMFeature.ID, bean=MTOMFeature.class)
+                                                                                                              
+public @interface MTOM {                                                                            
+                                                                                                              
+    public boolean enabled() default true;
+    
+    public int threshold() default 0;
+                                                                                                              
+}
