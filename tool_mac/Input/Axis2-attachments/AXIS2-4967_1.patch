Index: modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportReceiver.java
===================================================================
--- modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportReceiver.java	(revision 93761)
+++ modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportReceiver.java	(working copy)
@@ -28,9 +28,11 @@
 import org.apache.axis2.builder.BuilderUtil;
 import org.apache.axis2.context.ConfigurationContext;
 import org.apache.axis2.context.MessageContext;
+import org.apache.axis2.context.SessionContext;
 import org.apache.axis2.description.TransportInDescription;
 import org.apache.axis2.description.TransportOutDescription;
 import org.apache.axis2.engine.AxisEngine;
+import org.apache.axis2.transport.TransportListener;
 import org.apache.axis2.transport.http.HTTPConstants;
 import org.apache.axis2.util.MessageContextBuilder;
 import org.apache.commons.logging.Log;
@@ -41,8 +43,9 @@
 import java.io.InputStreamReader;
 import java.io.OutputStream;
 
-public class LocalTransportReceiver {
+public class LocalTransportReceiver implements TransportListener {
     protected static final Log log = LogFactory.getLog(LocalTransportReceiver.class);
+
     public static ConfigurationContext CONFIG_CONTEXT;
     private ConfigurationContext confContext;
     private MessageContext inMessageContext;
@@ -180,4 +183,28 @@
             }
         }
     }
+
+    public void init(ConfigurationContext axisConf, TransportInDescription transprtIn) throws AxisFault {
+    }
+
+    public void start() throws AxisFault {
+    }
+
+    public void stop() throws AxisFault {
+    }
+
+    public EndpointReference getEPRForService(String serviceName, String ip) throws AxisFault {
+        return null;
+    }
+
+    public EndpointReference[] getEPRsForService(String serviceName, String ip) throws AxisFault {
+        return new EndpointReference[0];
+    }
+
+    public SessionContext getSessionContext(MessageContext messageContext) {
+        return null;
+    }
+
+    public void destroy() {
+    }
 }
