package calc;

import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMNamespace;
import org.apache.axiom.soap.SOAPEnvelope;
import org.apache.axiom.soap.SOAPFactory;
import org.apache.axiom.soap.SOAPHeaderBlock;
import org.apache.axis2.AxisFault;
import org.apache.axis2.Constants;
import org.apache.axis2.wsdl.WSDLConstants;
import org.apache.axis2.addressing.EndpointReference;
import org.apache.axis2.client.OperationClient;
import org.apache.axis2.client.Options;
import org.apache.axis2.client.ServiceClient;
import org.apache.axis2.context.MessageContext;

import javax.xml.namespace.QName;
import javax.xml.stream.FactoryConfigurationError;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class CalcClient {
	
	final static String addService = "http://localhost:8080/axis2/services/AddService";
	final static String substractService = "http://localhost:8080/axis2/services/SubstractService";
	final static String multiplyService = "http://localhost:8080/axis2/services/MultiplyService";
	
	public static void main(String[] args){
		
		try{
			Options options = new Options();
			String serviceGroupContextId = null;
			
			EndpointReference r = new EndpointReference(addService);
			options.setTransportInProtocol(Constants.TRANSPORT_HTTP);
			options.setTo(r);
			
			int param1 =1;
			int param2 = 2;
			String opStr = "add";
			
			System.out.println("Invoking...");
			
			ServiceClient serviceClient = new ServiceClient();
			serviceClient.setOptions(options);
			
			MessageContext requetMessageContext = new MessageContext();
			requetMessageContext.setEnvelope(getRequestEnvelope(opStr, param1, param2,
					serviceGroupContextId));
			
			OperationClient opClient = serviceClient.createClient(ServiceClient.ANON_OUT_IN_OP);
			opClient.addMessageContext(requetMessageContext);
			opClient.setOptions(options);
			
			opClient.execute(true);
			
			SOAPEnvelope result = opClient.getMessageContext(
					WSDLConstants.MESSAGE_LABEL_IN_VALUE).getEnvelope();
			
			printResult(result);
			
			//if (serviceGroupContextId == null)
			//	serviceGroupContextId = getServiceGroupContextId(result);	
		}catch(AxisFault af){af.printStackTrace();}
		
	}
	
	public static void printResult(SOAPEnvelope result) {
		try {
			XMLStreamWriter writer = XMLOutputFactory.newInstance()
			.createXMLStreamWriter(System.out);
			if (result != null) {
				OMElement resultOM = result.getBody().getFirstChildWithName(new QName("result"));
				System.out.println("Result is:" + resultOM.getText());
			} else
				System.out.println("Result is null");
		} catch (XMLStreamException e) {
			e.printStackTrace();
		} catch (FactoryConfigurationError e) {
			e.printStackTrace();
		}
	}
	
	public static SOAPEnvelope getRequestEnvelope(String operationName,
			int param1, int param2, String groupContextId) {
		SOAPFactory fac = OMAbstractFactory.getSOAP11Factory();
		SOAPEnvelope envelope = fac.getDefaultEnvelope();
		OMNamespace namespace = fac.createOMNamespace(
				"http://axis2/test/namespace1", "ns1");
		
		OMElement params = fac.createOMElement(operationName, namespace);
		OMElement param1OM = fac.createOMElement("param1", namespace);
		OMElement param2OM = fac.createOMElement("param2", namespace);
		param1OM.setText(Integer.toString(param1));
		param2OM.setText(Integer.toString(param2));
		params.addChild(param1OM);
		params.addChild(param2OM);
		envelope.getBody().setFirstChild(params);
		
		if (groupContextId != null) {
			OMNamespace axis2Namespace = fac.createOMNamespace(
					Constants.AXIS2_NAMESPACE_URI,
					Constants.AXIS2_NAMESPACE_PREFIX);
			SOAPHeaderBlock soapHeaderBlock = envelope.getHeader()
			.addHeaderBlock(Constants.SERVICE_GROUP_ID, axis2Namespace);
			soapHeaderBlock.setText(groupContextId);
		}
		
		return envelope;
	}
	
	
	public static String getServiceGroupContextId(SOAPEnvelope resultEnvelope) {
		String serviceGroupContextId = resultEnvelope.getHeader()
		.getFirstChildWithName(new QName("ReplyTo"))
		.getFirstChildWithName(new QName("ReferenceParameters"))
		.getFirstChildWithName(new QName("ServiceGroupId")).getText();
		return serviceGroupContextId;
	}
}