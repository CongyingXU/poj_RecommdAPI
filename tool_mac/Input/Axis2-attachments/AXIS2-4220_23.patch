Index: Utils.java
===================================================================
--- Utils.java	(revision 736025)
+++ Utils.java	(working copy)
@@ -34,16 +34,32 @@
 import org.apache.axis2.policy.model.MTOM10Assertion;
 import org.apache.axis2.policy.model.MTOMAssertion;
 import org.apache.axis2.util.PolicyUtil;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 import org.apache.neethi.Assertion;
 import org.apache.neethi.Policy;
 
+/**
+ * This is a MTOM module utility class. It contains some useful methods used into the MTOM module. 
+ */
 public class Utils {
 
+	private static final Log log = LogFactory.getLog(Utils.class);
+	
     private static final String MTOM_ASSERTION_APPLIED = "MTOM_ASSERTION_APPLIED";
 
+    /**
+     * Extracts the MTOM assertion object if it is exists into the policy based on a given {@link AxisDescription}.
+     * 
+     * @param axisDescription the {@link AxisDescription} object that should be searched.
+     * @return {@link MTOMAssertion}  the {@link MTOMAssertion} found. If it is not found "null" is returned.
+     */
     public static MTOMAssertion getMTOMAssertion(AxisDescription axisDescription) {
 
         if (axisDescription == null) {
+            if (log.isDebugEnabled()) {
+                log.debug("AxisDescription passed as parameter has a \"null\" value.");
+            }        	
             return null;
         }
 
@@ -70,6 +86,13 @@
 
     }
 
+    /**
+     * Locates the {@link AxisService} object searching up in the hierarchy recursively </br>
+     * the {@link AxisDescription} object passed.
+     *   
+     * @param axisDescription the {@link AxisDescription} object that should be checked.
+     * @return the {@link AxisService} object found or "null".
+     */
     public static AxisService locateAxisService(AxisDescription axisDescription) {
 
         if (axisDescription == null || axisDescription instanceof AxisService) {
@@ -79,12 +102,21 @@
         }
     }
 
+    /**
+     * Based on the parameter passed a {@link MTOM10Assertion} object is created by default. </br>
+     * Then it is added to a {@link Policy} object and returned. 
+     * 
+     * @param param the {@link Parameter} object that contains the value of the "enableMTOM" parameter: </br>
+     * "true" or "optional".
+     * @return The {@link Policy} object for the MTOM assertion. 
+     */
     public static Policy getMTOMPolicy(Parameter param) {
 
         if (param == null) {
             return null;
         }
 
+        // TODO We need to give the user the ability to specify if MTOM 1.0 or MTOM 1.1 should be used.
         MTOMAssertion mtom10;
 
         if (Constants.VALUE_TRUE.equals(param.getValue())) {
@@ -103,6 +135,13 @@
 
     }
 
+    /**
+     * Applies the MTOM policy to the binding level of the web service.
+     * 
+     * @param axisService the {@link AxisService} to whom binding level the MTOM policy should be attached.
+     * @param policy the {@link Policy} object that contains the MTOM assertion.
+     * @throws AxisFault thrown if the parameter is locked on a parent level - thus it could not be added.
+     */
     public static void applyPolicyToSOAPBindings(AxisService axisService,
             Policy policy) throws AxisFault {
         
@@ -115,8 +154,7 @@
         for (Object obj : axisService.getEndpoints().values()) {
 
             AxisEndpoint endpoint = (AxisEndpoint) obj;
-            AxisBinding binding = endpoint.getBinding();
-
+            AxisBinding binding = endpoint.getBinding(); 
             if (Java2WSDLConstants.TRANSPORT_URI.equals(binding.getType())
                     || WSDL2Constants.URI_WSDL2_SOAP.equals(binding.getType())) {
                 binding.getPolicySubject().attachPolicy(policy);
