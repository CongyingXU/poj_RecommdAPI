Index: SOAPActionBasedDispatcher.java
===================================================================
--- SOAPActionBasedDispatcher.java	(revision 470361)
+++ SOAPActionBasedDispatcher.java	(working copy)
@@ -17,6 +17,10 @@
 
 package org.apache.axis2.engine;
 
+import java.util.Iterator;
+
+import javax.xml.namespace.QName;
+
 import org.apache.axis2.AxisFault;
 import org.apache.axis2.context.MessageContext;
 import org.apache.axis2.description.AxisOperation;
@@ -25,8 +29,6 @@
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 
-import javax.xml.namespace.QName;
-
 /**
  * Dispatches based on the SOAPAction.
  */
@@ -67,14 +69,38 @@
     }
 
     /*
-     * (non-Javadoc)
-     *
+     * TODO: What if more than one service has the same soapAction? Here
+     * we don't check it and return the first service that matches
+     * the criteria.
+     * 
      * @see org.apache.axis2.engine.AbstractDispatcher#findService(org.apache.axis2.context.MessageContext)
      */
-    public AxisService findService(MessageContext messageContext) throws AxisFault {
-        log.debug("Checking for Service using SOAPAction is a TODO item");
+    public AxisService findService(MessageContext messageContext) throws AxisFault {    	
+    	String soapAction = messageContext.getSoapAction();
+    	
+		if (soapAction == null) {
+            log.debug("Attempted to check for Service using null soapAction");
+            return null;
+		}    
+		
+        log.debug("Checking for Service using soapAction: " + soapAction);
+        
+    	Iterator services = messageContext.getConfigurationContext()
+    		.getAxisConfiguration().getServices().values().iterator();
+		while (services.hasNext()) {
+			AxisService service = (AxisService) services.next();
+			AxisOperation operation = service.getOperationBySOAPAction(soapAction);
+			if (operation != null) {
+		        log.debug("Service [" + service.getName() 
+		        		+ "] has been found for soapAction [" 
+		        		+ soapAction + "])");
+				return service;				
+			}
+		}
 
-        return null;
+		log.debug("Attempted to check for Service using soapAction [" 
+				+ soapAction + "], but the service fragment was missing");
+		return null;
     }
 
     public void initDispatcher() {
