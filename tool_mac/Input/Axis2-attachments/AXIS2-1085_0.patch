Index: D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/soap/impl/builder/StAXSOAPModelBuilder.java
===================================================================
--- D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/soap/impl/builder/StAXSOAPModelBuilder.java	(revision 437406)
+++ D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/soap/impl/builder/StAXSOAPModelBuilder.java	(working copy)
@@ -123,6 +123,22 @@
         identifySOAPVersion(soapVersion);
     }
 
+    
+    public StAXSOAPModelBuilder(XMLStreamReader parser, String soapVersion, Object context) {
+        super(parser, context);
+        charEncoding = parser.getCharacterEncodingScheme();
+        parserVersion = parser.getVersion();
+        identifySOAPVersion(soapVersion);
+    }
+    
+    public StAXSOAPModelBuilder(XMLStreamReader parser, SOAPFactory factory, String soapVersion, Object context) {
+        super(factory, parser, context);
+        soapFactory = factory;
+        charEncoding = parser.getCharacterEncodingScheme();
+        parserVersion = parser.getVersion();
+        identifySOAPVersion(soapVersion);
+    }
+    
     /**
      * @param soapVersionURIFromTransport
      */
Index: D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/StAXOMBuilder.java
===================================================================
--- D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/StAXOMBuilder.java	(revision 437406)
+++ D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/StAXOMBuilder.java	(working copy)
@@ -102,6 +102,37 @@
         doDebug = log.isDebugEnabled();
     }
 
+    public StAXOMBuilder(OMFactory ombuilderFactory, XMLStreamReader parser, Object context) {
+        super(ombuilderFactory, parser, context);
+        document = ombuilderFactory.createOMDocument(this);
+        doDebug = log.isDebugEnabled();
+    }
+
+    public StAXOMBuilder(OMFactory factory, XMLStreamReader parser, OMElement element, Object context) {
+        this(factory, parser, context);
+        lastNode = element;
+        document.setOMDocumentElement(element);
+        doDebug = log.isDebugEnabled();
+        populateOMElement(element);
+    }
+
+    public StAXOMBuilder(String filePath, Object context) throws XMLStreamException, FileNotFoundException {
+        this(StAXUtils.createXMLStreamReader(new FileInputStream(filePath)), context);
+        doDebug = log.isDebugEnabled();
+    }
+
+    public StAXOMBuilder(InputStream inStream, Object context) throws XMLStreamException {
+        this(StAXUtils.createXMLStreamReader(inStream), context);
+        doDebug = log.isDebugEnabled();
+    }
+
+    public StAXOMBuilder(XMLStreamReader parser, Object context) {
+        super(parser, context);
+        omfactory = OMAbstractFactory.getOMFactory();
+        document = omfactory.createOMDocument(this);
+        doDebug = log.isDebugEnabled();
+    }
+    
     /**
      * Method next.
      *
Index: D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/Filter.java
===================================================================
--- D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/Filter.java	(revision 0)
+++ D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/Filter.java	(revision 0)
@@ -0,0 +1,12 @@
+package org.apache.axiom.om.impl.builder;
+
+import javax.xml.stream.XMLStreamReader;
+import org.apache.axiom.om.impl.builder.StAXBuilder;
+
+public interface Filter extends XMLStreamReader {
+
+	public XMLStreamReader init(XMLStreamReader reader, StAXBuilder builder, Object context);
+    
+    public void setContext(Object context);
+	
+}
Index: D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/StAXBuilder.java
===================================================================
--- D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/StAXBuilder.java	(revision 437406)
+++ D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/StAXBuilder.java	(working copy)
@@ -102,7 +102,29 @@
         this(OMAbstractFactory.getOMFactory(), parser);
     }
 
+    protected StAXBuilder(OMFactory ombuilderFactory, XMLStreamReader parser, Object context) {
+        this(ombuilderFactory, parser);
+        if(FilterRegistry.enable()) {
+            this.parser = FilterRegistry.insertFilter(this.parser, this, context);
+        }
+    }
+    
+    protected StAXBuilder(XMLStreamReader parser, Object context) {
+        this(OMAbstractFactory.getOMFactory(), parser);
+        if(FilterRegistry.enable()) {
+            this.parser = FilterRegistry.insertFilter(this.parser, this, context);
+        }
+    }
+    
     /**
+     * Method setParser. This is to remove filter.
+     * @param parser
+     */
+    public void setParser(XMLStreamReader parser) {
+        this.parser = parser;
+    }
+    
+    /**
      * Method setOMBuilderFactory.
      *
      * @param ombuilderFactory
Index: D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/FilterRegistry.java
===================================================================
--- D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/FilterRegistry.java	(revision 0)
+++ D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/builder/FilterRegistry.java	(revision 0)
@@ -0,0 +1,114 @@
+package org.apache.axiom.om.impl.builder;
+
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Iterator;
+
+import javax.xml.namespace.QName;
+import javax.xml.stream.XMLStreamException;
+import javax.xml.stream.XMLStreamReader;
+
+import org.apache.axiom.om.OMElement;
+import org.apache.axiom.om.util.StAXUtils;
+
+public class FilterRegistry {
+
+    public static String FILE_FILTER_REGISTRY_XML = "filterregistry.xml";
+    static public String FILTER_REGISTRY = "filterregistry";
+    static public String FILTER = "filter";
+    static public String CLASSNAME= "classname";
+
+	static boolean enable = false;
+	
+	static ArrayList<Class> registeredFilter;
+	
+	static {
+        enable = false;
+        ClassLoader classloader = null;
+        InputStream inputstream = null;
+
+        try {
+            classloader = Thread.currentThread().getContextClassLoader();
+            if (classloader == null) {
+                inputstream = ClassLoader.getSystemResourceAsStream(FilterRegistry.FILE_FILTER_REGISTRY_XML);
+            } else {
+                inputstream = classloader.getResourceAsStream(FilterRegistry.FILE_FILTER_REGISTRY_XML);
+            }
+            if (inputstream != null) {
+                XMLStreamReader xmlreader;
+                xmlreader = StAXUtils.createXMLStreamReader(inputstream);
+                StAXOMBuilder builder = new StAXOMBuilder(xmlreader);
+                OMElement element = builder.getDocumentElement();
+                element.build();
+                
+                if(FILTER_REGISTRY.equals(element.getLocalName())) {
+                    registeredFilter = new ArrayList<Class>();
+                    Iterator ite = element.getChildrenWithName(new QName(FILTER));
+                    while(ite.hasNext()) {
+                        OMElement omElem = (OMElement) ite.next();
+                        String className = omElem.getAttributeValue(new QName(CLASSNAME));
+                        try {
+                            Class cls = Class.forName(className);
+                            if(cls != null) {
+                                registeredFilter.add(cls);
+                                enable = true;
+                            }
+                        } catch (ClassNotFoundException e) {
+                            // TODO Auto-generated catch block
+                            e.printStackTrace();
+                        }
+                        
+                    }
+                }
+            }
+        } catch (XMLStreamException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+        }
+	}
+	
+	public static void registFilter(String filterName) {
+		try {
+			Class cls = Class.forName(filterName);
+            if(cls != null) {
+                registeredFilter.add(cls);
+                enable = true;
+            }
+		} catch (ClassNotFoundException e) {
+			e.printStackTrace();
+		}
+	}
+	
+	public static XMLStreamReader insertFilter(XMLStreamReader reader, StAXBuilder builder, Object context) {
+		XMLStreamReader ret = reader;
+		
+		Iterator ite = registeredFilter.iterator();
+		while(ite.hasNext()) {
+			Class cls = (Class) ite.next();
+            try{
+				Filter filter = (Filter) cls.newInstance();
+				ret = filter.init(ret, builder, context);
+			} catch (IllegalAccessException e) {
+				e.printStackTrace();
+			} catch (InstantiationException e) {
+				e.printStackTrace();
+			}
+		}
+		return ret;
+	}
+    
+    public static XMLStreamReader insertFilter(XMLStreamReader reader, StAXBuilder builder) {
+        return insertFilter(reader, builder, null);
+    }
+    
+    public static void setContext(XMLStreamReader reader, Object context) {
+        if(reader instanceof Filter) {
+            Filter filter = (Filter) reader;
+            filter.setContext(context);
+        }
+    }
+
+    public static boolean enable() {
+        return enable;
+    }
+}
Index: D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/mtom/MTOMStAXSOAPModelBuilder.java
===================================================================
--- D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/mtom/MTOMStAXSOAPModelBuilder.java	(revision 437406)
+++ D:/soc/workspaces/axis2/axiom-change-constructor/modules/axiom-api/src/main/java/org/apache/axiom/om/impl/mtom/MTOMStAXSOAPModelBuilder.java	(working copy)
@@ -59,6 +59,21 @@
         this.attachments = attachments;
     }
 
+    public MTOMStAXSOAPModelBuilder(XMLStreamReader parser,
+                                     SOAPFactory factory,
+                                     Attachments attachments, String soapVersion,
+                                     Object context) {
+        super(parser, factory, soapVersion, context);
+        this.attachments = attachments;
+    }
+
+    public MTOMStAXSOAPModelBuilder(XMLStreamReader reader,
+                                     Attachments attachments, String soapVersion,
+                                     Object context) {
+        super(reader, soapVersion, context);
+        this.attachments = attachments;
+    }
+
     protected OMNode createOMElement() throws OMException {
 
         elementLevel++;
