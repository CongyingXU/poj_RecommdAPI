Index: conf/axis2.xml
===================================================================
--- conf/axis2.xml	(revision 667056)
+++ conf/axis2.xml	(working copy)
@@ -97,6 +97,10 @@
     <!-- Following parameter will set the host name for the epr-->
     <!--<parameter name="hostname" locked="true">myhost.com</parameter>-->
 
+    <!-- The following flag controls whether relative or absolute URIs to be generated-->
+    <!-- for values of location/schemaLocation attributes of wsdl:/xsd:imports in wsdl generation-->
+    <parameter name="generateAbsoluteLocationURIs" locked="true">true</parameter>
+
     <!-- If you have a front end host which exposes this webservice using a different public URL  -->
     <!-- use this parameter to override autodetected url -->
     <!--<parameter name="httpFrontendHostUrl">https://someotherhost/context</parameter>-->
Index: src/org/apache/axis2/description/AxisService.java
===================================================================
--- src/org/apache/axis2/description/AxisService.java	(revision 667056)
+++ src/org/apache/axis2/description/AxisService.java	(working copy)
@@ -96,6 +96,9 @@
 	public static final String INCLUDE_TAG = "include";
 	public static final String SCHEMA_LOCATION = "schemaLocation";
 
+// TODO externalize this String into an appropriate Constants class
+	public static final String GENERATE_ABSOLUTE_URI_PARAM = "generateAbsoluteLocationURIs";
+		
 	private Map endpointMap = new HashMap();
 
 	/*
@@ -1115,6 +1118,25 @@
 		        originalImprotString = wsdlImport.getLocationURI();
 		        if (originalImprotString.indexOf("://") == -1 && originalImprotString.indexOf("?wsdl=") == -1){
 		            wsdlImport.setLocationURI(this.name + "?wsdl=" + originalImprotString);
+
+		            // check if an absolute URI should be generated for the WSDL location
+		        	boolean generateAbsoluteWsdlURI = false;
+		        	Parameter param = null;
+					try {
+						param = getAxisConfiguration().getService(this.name).getParameter(GENERATE_ABSOLUTE_URI_PARAM);
+					} catch (AxisFault e1) {
+						// ignore it, param will remain null
+					}
+		        	if (param != null) {
+		        		generateAbsoluteWsdlURI = "true".equals(param.getValue());
+					}
+		        	if (generateAbsoluteWsdlURI) {
+						try {
+							// replace the location URI with an absolute URI
+							wsdlImport.setLocationURI(this.getEPRs()[0] + "?wsdl=" + originalImprotString);
+						} catch (AxisFault e) {
+						}
+					}
 		        }
 		        changeImportAndIncludeLocations(wsdlImport.getDefinition());
 		    }
@@ -1157,6 +1179,25 @@
 
 	        if (schemaLocation.indexOf("://") == -1 && schemaLocation.indexOf("?xsd=") == -1) {	            
 	            String newscheamlocation = this.name + "?xsd=" + schemaLocation;
+
+	            // check if an absolute URI should be generated for the schema location
+	        	boolean generateAbsoluteSchemaURI = false;
+	        	Parameter param = null;
+				try {
+					param = getAxisConfiguration().getService(this.name).getParameter(GENERATE_ABSOLUTE_URI_PARAM);
+				} catch (AxisFault e1) {
+					// ignore it, param will remain null
+				}
+	        	if (param != null) {
+	        		generateAbsoluteSchemaURI = "true".equals(param.getValue());
+				}
+	        	if (generateAbsoluteSchemaURI) {
+					try {
+						// replace the location URI with an absolute URI
+						newscheamlocation = this.getEPRs()[0] + "?xsd=" + schemaLocation;
+					} catch (AxisFault e) {
+					}
+				}
 	            xmlSchemaExternal.setSchemaLocation(newscheamlocation);                               
 	        }
 	    }
@@ -1172,6 +1213,25 @@
 				attributeValue = attribute.getNodeValue();
                 if (attributeValue.indexOf("://") == -1 && attributeValue.indexOf("?xsd=") == -1) {
                     attribute.setNodeValue(this.name + "?xsd=" + attributeValue);
+
+    	            // check if an absolute URI should be generated for the schema location
+    	        	boolean generateAbsoluteSchemaURI = false;
+    	        	Parameter param = null;
+					try {
+						param = getAxisConfiguration().getService(this.name).getParameter(GENERATE_ABSOLUTE_URI_PARAM);
+					} catch (AxisFault e1) {
+						// ignore it, param will remain null
+					}
+    	        	if (param != null) {
+    	        		generateAbsoluteSchemaURI = "true".equals(param.getValue());
+    				}
+    	        	if (generateAbsoluteSchemaURI) {
+						try {
+							// replace the location URI with an absolute URI
+							attribute.setNodeValue(this.getEPRs()[0] + "?xsd=" + attributeValue);
+						} catch (AxisFault e) {
+						}
+					}
                 }
             }
 		}
@@ -2537,9 +2597,29 @@
 			String schemaLocation = xmlSchemaExternal.getSchemaLocation();
 
 			if (schemaLocation.indexOf("://") == -1) {
+
+	            // check if an absolute URI should be generated for the schema location
+				String schemaPath = getName();
+	        	boolean generateAbsoluteSchemaURLs = false;
+	        	Parameter param = null;
+				try {
+					param = getAxisConfiguration().getService(this.name).getParameter(GENERATE_ABSOLUTE_URI_PARAM);
+				} catch (AxisFault e1) {
+					// ignore it, param will remain null
+				}
+	        	if (param != null) {
+	        		generateAbsoluteSchemaURLs = "true".equals(param.getValue());
+				}
+	        	if (generateAbsoluteSchemaURLs) {
+					try {
+						// replace the schema location URI with an absolute URI
+						schemaPath = getEPRs()[0];
+					} catch (AxisFault e) {
+					}
+				}
 				String newscheamlocation = customSchemaNamePrefix == null ?
 				// use the default mode
-				(getName() + "?xsd=" + getScheamLocationWithDot(
+				(schemaPath + "?xsd=" + getScheamLocationWithDot(
 						sourceURIToNewLocationMap, s))
 						:
 						// custom prefix is present - add the custom prefix
