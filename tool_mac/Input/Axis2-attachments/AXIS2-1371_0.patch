Index: modules/samples/src/sample/yahooservices/RESTSearch/UserInterface.java
===================================================================
--- modules/samples/src/sample/yahooservices/RESTSearch/UserInterface.java	(revision 0)
+++ modules/samples/src/sample/yahooservices/RESTSearch/UserInterface.java	(revision 0)
@@ -0,0 +1,131 @@
+/*
+ * Copyright 2004,2005 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package sample.yahooservices.RESTSearch;
+
+import javax.swing.*;
+import javax.swing.event.HyperlinkListener;
+import javax.swing.event.HyperlinkEvent;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+
+public class UserInterface extends JPanel implements HyperlinkListener {
+
+    private JEditorPane jep;
+    private JScrollPane scrollPane;
+
+    private JTextField schField;
+    private JTextField formatField;
+
+    private JButton schButton;
+    private JButton backButton;
+
+    private JLabel schLabel;
+    private JLabel formatLabel;
+
+
+    private RESTSearchModel model;
+    private RESTSearchClient parent;
+
+    private String response;
+    public UserInterface(RESTSearchClient parent) {
+        this.parent = parent;
+        model =  new RESTSearchModel();
+        initComponents();
+
+        schButton.addActionListener(new ActionListener() {
+            public void actionPerformed(ActionEvent e) {
+                handleSearch();
+            }
+        });
+
+        backButton.addActionListener(new ActionListener() {
+            public void actionPerformed(ActionEvent e) {
+                handleBack();
+            }
+        });
+
+        Container pane = parent.getContentPane();
+        pane.setLayout(null);
+
+        pane.add(schLabel);
+        pane.add(schField);
+        pane.add(formatLabel);
+        pane.add(formatField);
+        pane.add(backButton);
+        pane.add(schButton);
+        pane.add(scrollPane);
+    }
+
+    public void initComponents() {
+        schLabel = new JLabel("Search for");
+        schLabel.setBounds(20, 10, 80, 25);
+        schField = new JTextField();
+        schField.setBounds(90, 10, 250, 25);
+
+        formatLabel = new JLabel("format");
+        formatLabel.setBounds(350, 10, 50, 25);
+        formatField = new JTextField();
+        formatField.setBounds(400, 10, 100, 25);
+
+        backButton = new JButton("Back to Results");
+        backButton.setBounds(670, 10, 150, 25);
+        backButton.setEnabled(false);
+
+        schButton =  new JButton("Search");
+        schButton.setBounds(510, 10, 150, 25);
+
+
+        jep = new JEditorPane();
+        jep.setEditable(false);
+        jep.setContentType("text/html");
+        jep.addHyperlinkListener(this);
+
+        scrollPane = new JScrollPane(jep);
+        scrollPane.setBounds(10, 80, (RESTSearchClient.width - 30), (RESTSearchClient.height - 160));
+
+
+    }
+
+    private void handleSearch(){
+        String query = schField.getText();
+
+        if(!query.equals("")){
+            response = model.searchYahoo(query, formatField.getText());
+            jep.setText(response);
+        }
+    }
+
+    private void handleBack(){
+        jep.setText(response);
+        backButton.setEnabled(false);
+    }
+
+    public void hyperlinkUpdate(HyperlinkEvent he) {
+        if (he.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
+            try {
+                jep.setPage(he.getURL());
+                backButton.setEnabled(true);
+            }
+            catch (Exception e) {
+                  JOptionPane.showMessageDialog(parent, "Page could not be loaded",
+                                "Page Error", JOptionPane.ERROR_MESSAGE);
+            }
+        }
+
+    }
+}
Index: modules/samples/src/sample/yahooservices/RESTSearch/RESTSearchClient.java
===================================================================
--- modules/samples/src/sample/yahooservices/RESTSearch/RESTSearchClient.java	(revision 463554)
+++ modules/samples/src/sample/yahooservices/RESTSearch/RESTSearchClient.java	(working copy)
@@ -1,67 +1,46 @@
 /*
-* Copyright 2004,2005 The Apache Software Foundation.
-*
-* Licensed under the Apache License, Version 2.0 (the "License");
-* you may not use this file except in compliance with the License.
-* You may obtain a copy of the License at
-*
-*      http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
+ * Copyright 2004,2005 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
 
 package sample.yahooservices.RESTSearch;
 
-import org.apache.axiom.om.OMAbstractFactory;
-import org.apache.axiom.om.OMElement;
-import org.apache.axiom.om.OMFactory;
-import org.apache.axis2.Constants;
-import org.apache.axis2.addressing.EndpointReference;
-import org.apache.axis2.client.Options;
-import org.apache.axis2.client.ServiceClient;
+import javax.swing.*;
+import java.awt.*;
 
-public class RESTSearchClient {
-    public static void main(String[] args) {
-        try {
+public class RESTSearchClient extends JFrame {
+    public static int width;
+    public static int height;
 
-            String epr = "http://api.search.yahoo.com/WebSearchService/V1/webSearch";
+    public RESTSearchClient(String title) throws HeadlessException {
+        super(title);
 
-            ServiceClient client = new ServiceClient();
-            Options options = new Options();
-            client.setOptions(options);
-            options.setTo(new EndpointReference(epr));
-            options.setProperty(Constants.Configuration.ENABLE_REST, Constants.VALUE_TRUE);
-            options.setProperty(Constants.Configuration.HTTP_METHOD, Constants.Configuration.HTTP_METHOD_GET);
-
-            //if post is through GET of HTTP
-            OMElement response = client.sendReceive(getPayloadForYahooSearchCall());
-            System.out.println("response = " + response);
-
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
+        this.getContentPane().add(new UserInterface(this));
+        this.setVisible(true);
     }
 
-    private static OMElement getPayloadForYahooSearchCall() {
-        OMFactory fac = OMAbstractFactory.getOMFactory();
-        OMElement rootElement = fac.createOMElement("webSearch", null);
+    public static void main(String[] args) {
+        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
+        width = screenSize.width;
+        height = screenSize.height;
+        RESTSearchClient form = new RESTSearchClient("Axis2 REST Search Client");
 
-        OMElement appId = fac.createOMElement("appid", null, rootElement);
-        appId.setText("ApacheRestDemo");
-
-        OMElement query = fac.createOMElement("query", null, rootElement);
-        query.setText("Axis2");
-
-        OMElement format = fac.createOMElement("format", null, rootElement);
-        format.setText("pdf");
-
-        return rootElement;
+        int left = (width) / 2;
+        int top = (height) / 2;
+        form.setLocation(left, top);
+        form.setSize(width, height);
+        form.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
+        form.setVisible(true);
     }
-
-
 }
-
Index: modules/samples/src/sample/yahooservices/RESTSearch/RESTSearchModel.java
===================================================================
--- modules/samples/src/sample/yahooservices/RESTSearch/RESTSearchModel.java	(revision 0)
+++ modules/samples/src/sample/yahooservices/RESTSearch/RESTSearchModel.java	(revision 0)
@@ -0,0 +1,106 @@
+/*
+* Copyright 2004,2005 The Apache Software Foundation.
+*
+* Licensed under the Apache License, Version 2.0 (the "License");
+* you may not use this file except in compliance with the License.
+* You may obtain a copy of the License at
+*
+*      http://www.apache.org/licenses/LICENSE-2.0
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*/
+
+package sample.yahooservices.RESTSearch;
+
+import org.apache.axiom.om.OMAbstractFactory;
+import org.apache.axiom.om.OMElement;
+import org.apache.axiom.om.OMFactory;
+import org.apache.axis2.Constants;
+import org.apache.axis2.addressing.EndpointReference;
+import org.apache.axis2.client.Options;
+import org.apache.axis2.client.ServiceClient;
+
+import java.util.Iterator;
+
+public class RESTSearchModel {
+    /**
+     * HTML Header to desplay snippet text
+     */
+    private String beginHTML = "<HTML><HEAD><TITLE>Search Results</TITLE></HEAD><BODY>";
+
+    /**
+     * HTML footer
+     */
+    private String endHTML = "</BODY></HTML>";
+
+    /**
+     * Store the texts read by NavigationURL of soap
+     */
+    private String snippet;
+
+    public String searchYahoo(String query, String format){
+        try {
+            snippet = beginHTML;
+            String epr = "http://api.search.yahoo.com/WebSearchService/V1/webSearch";
+
+            ServiceClient client = new ServiceClient();
+            Options options = new Options();
+            client.setOptions(options);
+            options.setTo(new EndpointReference(epr));
+            options.setProperty(Constants.Configuration.ENABLE_REST, Constants.VALUE_TRUE);
+            options.setProperty(Constants.Configuration.HTTP_METHOD, Constants.Configuration.HTTP_METHOD_GET);
+
+            //if post is through GET of HTTP
+            OMElement response = client.sendReceive(getPayloadForYahooSearchCall(query, format));
+            generateSnippet(response);
+            return snippet;
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    private static OMElement getPayloadForYahooSearchCall(String queryStr, String formatStr) {
+        OMFactory fac = OMAbstractFactory.getOMFactory();
+        OMElement rootElement = fac.createOMElement("webSearch", null);
+
+        OMElement appId = fac.createOMElement("appid", null, rootElement);
+        appId.setText("ApacheRestDemo");
+
+        OMElement query = fac.createOMElement("query", null, rootElement);
+        query.setText(queryStr);
+
+        OMElement format = fac.createOMElement("format", null, rootElement);
+        format.setText(formatStr);
+
+        return rootElement;
+    }
+
+    private void generateSnippet(OMElement response){
+        String title = null;
+        String summary = null;
+        String clickUrl = null;
+        String url = null;
+        OMElement result = null;
+        //get an iterator for Result elements
+        Iterator itr = response.getChildElements();
+        Iterator innerItr;
+        while(itr.hasNext()){
+            result = (OMElement)itr.next();
+            innerItr = result.getChildElements();
+                title = ((OMElement)innerItr.next()).getText();
+                summary = ((OMElement)innerItr.next()).getText();
+                url = ((OMElement)innerItr.next()).getText();
+                clickUrl= ((OMElement)innerItr.next()).getText();
+            snippet += "<a href=" + clickUrl + ">" + title + "</a>" + "<br>" + summary +
+                    "<br>" + url + "<br>" + "<br>";
+        }
+        snippet += endHTML;
+    }
+}
+
