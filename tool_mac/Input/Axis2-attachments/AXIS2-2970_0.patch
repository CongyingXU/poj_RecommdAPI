Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ParameterDialog.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ParameterDialog.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ParameterDialog.java	(working copy)
@@ -1,105 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 12:11:36 PM
- */
-public class ParameterDialog extends JFrame implements ActionListener {
-
-    Insets insets;
-
-    protected JLabel paraName;
-    protected JLabel paravale;
-    protected JTextField txtpraName;
-    protected JTextArea txtparaValue;
-    protected JScrollPane sp;
-    protected JButton addbut;
-    protected String val;
-    JTextArea textarea;
-    int position;
-
-    public ParameterDialog() {
-        getContentPane().setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(null);
-        getContentPane().setBounds(150, 150, 300, 180);
-        insets = getInsets();
-
-        paraName = new JLabel("Parameter Name: ");
-        getContentPane().add(paraName);
-
-        paravale = new JLabel("Parameter Value: ");
-        getContentPane().add(paravale);
-
-
-        txtpraName = new JTextField("-para name -");
-        getContentPane().add(txtpraName);
-
-
-        txtparaValue = new JTextArea("-para vale -");
-        sp = new JScrollPane(txtparaValue);
-        getContentPane().add(sp);
-        sp.setAutoscrolls(true);
-
-        addbut = new JButton("Add");
-        getContentPane().add(addbut);
-        addbut.addActionListener(this);
-
-
-        paraName.setBounds(insets.left + 5, insets.top + 6, 100, 24);
-        paravale.setBounds(insets.left + 5, insets.top + 34, 100, 24);
-        sp.setBounds(insets.left + 110, insets.top + 34, 160, 60);
-        txtpraName.setBounds(insets.left + 110, insets.top + 6, 160, 24);
-        addbut.setBounds(insets.left + 100, insets.top + 100, 60, 24);
-
-        setSize(getPreferredSize());
-        setResizable(false);
-    }
-
-    public void showDialog(String in, JTextArea textarea, int position) {
-        this.textarea = textarea;
-        this.position = position;
-        this.show();
-        this.val = in;
-        this.setVisible(true);
-    }
-
-    public String hideForm() {
-        return this.val;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == addbut) {
-            String str = "<parameter locked=\"false\" name=\"" + txtpraName.getText().trim() + "\">\n"
-                    + txtparaValue.getText() + "\n" +
-                    "</parameter>\n";
-            val = str;
-            textarea.insert(str, position + 1);
-            this.setVisible(false);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ModuleDialog.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ModuleDialog.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ModuleDialog.java	(working copy)
@@ -1,89 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 4:11:19 PM
- */
-public class ModuleDialog extends JFrame implements ActionListener {
-
-    Insets insets;
-
-    protected JLabel moduleName;
-    protected JTextField txtModule;
-    protected JButton addbut;
-
-    protected String val;
-    JTextArea textarea;
-    int position;
-
-    public ModuleDialog() {
-        getContentPane().setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(null);
-        getContentPane().setBounds(150, 150, 300, 100);
-        insets = getInsets();
-
-        moduleName = new JLabel("Module Name: ");
-        getContentPane().add(moduleName);
-
-        txtModule = new JTextField("moduleName");
-        getContentPane().add(txtModule);
-
-        addbut = new JButton("Add");
-        getContentPane().add(addbut);
-        addbut.addActionListener(this);
-
-
-        moduleName.setBounds(insets.left + 5, insets.top + 6, 100, 24);
-        txtModule.setBounds(insets.left + 110, insets.top + 6, 160, 24);
-        addbut.setBounds(insets.left + 100, insets.top + 45, 60, 24);
-
-        setSize(getPreferredSize());
-        setResizable(false);
-    }
-
-    public void showDialog(String in, JTextArea textarea, int position) {
-        this.textarea = textarea;
-        this.position = position;
-        this.show();
-        this.val = in;
-        this.setVisible(true);
-    }
-
-    public String hideForm() {
-        return this.val;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == addbut) {
-            String str = "<module ref=\"" + txtModule.getText().trim() + "\" \\>";
-            val = str;
-            textarea.insert(str, position + 1);
-            this.setVisible(false);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ObjectKeeper.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ObjectKeeper.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ObjectKeeper.java	(working copy)
@@ -1,48 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.bean;
-
-import javax.swing.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 17, 2005
- * Time: 11:40:12 PM
- */
-
-//to fill the bean
-public interface ObjectKeeper {
-
-    void fillBean(ArchiveBean bean);
-
-    //to keep a refernce to next panel
-    void setNext(JPanel next);
-
-    JPanel getNext();
-
-    //to keep a refernce to previous panel
-    void setPrivious(JPanel privious);
-
-    JPanel getPrivious();
-
-    String getTopLable();
-
-    String getLable();
-
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ArchiveBean.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ArchiveBean.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ArchiveBean.java	(working copy)
@@ -139,8 +139,8 @@
         return wsdls;
     }
 
-    public void addWsdls(ArrayList wsdls) {
-        this.wsdls.addAll(wsdls);
+    public void addWsdls(File wsdl) {
+        this.wsdls.add(wsdl);
     }
 
     public String getOutPath() {
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java	(working copy)
@@ -1,202 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import com.intellij.openapi.project.Project;
-import org.apache.axis2.tools.wizardframe.CodegenFrame;
-import org.apache.axis2.tools.wizardframe.CodegenFrame;
-
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 24, 2005
- * Time: 10:41:41 AM
- */
-public class Axi2PluginPage extends JFrame implements ActionListener {
-    ButtonGroup cbg;
-    JRadioButton service;
-    JRadioButton codeGen;
-    JButton butOK;
-    JButton butCancle;
-    JPanel imglbl;
-    Project project;
-    CodegenFrame codegenFrame;
-
-    private int defaultCloseOperation;
-
-    public Axi2PluginPage() {
-        setBackground(Color.white);
-        Dimension dim = getPreferredSize();
-        setSize(dim);
-        setBounds(200, 200, dim.width, dim.height);
-        setBounds(200, 200, dim.width, dim.height);
-        Axi2PluginPageLayout customLayout = new Axi2PluginPageLayout();
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(customLayout);
-        setTitle("Axis2 Plugin");
-        cbg = new ButtonGroup();
-
-        /*Create a service archive Radio Button  */
-
-        service = new JRadioButton("Axis2 Aervice Archive", true);
-        service.setToolTipText("Hepls package classes, libs and WSDLs to create a archive that can be deployed in Axis2");
-        cbg.add(service);
-        getContentPane().add(service);
-
-        /*Create a Code code generation Radio Button */
-
-        codeGen = new JRadioButton("Axis2 Code Generator", false);
-        codeGen.setToolTipText("you can generate a WSDL from a java source file or java code from a WSDL ");
-        cbg.add(codeGen);
-        getContentPane().add(codeGen);
-
-
-
-        butOK = new JButton("OK");
-        butOK.addActionListener(this);
-        getContentPane().add(butOK);
-
-        butCancle = new JButton("Cancel");
-        butCancle.addActionListener(this);
-        getContentPane().add(butCancle);
-
-        imglbl = new LogoPage();
-        getContentPane().add(imglbl);
-
-    }
-
-
-
-    public void setDefaultCloseOperation(int operation) {
-        if (operation != DO_NOTHING_ON_CLOSE &&
-                operation != HIDE_ON_CLOSE &&
-                operation != DISPOSE_ON_CLOSE &&
-                operation != EXIT_ON_CLOSE) {
-            throw new IllegalArgumentException("defaultCloseOperation must be one of: DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE, DISPOSE_ON_CLOSE, or EXIT_ON_CLOSE");
-        }
-        if (this.defaultCloseOperation != operation) {
-            if (operation == EXIT_ON_CLOSE) {
-                SecurityManager security = System.getSecurityManager();
-                if (security != null) {
-                    security.checkExit(0);
-                }
-            }
-            int oldValue = this.defaultCloseOperation;
-            this.defaultCloseOperation = operation;
-            firePropertyChange("defaultCloseOperation", oldValue, operation);
-        }
-    }
-
-    public void showUI() {
-        pack();
-        this.setVisible(true);
-        show();
-    }
-
-    public void setProject(Project project) {
-
-        this.project = project;
-    }
-
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butCancle) {
-            this.hide();
-            setVisible(false);
-        } else if (obj == butOK) {
-            this.hide();
-            setVisible(false);
-            if (codeGen.isSelected()) {
-                codegenFrame = new CodegenFrame();
-                codegenFrame.setProject(project);
-		codegenFrame.setVisible(true);
-                codegenFrame .setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-            }else{
-                ServiceArciveFrame window = new ServiceArciveFrame();
-                window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-                window.setResizable(false);
-                window.setTitle("Service Archive creation");
-                window.show();
-            }
-        }
-
-    }
-
-    public JComponent getRootComponent() {
-        return this.getRootPane();
-    }
-}
-
-class Axi2PluginPageLayout implements LayoutManager {
-
-    public Axi2PluginPageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 320 + insets.left + insets.right;
-        dim.height = 264 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 104, 296, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 136, 296, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 130, insets.top + 210, 80, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 215, insets.top + 210, 80, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left, insets.top, 320, 80);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/SelectPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/SelectPanel.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/SelectPanel.java	(working copy)
@@ -1,327 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-import org.apache.ideaplugin.bean.OperationObj;
-import org.apache.ideaplugin.bean.ServiceObj;
-import org.apache.ideaplugin.frames.table.ArchiveTableModel;
-
-import javax.swing.*;
-import javax.swing.filechooser.FileFilter;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-import java.lang.reflect.Method;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Iterator;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 9:11:54 PM
- */
-public class SelectPanel extends JPanel implements ObjectKeeper, ActionListener {
-
-    protected JLabel lblClass;
-    protected JLabel lblServiceNam;
-    protected JTextField txtClassDir;
-    protected JTextField txtServiceName;
-    protected JButton butSelect;
-    protected JButton load;
-    protected JScrollPane sp;
-    protected JLabel tablelbl;
-
-    private JPanel previous;
-    protected File file;
-    protected Insets insets;
-    protected ServiceArciveFrame parent;
-    protected String fileName;
-    protected int count = 1;
-    protected HashMap operations;
-    protected DescriptorFile disfile;
-    protected ClassSelctionPage classPage;
-    protected String sgXMl;
-    ArrayList servicelsit;
-
-    public SelectPanel(ServiceArciveFrame parent, File file) {
-        this.parent = parent;
-        this.file = file;
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        this.setLayout(null);
-
-        insets = parent.getInsets();
-
-        lblClass = new JLabel("Select Service Classes");
-        add(lblClass);
-        lblClass.setBounds(insets.left + 8, insets.top + 2, 130, 24);
-
-        txtClassDir = new JTextField("");
-        add(txtClassDir);
-        txtClassDir.setBounds(insets.left + 140, insets.top + 2, 280, 24);
-
-        butSelect = new JButton("Browse...");
-        add(butSelect);
-        butSelect.addActionListener(this);
-        butSelect.setBounds(insets.left + 420, insets.top + 2, 90, 24);
-
-
-        load = new JButton(" Load ");
-        add(load);
-        load.addActionListener(this);
-        load.setBounds(insets.left + 512, insets.top + 2, 70, 24);
-
-
-        lblServiceNam = new JLabel("Service Name : ");
-        add(lblServiceNam);
-        lblServiceNam.setBounds(insets.left + 10, insets.top + 185, 100, 24);
-        txtServiceName = new JTextField("");
-        add(txtServiceName);
-        txtServiceName.setBounds(insets.left + 115, insets.top + 185, 120, 24);
-        lblServiceNam.setVisible(false);
-        txtServiceName.setVisible(false);
-        setSize(getPreferredSize());
-        parent.fc.setFileFilter(new ClassFileFilter());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.addClassLocation(bean.getClassLoc());
-        bean.setServiceXML(sgXMl);
-        bean.addLibs(bean.getTempLibs());
-        bean.addWsdls(bean.getTempWsdls());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-        //no one call this
-    }
-
-    public JPanel getNext() {
-        parent.setEnable(true, true, false, true);
-        if (classPage != null) {
-
-         classPage.setPrivious(this);
-            return classPage;
-        }
-        return disfile;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butSelect) {
-            parent.fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-
-                File newfile = parent.fc.getSelectedFile();
-                String newFile = newfile.getPath();
-                int index = newFile.indexOf(file.getAbsolutePath().trim());
-                if (index >= 0) {
-                    int lastindex = file.getAbsolutePath().trim().length();
-                    newFile = newFile.substring(lastindex + 1);
-                    char ch = parent.fileSeparator.toCharArray()[0];
-                    char newch = '.';
-                    int cindex = newFile.indexOf(ch);
-                    while (cindex >= 0) {
-                        newFile = newFile.replace(ch, newch);
-                        cindex = newFile.indexOf(ch);
-                    }
-                    fileName = newFile;
-                    int classIndex = fileName.lastIndexOf(".");
-                    fileName = fileName.substring(0, classIndex);
-                    txtClassDir.setText(fileName);
-
-
-                }
-            }
-        } else if (obj == load) {
-            if (file == null || fileName ==null) {
-                return;
-            }
-            try {
-                try {
-                    this.remove(sp);
-                    this.remove(tablelbl);
-                    lblServiceNam.setVisible(false);
-                    txtServiceName.setVisible(false);
-                } catch (Exception e1) {
-//                    e1.printStackTrace();
-                }
-
-//                ClassLoader classLoader = new URLClassLoader(
-//                        new URL[]{file.toURL()},SelectPanel.class.getClassLoader());
-
-                ClassLoader classLoader = parent.bean.getClassLoader();
-                Class serCla = Class.forName(fileName, true, classLoader);
-                Method[] methods = serCla.getDeclaredMethods();
-                operations = new HashMap();
-                if (methods.length > 0) {
-                    for (int i = 0; i < methods.length; i++) {
-                        Method method = methods[i];
-                        OperationObj operationobj = new OperationObj(method.getName(),
-                                method.getReturnType().toString(),
-                                new Integer(method.getParameterTypes().length), new Boolean(false));
-                        operations.put(method.getName(), operationobj);
-                    }
-                }
-
-                ArchiveTableModel myModel = new ArchiveTableModel(operations);
-                JTable table = new JTable(myModel);
-                tablelbl = new JLabel("Mark operation you do not want to publish ");
-                add(tablelbl);
-                tablelbl.setBounds(insets.left + 10, insets.top + 45, 400, 24);
-
-                sp = new JScrollPane(table);
-                add(sp);
-                sp.setAutoscrolls(true);
-                sp.setBounds(insets.left + 10, insets.top + 75, 550, 100);
-                txtServiceName.setText("MyService" + count);
-                lblServiceNam.setVisible(true);
-                txtServiceName.setVisible(true);
-                parent.setEnable(true,true,false,true);
-            } catch (ClassNotFoundException e1) {
-                JOptionPane.showMessageDialog(parent, "The specified file is not a valid java class",
-                            "Error!", JOptionPane.ERROR_MESSAGE);
-            }
-             catch (NoClassDefFoundError e1) {
-                JOptionPane.showMessageDialog(parent, "The specified file is not a valid java class",
-                            "Error!", JOptionPane.ERROR_MESSAGE);
-            }
-            parent.repaint();
-
-        }
-    }
-
-    public String getTopLable() {
-        return "Service class and operation selection";
-    }
-
-    public String getLable() {
-        return "First select service class and load its method operations";
-    }
-
-    public void process(){
-
-        ArrayList ops = new ArrayList();
-            Iterator opitr = operations.values().iterator();
-            while (opitr.hasNext()) {
-                OperationObj operationObj = (OperationObj) opitr.next();
-                if (operationObj.getSelect().booleanValue()) {
-                    ops.add(operationObj.getOpName());
-                }
-            }
-
-            ServiceObj service = new ServiceObj(txtServiceName.getText(), fileName, ops);
-
-            parent.bean.addToServicelsit(service);
-            if (!parent.singleService) {
-                int valu = JOptionPane.showConfirmDialog(parent, "Do you want to add an another service to group", "Service Archive",
-                        JOptionPane.YES_NO_OPTION);
-                if (valu == 0) {
-                    txtClassDir.setText("");
-                    fileName = "";
-                    try {
-                        this.remove(sp);
-                        this.remove(tablelbl);
-                        lblServiceNam.setVisible(false);
-                        txtServiceName.setVisible(false);
-                    } catch (Exception e1) {
-//                    e1.printStackTrace();
-                    }
-                    classPage = new ClassSelctionPage(parent);
-                    count++;
-                    parent.reShow();
-                    this.repaint();
-                } else {
-                    servicelsit = parent.bean.getServicelsit();
-                    parent.setEnable(false, true, false, true);
-                    sgXMl = "<serviceGroup>\n";
-                    for (int i = 0; i < servicelsit.size(); i++) {
-                        ServiceObj serviceObj = (ServiceObj) servicelsit.get(i);
-                        sgXMl = sgXMl + serviceObj.toString();
-                    }
-                    sgXMl = sgXMl + "</serviceGroup>";
-                    disfile = new DescriptorFile(parent, sgXMl);
-                    disfile.setPrivious(this);
-                }
-            } else {
-                servicelsit = parent.bean.getServicelsit();
-                parent.setEnable(false, true, false, true);
-                sgXMl = "<serviceGroup>\n";
-                for (int i = 0; i < servicelsit.size(); i++) {
-                    ServiceObj serviceObj = (ServiceObj) servicelsit.get(i);
-                    sgXMl = sgXMl + serviceObj.toString();
-                }
-                sgXMl = sgXMl + "</serviceGroup>";
-                disfile = new DescriptorFile(parent, sgXMl);
-                disfile.setPrivious(this);
-
-            }
-
-    }
-
-
-class ClassFileFilter extends FileFilter {
-
-    public boolean accept(File f) {
-        if (f.isDirectory()) {
-            return true;
-        }
-        String extension = getExtension(f);
-        if (extension != null) {
-            return extension.equals("class");
-        }
-
-        return false;
-
-    }
-
-    public String getDescription() {
-        return ".class";
-    }
-
-    private String getExtension(File f) {
-        String ext = null;
-        String s = f.getName();
-        int i = s.lastIndexOf('.');
-
-        if (i > 0 && i < s.length() - 1) {
-            ext = s.substring(i + 1).toLowerCase();
-        }
-        return ext;
-    }
-
-
-
-}
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/FirstFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/FirstFrame.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/FirstFrame.java	(working copy)
@@ -1,189 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 17, 2005
- * Time: 10:09:08 PM
- */
-public class FirstFrame extends JPanel implements ObjectKeeper {
-    JLabel lblArchivetype;
-    ButtonGroup cbgservoceType;
-    ButtonGroup cbggenerateserviceDesc;
-    JRadioButton radioSingle;
-    JRadioButton serviGroup;
-    JLabel label_1;
-    JRadioButton radioGenerate;
-    JRadioButton radihaveService;
-
-    private JPanel previous;
-    protected ClassSelctionPage classPage;
-    ServiceArciveFrame parent;
-
-    public FirstFrame(ServiceArciveFrame parent) {
-        this.parent = parent;
-        FirstFrameLayout customLayout = new FirstFrameLayout();
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        lblArchivetype = new JLabel("Select Archive Type");
-        add(lblArchivetype);
-
-        cbgservoceType = new ButtonGroup();
-        radioSingle = new JRadioButton("Single service Archive", true);
-        cbgservoceType.add(radioSingle);
-        add(radioSingle);
-
-        serviGroup = new JRadioButton("Service Group Archive", false);
-        cbgservoceType.add(serviGroup);
-        add(serviGroup);
-
-        label_1 = new JLabel("Do you want to generate services.xml");
-        add(label_1);
-
-        cbggenerateserviceDesc = new ButtonGroup();
-        radioGenerate = new JRadioButton("Generate services.xml", true);
-        cbggenerateserviceDesc.add(radioGenerate);
-        add(radioGenerate);
-
-        radihaveService = new JRadioButton("I already have services.xml", false);
-        cbggenerateserviceDesc.add(radihaveService);
-        add(radihaveService);
-
-        //creating next page
-//        classPage = new ClassSelctionPage(parent);
-//        classPage.setPrivious(this);
-        setSize(getPreferredSize());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setGeneretServiceDesc(radioGenerate.isSelected());
-        bean.setSingleService(radioSingle.isSelected());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-//        this.next = next;
-    }
-
-    public JPanel getNext() {
-        boolean singleservice = radioSingle.isSelected();
-        boolean generateXML = radioGenerate.isSelected();
-        
-        if (singleservice && generateXML) {
-            parent.singleService = true;
-            parent.generateServiceXML = true;
-            ClassSelctionPage classPage = new ClassSelctionPage(parent);
-            classPage.setPrivious(this);
-            return classPage;
-        } else if (!generateXML) {
-            parent.generateServiceXML = false;
-            XMLSelectionPage xml = new XMLSelectionPage(parent);
-            xml.setPrivious(this);
-            return xml;
-        } else {
-            parent.generateServiceXML = true;
-            parent.singleService = false;
-            ClassSelctionPage classPage = new ClassSelctionPage(parent);
-            classPage.setPrivious(this);
-            return classPage;
-        }
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public String getTopLable() {
-        return "Service Type selection";
-    }
-
-    public String getLable() {
-        return "Welcome to Axis2 service archive generation. " +
-                "Select service type";
-    }
-}
-
-class FirstFrameLayout implements LayoutManager {
-
-    public FirstFrameLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 494 + insets.left + insets.right;
-        dim.height = 281 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 24, 208, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 56, 184, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 88, 184, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 136, 250, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 168, 224, 24);
-        }
-        c = parent.getComponent(5);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 200, 224, 16);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ImagePanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ImagePanel.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ImagePanel.java	(working copy)
@@ -1,109 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 8:50:16 PM
- */
-public class ImagePanel extends JPanel {
-    JLabel lblImage;
-    JLabel labTop;
-    JLabel lblBottom;
-    ImageIcon apachelogo;
-
-    public ImagePanel() {
-        ImageLayout customLayout = new ImageLayout();
-        setLayout(customLayout);
-
-        java.net.URL resource = ImagePanel.class.getResource("/icons/asf-feather.png");
-        apachelogo = new ImageIcon(resource);
-
-        lblImage = new JLabel(apachelogo);
-        add(lblImage);
-        lblImage.setBackground(Color.white);
-
-        labTop = new JLabel();
-        labTop.setBackground(Color.white);
-        add(labTop);
-        labTop.setFont(new Font("Helvetica", Font.BOLD, 12));
-
-        lblBottom = new JLabel();
-        add(lblBottom);
-        lblBottom.setBackground(Color.white);
-        lblBottom.setFont(new Font("Helvetica", Font.PLAIN, 10));
-
-        setSize(getPreferredSize());
-        this.setBackground(Color.white);
-    }
-
-    public void setCaptions(String lbl1, String lbl2) {
-        labTop.setText("  " + lbl1);
-        lblBottom.setText("  " + lbl2);
-    }
-}
-
-class ImageLayout implements LayoutManager {
-
-    public ImageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 535 + insets.left + insets.right;
-        dim.height = 77 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-        return dim;
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 368, insets.top + 0, 168, 80);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 0, insets.top + 0, 368, 40);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 0, insets.top + 40, 368, 40);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassSelctionPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassSelctionPage.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassSelctionPage.java	(working copy)
@@ -1,128 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 22, 2005
- * Time: 5:18:26 PM
- */
-public class ClassSelctionPage extends JPanel implements ObjectKeeper, ActionListener {
-
-    protected JLabel lblClass;
-    protected JTextField txtClassDir;
-    protected JButton butSelect;
-
-    private JPanel previous;
-
-    File file;
-    Insets insets;
-    ServiceArciveFrame parent;
-//    protected SelectPanel selectPanel;
-
-
-    public ClassSelctionPage(ServiceArciveFrame parent) {
-        this.parent = parent;
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        this.setLayout(null);
-        insets = parent.getInsets();
-
-        lblClass = new JLabel("Select Classes");
-        add(lblClass);
-        lblClass.setBounds(insets.left + 8, insets.top + 24, 120, 24);
-
-        txtClassDir = new JTextField("");
-        add(txtClassDir);
-        txtClassDir.setBounds(insets.left + 136, insets.top + 24, 336, 24);
-
-        butSelect = new JButton("Browse...");
-        add(butSelect);
-        butSelect.addActionListener(this);
-        butSelect.setBounds(insets.left + 480, insets.top + 24, 90, 24);
-        setSize(getPreferredSize());
-//        this.parent.setEnable(true, false, false, true);
-//        this.parent.reShow();
-
-
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setClassLoc(file);
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-    }
-
-    public JPanel getNext() {
-        ResourceChooser res = new ResourceChooser(parent);
-        parent.setEnable(true,true,false,true);
-        res.setPrivious(this);
-        return res;
-//        return selectPanel;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-
-    public String getTopLable() {
-        return "Class location selection";
-    }
-
-    public String getLable() {
-        return " Select the location of service classes directory";
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butSelect) {
-            parent.fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                file = parent.fc.getSelectedFile();
-                parent.fc.setCurrentDirectory(file);
-                txtClassDir.setText(file.getAbsolutePath());
-                parent.setEnable(true, true, false, true);
-//                selectPanel = new SelectPanel(parent,file);
-//                selectPanel.setPrivious(this);
-            } else {
-                txtClassDir.setText("");
-                parent.setEnable(true, false, false, true);
-            }
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/XMLSelectionPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/XMLSelectionPage.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/XMLSelectionPage.java	(working copy)
@@ -1,178 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.IOException;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 11:26:02 PM
- */
-public class XMLSelectionPage extends JPanel implements ObjectKeeper, ActionListener {
-    JLabel selectxml;
-    JTextField txtService;
-    JButton butSelect;
-
-    JLabel selctclass;
-    JTextField txtclass;
-    File file;
-    JButton bustSelectclss;
-    String value;
-    private JPanel previous;
-
-    protected ServiceArciveFrame parent;
-
-    public XMLSelectionPage(ServiceArciveFrame parent) {
-        Insets insets = parent.getInsets();
-        this.parent = parent;
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(null);
-
-        selectxml = new JLabel("Select services.xml");
-        add(selectxml);
-
-        txtService = new JTextField("");
-        add(txtService);
-
-        butSelect = new JButton("Browse...");
-        butSelect.addActionListener(this);
-        add(butSelect);
-
-        selctclass = new JLabel("Select class location");
-        add(selctclass);
-
-        txtclass = new JTextField("");
-        add(txtclass);
-
-        bustSelectclss = new JButton("Browse...");
-        bustSelectclss.addActionListener(this);
-        add(bustSelectclss);
-
-        selectxml.setBounds(insets.left + 16, insets.top + 16, 168, 24);
-        txtService.setBounds(insets.left + 192, insets.top + 16, 288, 24);
-        butSelect.setBounds(insets.left + 488, insets.top + 16, 90, 24);
-
-        selctclass.setBounds(insets.left + 16, insets.top + 45, 168, 24);
-        txtclass.setBounds(insets.left + 192, insets.top + 45, 288, 24);
-        bustSelectclss.setBounds(insets.left + 488, insets.top + 45, 90, 24);
-
-        setSize(getPreferredSize());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.addClassLocation(file);
-        bean.setClassLoc(file);
-        bean.setServiceXML(value);
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-
-    }
-
-    public String getTopLable() {
-        return "Class location & Service descriptor selection";
-    }
-
-    public String getLable() {
-        return " Select the location of service classes directory and services.xml";
-    }
-
-    public JPanel getNext() {
-
-        ResourceChooser resourceChooser = new ResourceChooser(parent);
-        parent.setEnable(true,true,false,true);
-        resourceChooser.setPrivious(this);
-        return resourceChooser;
-
-
-        /*
-        DescriptorFile disfile = new DescriptorFile(parent, value);
-        disfile.setPrivious(this);
-        return disfile;
-        */
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == bustSelectclss) {
-            parent.fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                file = parent.fc.getSelectedFile();
-                txtclass.setText(file.getAbsolutePath());
-                if ((new File(txtService.getText())).isFile())
-                parent.setEnable(false, true, false, true);
-            } else {
-                txtclass.setText("");
-                parent.setEnable(true, false, false, true);
-            }
-
-        } else if (obj == butSelect) {
-            parent.fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                File file = parent.fc.getSelectedFile();
-
-                byte[] buf = new byte[1024];
-                int read;
-                ByteArrayOutputStream out;
-                try {
-                    FileInputStream in = new FileInputStream(file);
-
-                    out = new ByteArrayOutputStream();
-                    while ((read = in.read(buf)) > 0) {
-                        out.write(buf, 0, read);
-                    }
-                    in.close();
-                    value = new String(out.toByteArray());
-                } catch (IOException e1) {
-                }
-                txtService.setText(file.getAbsolutePath());
-                if ((new File(txtclass.getText())).isDirectory())
-                parent.setEnable(false, true, false, true);
-            } else {
-                txtService.setText("");
-                parent.setEnable(true, false, false, true);
-            }
-
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/BottomPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/BottomPanel.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/BottomPanel.java	(working copy)
@@ -1,174 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 12:01:58 PM
- */
-public class BottomPanel extends JPanel implements ActionListener {
-    JButton butBack;
-    JButton butNext;
-    JButton btnFinsh;
-    JButton btnCanclel;
-    ServiceArciveFrame parent;
-    private ArchiveBean bean;
-
-    private JPanel currentPanel = null;
-
-    public BottomPanel(JPanel currPanel, ServiceArciveFrame parent, ArchiveBean bean) {
-        BottomPanelLayout customLayout = new BottomPanelLayout();
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-        this.parent = parent;
-        this.bean = bean;
-
-        butBack = new JButton("< Back");
-        add(butBack);
-        butBack.addActionListener(this);
-
-        butNext = new JButton("Next >");
-        butNext.setEnabled(false);
-        add(butNext);
-        butNext.addActionListener(this);
-
-        btnFinsh = new JButton("Finish");
-        btnFinsh.setEnabled(false);
-        add(btnFinsh);
-        btnFinsh.addActionListener(this);
-
-        btnCanclel = new JButton("Cancel");
-        add(btnCanclel);
-        btnCanclel.addActionListener(this);
-
-        this.currentPanel = currPanel;
-
-        if (((ObjectKeeper) currentPanel).getPrivious() == null) {
-            butBack.setEnabled(false);
-        }
-        setSize(getPreferredSize());
-    }
-
-    public void setEnable(boolean back, boolean next, boolean finish, boolean cancel) {
-        butBack.setEnabled(back);
-        butNext.setEnabled(next);
-        btnFinsh.setEnabled(finish);
-        btnCanclel.setEnabled(cancel);
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == btnCanclel) {
-            parent.setVisible(false);
-        }
-        if (obj == butNext) {
-            ((ObjectKeeper) currentPanel).fillBean(bean);
-            if (currentPanel instanceof SelectPanel){
-               ((SelectPanel)currentPanel).process(); 
-            }
-            if(currentPanel instanceof FirstFrame){
-                parent.setEnable(true, false, false, true);
-            }
-            currentPanel = ((ObjectKeeper) currentPanel).getNext();
-
-
-            parent.Next(currentPanel);
-
-        } else if (obj == btnFinsh) {
-            ((ObjectKeeper) currentPanel).fillBean(bean);
-            try {
-                bean.finsh();
-            } catch (Exception e1) {
-               JOptionPane.showMessageDialog(parent, "An error occured while creating the service archieve",
-                    "Error!", JOptionPane.ERROR_MESSAGE);
-            parent.dispose();
-            }
-
-            JOptionPane.showMessageDialog(parent, "Service creation successful!",
-                    "Axis2 Service creation", JOptionPane.INFORMATION_MESSAGE);
-            parent.dispose();
-
-        } else if (obj == butBack) {
-            currentPanel = ((ObjectKeeper) currentPanel).getPrivious();
-            parent.Back(currentPanel);
-            if (currentPanel instanceof FirstFrame) {
-                parent.setEnable(false, true, false, true);
-            }
-        }
-    }
-}
-
-class BottomPanelLayout implements LayoutManager {
-
-    public BottomPanelLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 606 + insets.left + insets.right;
-        dim.height = 64 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 176, insets.top + 24, 80, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 260, insets.top + 24, 80, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 344, insets.top + 24, 80, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 426, insets.top + 24, 80, 24);
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/OutPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/OutPage.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/OutPage.java	(working copy)
@@ -1,172 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 5:12:13 PM
- */
-public class OutPage extends JPanel implements ObjectKeeper, ActionListener {
-    JLabel lblout;
-    JTextField txtoutput;
-    JButton butselect;
-    JLabel lblname;
-    JTextField txtjarName;
-
-    public final JFileChooser fc = new JFileChooser();
-    ServiceArciveFrame parent;
-    private JPanel previous;
-
-
-    public OutPage(ServiceArciveFrame parent) {
-        this.parent = parent;
-        OutPageLayout customLayout = new OutPageLayout();
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        lblout = new JLabel("Select Output location");
-        add(lblout);
-
-        txtoutput = new JTextField(".");
-        add(txtoutput);
-
-        butselect = new JButton("Browse...");
-        butselect.addActionListener(this);
-        add(butselect);
-
-        lblname = new JLabel("Archive name");
-        add(lblname);
-
-        txtjarName = new JTextField("MyArchive");
-        add(txtjarName);
-
-        setSize(getPreferredSize());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setOutPath(txtoutput.getText().trim());
-        bean.setArchiveName(txtjarName.getText().trim());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-
-    }
-
-    public JPanel getNext() {
-        return null;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public String getTopLable() {
-        return "Output location selection";
-    }
-
-    public String getLable() {
-        return "Select output location and archive name";
-    }
-
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butselect) {
-            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-            int returnVal = fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-                File newfile = fc.getSelectedFile();
-                txtoutput.setText(newfile.getAbsolutePath());
-            } else {
-                txtoutput.setText("");
-            }
-            parent.setEnable(false, false, true, true);
-        }
-    }
-}
-
-class OutPageLayout implements LayoutManager {
-
-    public OutPageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 594 + insets.left + insets.right;
-        dim.height = 240 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 16, 152, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 168, insets.top + 16, 312, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 488, insets.top + 16, 90, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 56, 152, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 168, insets.top + 56, 312, 24);
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArciveFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArciveFrame.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArciveFrame.java	(working copy)
@@ -1,165 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 11:45:58 AM
- */
-public class ServiceArciveFrame extends JFrame {
-
-    protected ImagePanel topPanel;
-    protected BottomPanel bottomPanel;
-    public boolean singleService;
-    public boolean generateServiceXML;
-    //  protected JPanel firstpanel ;
-    //    protected SelectPanel slectpanel;
-    protected JPanel currentpanle;
-    public String fileSeparator = System.getProperty("file.separator");
-    public final JFileChooser fc = new JFileChooser();
-    Insets insets;
-    ArchiveBean bean;
-
-    public ServiceArciveFrame() {
-        setBounds(200, 200, 600, 420);
-        getContentPane().setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(null);
-        getContentPane().setBounds(200, 200, 600, 420);
-        bean = new ArchiveBean();
-
-        topPanel = new ImagePanel();
-        getContentPane().add(topPanel);
-        topPanel.setCaptions("Service Type selection", "Welcome to Axis2 service archive generation. " +
-                "Select service type");
-
-        currentpanle = new FirstFrame(this);
-        getContentPane().add(currentpanle);
-
-
-        bottomPanel = new BottomPanel(currentpanle, this, bean);
-        getContentPane().add(bottomPanel);
-        bottomPanel.setEnable(false, true, false, true);
-
-        insets = getInsets();
-        topPanel.setBounds(insets.left, insets.top, 608, 80);
-        currentpanle.setBounds(insets.left, insets.top + 80, 608, 260);
-        bottomPanel.setBounds(insets.left, insets.top + 328, 608, 60);
-        setSize(getPreferredSize());
-        setResizable(false);
-        
-
-    }
-
-    public void setEnable(boolean back, boolean next, boolean finish, boolean cancel) {
-        if (currentpanle instanceof FirstFrame) {
-            bottomPanel.setEnable(back, next, finish, cancel);
-        } else {
-            bottomPanel.setEnable(back, next, finish, cancel);
-        }
-
-    }
-
-    public void Next(JPanel current) {
-        currentpanle.setVisible(false);
-        try {
-            remove(currentpanle);
-        } catch (Exception e) {
-            System.out.println("");
-        }
-        getContentPane().add(current);
-        current.setBounds(insets.left, insets.top + 80, 608, 260);
-        currentpanle = current;
-        
-        reShow();
-    }
-
-    public void Back(JPanel current) {
-        currentpanle.setVisible(false);
-        try {
-            remove(currentpanle);
-        } catch (Exception e) {
-            System.out.println("");
-        }
-        getContentPane().add(current);
-        current.setBounds(insets.left, insets.top + 80, 608, 260);
-        currentpanle = current;
-        currentpanle.setVisible(true);
-        setEnable(true, true, false, true);
-        reShow();
-    }
-
-    public void reShow() {
-        ObjectKeeper keeper = (ObjectKeeper) currentpanle;
-        topPanel.setCaptions(keeper.getTopLable(), keeper.getLable());
-        this.show();
-    }
-
-    class MainFrameLayout implements LayoutManager {
-
-        public MainFrameLayout() {
-        }
-
-        public void addLayoutComponent(String name, Component comp) {
-        }
-
-        public void removeLayoutComponent(Component comp) {
-        }
-
-        public Dimension preferredLayoutSize(Container parent) {
-            Dimension dim = new Dimension(0, 0);
-
-            Insets insets = parent.getInsets();
-            dim.width = 608 + insets.left + insets.right;
-            dim.height = 400 + insets.top + insets.bottom;
-
-            return dim;
-        }
-
-        public Dimension minimumLayoutSize(Container parent) {
-            return new Dimension(0, 0);
-        }
-
-        public void layoutContainer(Container parent) {
-            Insets insets = parent.getInsets();
-
-            Component c;
-            c = parent.getComponent(0);
-            if (c.isVisible()) {
-                c.setBounds(insets.left, insets.top, 608, 80);
-            }
-            c = parent.getComponent(1);
-            if (c.isVisible()) {
-                c.setBounds(insets.left, insets.top + 80, 608, 260);
-            }
-            c = parent.getComponent(2);
-            if (c.isVisible()) {
-                c.setBounds(insets.left, insets.top + 328, 608, 60);
-            }
-//        c = parent.getComponent(3);
-//        if (c.isVisible()) {c.setBounds(insets.left+0,insets.top+80,608,260);}
-        }
-    }
-}
\ No newline at end of file
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ResourceChooser.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ResourceChooser.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ResourceChooser.java	(working copy)
@@ -1,318 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.net.URLClassLoader;
-import java.util.ArrayList;
-import java.util.Enumeration;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 4:30:18 PM
- */
-public class ResourceChooser extends JPanel implements ObjectKeeper, ActionListener {
-
-    JLabel libLbl;
-    JTextField txtLibs;
-    JButton butLoad;
-    JButton butselect;
-    JList lisLibs;
-    JScrollPane sp_lisLibs;
-    JLabel lblwsdl;
-    JTextField txtwsdl;
-    JButton butSelectwsdl;
-    JButton butaddwsdl;
-    JList listwsdl;
-    JScrollPane sp_listwsdl;
-    private DefaultListModel listModellibs;
-    private DefaultListModel listModellwsdls;
-    private JPanel previous;
-
-    public final JFileChooser fc = new JFileChooser();
-    ServiceArciveFrame parent;
-
-    public ResourceChooser(ServiceArciveFrame parent) {
-        this.parent = parent;
-        ResourceChooserLayout customLayout = new ResourceChooserLayout();
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        libLbl = new JLabel("Select Lib files : ");
-        add(libLbl);
-
-        txtLibs = new JTextField("");
-        add(txtLibs);
-
-        butLoad = new JButton("Add");
-        butLoad.addActionListener(this);
-        add(butLoad);
-
-        butselect = new JButton("Browse...");
-        butselect.addActionListener(this);
-        add(butselect);
-
-        listModellibs = new DefaultListModel();
-        lisLibs = new JList(listModellibs);
-        sp_lisLibs = new JScrollPane(lisLibs);
-        add(sp_lisLibs);
-
-        lblwsdl = new JLabel("Select WSDLs : ");
-        add(lblwsdl);
-
-        txtwsdl = new JTextField("");
-        add(txtwsdl);
-
-        butSelectwsdl = new JButton("Browse...");
-        butSelectwsdl.addActionListener(this);
-        add(butSelectwsdl);
-
-        butaddwsdl = new JButton("Add");
-        butaddwsdl.addActionListener(this);
-        add(butaddwsdl);
-
-        listModellwsdls = new DefaultListModel();
-        listwsdl = new JList(listModellwsdls);
-        sp_listwsdl = new JScrollPane(listwsdl);
-        add(sp_listwsdl);
-
-   setSize(getPreferredSize());
-
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butLoad) {
-            File lib = new File(txtLibs.getText());
-            if (lib.isFile() ) {
-                if( !listModellibs.contains(txtLibs.getText()))
-            listModellibs.addElement(txtLibs.getText());
-            }
-            else{
-                JOptionPane.showMessageDialog(parent, "The file selected is not a valid jar file",
-                    "Axis2 ServiceArchieve creation", JOptionPane.ERROR_MESSAGE);
-            }
-        } else if (obj == butselect) {
-            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-                File newfile = fc.getSelectedFile();
-                txtLibs.setText(newfile.getAbsolutePath());
-            } else {
-                txtLibs.setText("");
-            }
-        } else if (obj == butSelectwsdl) {
-            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-                File newfile = fc.getSelectedFile();
-                txtwsdl.setText(newfile.getAbsolutePath());
-            } else {
-                txtwsdl.setText("");
-            }
-        } else if (obj == butaddwsdl) {
-            File wsdl = new File(txtwsdl.getText());
-            if (wsdl.isFile()){
-                if(!listModellwsdls.contains(txtwsdl.getText()))
-            listModellwsdls.addElement(txtwsdl.getText());
-            }
-            else{
-                JOptionPane.showMessageDialog(parent, "The file selected is not a valid jar file",
-                    "Axis2 ServiceArchieve creation", JOptionPane.ERROR_MESSAGE);
-            }
-        }
-    }
-
-    public void fillBean(ArchiveBean bean) {
-
-        Enumeration enumerator = listModellibs.elements();
-        ArrayList libs = new ArrayList();
-        URL urllist[] = new URL[listModellibs.size() + 1];
-        int count = 0;
-        while (enumerator.hasMoreElements()) {
-            String s = (String) enumerator.nextElement();
-            File file = new File(s);
-            if (file.exists()) {
-                try {
-                    urllist[count] = file.toURL();
-                } catch (MalformedURLException e) {
-                    System.out.println("Error");
-                }
-            }
-            libs.add(s);
-            count++;
-        }
-        try {
-            urllist[count] = bean.getClassLoc().toURL();
-        } catch (MalformedURLException e) {
-
-        }
-        ClassLoader cls = new URLClassLoader(urllist, ResourceChooser.class.getClassLoader());
-        bean.setClassLoader(cls);
-//        Enumeration enumerator =listModellibs.elements();
-//        ArrayList libs = new ArrayList();
-//        while (enumerator.hasMoreElements()) {
-//            String s = (String) enumerator.nextElement();
-//            libs.add(s);
-//        }
-        bean.setTempLibs(libs);
-        enumerator = listModellwsdls.elements();
-        ArrayList wsdls = new ArrayList();
-        while (enumerator.hasMoreElements()) {
-            String s = (String) enumerator.nextElement();
-            wsdls.add(s);
-        }
-        bean.setTempWsdls(wsdls);
-    }
-
-
-    public String getTopLable() {
-        return "Resource Selection";
-    }
-
-    public String getLable() {
-        return "Select service specific lib and service WSDLs";
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-
-    }
-
-    public JPanel getNext() {
-
-
-
-
-        if (parent.generateServiceXML) {
-            parent.setEnable(true, false, false, true);
-            SelectPanel sp = new SelectPanel(parent, parent.bean.getClassLoc());
-            
-            
-            sp.setPrivious(this);
-            return sp;
-        } else {
-            DescriptorFile dis = new DescriptorFile(parent, parent.bean.getServiceXML());
-            parent.setEnable(true, true, false, true);
-            dis.setPrivious(this);
-            return dis;
-        }
-
-
-//        OutPage op = new OutPage(parent);
-//        op.setPrivious(this);
-//        return op;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-}
-
-class ResourceChooserLayout implements LayoutManager {
-
-    public ResourceChooserLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 587 + insets.left + insets.right;
-        dim.height = 278 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-        return dim;
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 16, insets.top + 16, 100, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 16, 300, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 530, insets.top + 16, 60, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 430, insets.top + 16, 90, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 48, 300, 72);
-        }
-        c = parent.getComponent(5);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 16, insets.top + 128, 100, 24);
-        }
-        c = parent.getComponent(6);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 128, 300, 24);
-        }
-        c = parent.getComponent(7);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 430, insets.top + 128, 90, 24);
-        }
-        c = parent.getComponent(8);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 530, insets.top + 128, 60, 24);
-        }
-        c = parent.getComponent(9);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 160, 300, 72);
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LogoPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LogoPage.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LogoPage.java	(working copy)
@@ -1,82 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 24, 2005
- * Time: 11:04:25 AM
- */
-public class LogoPage extends JPanel {
-    JLabel imagelbl;
-    ImageIcon apachelogo;
-
-    public LogoPage() {
-        LogoPageLayout customLayout = new LogoPageLayout();
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        java.net.URL resource = LogoPage.class.getResource("/icons/asf-feather.png");
-        apachelogo = new ImageIcon(resource);
-        imagelbl = new JLabel(apachelogo);
-        add(imagelbl);
-        setSize(getPreferredSize());
-        setBackground(Color.white);
-    }
-}
-
-class LogoPageLayout implements LayoutManager {
-
-    public LogoPageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 320 + insets.left + insets.right;
-        dim.height = 76 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-        return dim;
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 8, 304, 64);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/DescriptorFile.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/DescriptorFile.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/DescriptorFile.java	(working copy)
@@ -1,127 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.ModuleDialog;
-import org.apache.ideaplugin.ParameterDialog;
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 22, 2005
- * Time: 11:42:16 PM
- */
-public class DescriptorFile extends JPanel implements ObjectKeeper, ActionListener {
-
-    protected JTextArea desArea;
-    protected JButton butaddpara;
-    protected JButton addModuleRef;
-    protected ServiceArciveFrame parent;
-    protected Insets insets;
-    protected JScrollPane sp;
-
-    protected ParameterDialog pradialog;
-    protected ModuleDialog moduledialog;
-    private JPanel previous;
-
-    public DescriptorFile(ServiceArciveFrame parent, String XML) {
-        this.parent = parent;
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        this.setLayout(null);
-        insets = parent.getInsets();
-
-        desArea = new JTextArea(XML);
-        sp = new JScrollPane(desArea);
-        sp.setAutoscrolls(true);
-        add(sp);
-        sp.setBounds(insets.left + 8, insets.top + 26, 560, 190);
-
-        butaddpara = new JButton("+Parameter ");
-        add(butaddpara);
-        butaddpara.addActionListener(this);
-        butaddpara.setBounds(insets.left + 10, insets.top + 2, 120, 20);
-
-        addModuleRef = new JButton("+ModuleRef ");
-        add(addModuleRef);
-        addModuleRef.addActionListener(this);
-        addModuleRef.setBounds(insets.left + 135, insets.top + 2, 120, 20);
-
-        pradialog = new ParameterDialog();
-        moduledialog = new ModuleDialog();
-        setSize(getPreferredSize());
-
-
-    }
-
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setServiceXML(desArea.getText());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-    }
-
-    public JPanel getNext() {
-        OutPage out = new OutPage(parent);
-        parent.setEnable(true, true, false, true);
-        out.setPrivious(this);
-        return out;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butaddpara) {
-            String str = "";
-            int cusrpos = desArea.getCaretPosition();
-            pradialog.showDialog(str, desArea, cusrpos);
-            pradialog.hideForm();
-        } else if (obj == addModuleRef) {
-            String str = "";
-            int cusrpos = desArea.getCaretPosition();
-            moduledialog.showDialog(str, desArea, cusrpos);
-            moduledialog.hideForm();
-        }
-    }
-
-    public String getTopLable() {
-        return "Edit service descriptor";
-    }
-
-    public String getLable() {
-        return "Edit description file add parameters and module references";
-    }
-
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/plugin/Axis2IdeaPlugin.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/plugin/Axis2IdeaPlugin.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/plugin/Axis2IdeaPlugin.java	(working copy)
@@ -22,13 +22,13 @@
 import com.intellij.openapi.options.Configurable;
 import com.intellij.openapi.options.ConfigurationException;
 import com.intellij.openapi.project.Project;
-import org.apache.ideaplugin.frames.Axi2PluginPage;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
 
 import javax.swing.*;
 import javax.xml.stream.XMLInputFactory;
 
 public class Axis2IdeaPlugin implements ApplicationComponent, Configurable {
-    private Axi2PluginPage form;
+    private CodegenFrame form;
     private ImageIcon myIcon;
 
     /**
@@ -45,8 +45,8 @@
         }
 
         if (form == null) {
-            form = new Axi2PluginPage();
-            form.setResizable(false);
+            form = new CodegenFrame();
+            form.setResizable(true);
             form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         }
         if (myIcon == null) {
@@ -85,7 +85,7 @@
 
     public JComponent createComponent() {
         if (form == null) {
-            form = new Axi2PluginPage();
+            form = new CodegenFrame();
         }
         return form.getRootComponent();
     }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/component/WizardPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/component/WizardPanel.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/component/WizardPanel.java	(working copy)
@@ -32,11 +32,13 @@
     private ImageIcon panelImage;
     private String  panelBottomTitle;
     private String error;
+    private String frametitle;
     private boolean flag;
     private boolean progressFlag;
     public static final int WSDL_2_JAVA_TYPE = 1;
     public static final int JAVA_2_WSDL_TYPE = 2;
-    public static final int UNSPECIFIED_TYPE = 3;
+    public static final int SERVICE_ARCHIVE_TYPE=3;
+    public static final int UNSPECIFIED_TYPE = 4;
     private boolean isPageComplete = false;
 
     public WizardPanel(WizardComponents wizardComponents) {
@@ -45,7 +47,7 @@
 
     public WizardPanel(WizardComponents wizardComponents, String title) {
         this.wizardComponents = wizardComponents;
-        this.panelTopTitle = title;
+        this.frametitle = title;
         java.net.URL resource = WizardPanel.class.getResource("/icons/asf-feather.png");
         setPanelImage(new ImageIcon(resource));
     }
@@ -111,6 +113,13 @@
         return progressFlag;
     }
 
+    public String getFrameTitle(){
+         return this.frametitle;
+    }
+
+    public void setFrameTitle(String title){
+        this.frametitle=title;
+    }
     // next
     protected boolean goNext() {
         if (wizardComponents.getWizardPanelList().size() > wizardComponents.getCurrentIndex()+1 ) {
@@ -132,7 +141,7 @@
         }
     }
     
-    protected void switchPanel(int panelIndex) {
+    public void switchPanel(int panelIndex) {
         getWizardComponents().setCurrentIndex(panelIndex);
         getWizardComponents().updateComponents();
     }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPluginAction.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPluginAction.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPluginAction.java	(working copy)
@@ -1,49 +0,0 @@
-package org.apache.axis2.tools.idea;
-
-import com.intellij.openapi.actionSystem.*;
-import com.intellij.openapi.application.Application;
-import com.intellij.openapi.application.ApplicationManager;
-import com.intellij.openapi.project.Project;
-
-import javax.swing.*;
-
-
-/**
- * Created by IntelliJ IDEA.
- * User: shivantha
- * Date: 9/07/2007
- * Time: 17:40:25
- * To change this template use File | Settings | File Templates.
- */
-public class CodegenPluginAction extends AnAction {
-
-    private ImageIcon myIcon;
-
-    public CodegenPluginAction() {
-        super("GC", "Axis2 Code Generator", null);
-    }
-
-    public void actionPerformed(AnActionEvent anActionEvent) {
-        Application application =
-                ApplicationManager.getApplication();
-        Project project = (Project) anActionEvent.getDataContext().getData(DataConstants.PROJECT);
-
-        CodegenPlugin axis2component =
-                (CodegenPlugin) application.getComponent(CodegenPlugin.class);
-        axis2component.showTool(project);
-    }
-
-    public void update(AnActionEvent event) {
-        super.update(event);
-        Presentation presentation = event.getPresentation();
-        if (ActionPlaces.MAIN_TOOLBAR.equals(event.getPlace())) {
-            if (myIcon == null) {
-                java.net.URL resource = CodegenPluginAction.class.getResource("/icons/icon.png");
-                myIcon = new ImageIcon(resource);
-            }
-            presentation.setIcon(myIcon);
-        }
-    }
-
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ChooserPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ChooserPanel.java	(revision 555556)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ChooserPanel.java	(working copy)
@@ -29,8 +29,9 @@
     private boolean flag=false;
     private JRadioButton optionJ2WRadioButton;
     private JRadioButton optionW2JRadioButton;
+    private JRadioButton optionServiceArchiverRadioButton;
     private ButtonGroup bg;
-    private char selectedOption = 'A'; // 'N' is no option selected  'A', 'B' & 'F' stands for options
+    private char selectedOption = 'A'; // 'N' is no option selected  'A', 'B','C' & 'F' stands for options
     final private String hint="You can generate java code from a WSDL or WSDL from a java source file.";
     /**
      * construct method for chooserPanel
@@ -39,7 +40,7 @@
 
     public ChooserPanel(WizardComponents wizardComponents){
 
-        super(wizardComponents, "ChooserPanel");
+        super(wizardComponents, "Axis2 Idea Plugin Wizards");
         setPanelTopTitle("Select the wizard");
         setPanelBottomTitle("Welcome to the Axis2 code generator wizard");
         init();
@@ -56,9 +57,11 @@
 
         optionW2JRadioButton = new JRadioButton("Generate java sorce code from a WSDl file.",true);
         optionJ2WRadioButton = new JRadioButton("Generate a WSDl from a java source file",false);
+        optionServiceArchiverRadioButton = new JRadioButton("Create Service Archiver",false);
         ButtonGroup bg = new ButtonGroup();
         bg.add(optionJ2WRadioButton);
         bg.add(optionW2JRadioButton);
+        bg.add(optionServiceArchiverRadioButton);
 
         this.setLayout(new GridBagLayout() );
 
@@ -97,11 +100,26 @@
                 }
             }
         });
+        // option button for service Archive
 
+            this.add(optionServiceArchiverRadioButton
+                    , new GridBagConstraints(0, 3, 1, 1, 1.0, 0.0
+                    , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
+                    , new Insets(10, 20, 0,0), 0, 0));
+            optionServiceArchiverRadioButton .addItemListener(new ItemListener() {
+                public void itemStateChanged(ItemEvent e) {
+                    if (e.getStateChange() == ItemEvent.SELECTED) {
+                        selectedOption = 'C';
+                        update();
+                    }
+                }
+            });
+
+
         // hint button
 
         this.add(btnHint,
-                new GridBagConstraints(0,3, 1, 1, 1.0,0.0
+                new GridBagConstraints(0,4, 1, 1, 1.0,0.0
                         , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
                         , new Insets(10, 20, 0,0), 0, 0));
         btnHint.addActionListener(new ActionListener()  {
@@ -122,7 +140,7 @@
         // hint lable
 
         this.add(lblHint,
-                new GridBagConstraints(0, 4, 1, 1, 1.0, 1.0
+                new GridBagConstraints(0, 5, 1, 1, 1.0, 1.0
                         , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
                         , new Insets(10, 20, 0,0), 0, 0));
 
@@ -136,7 +154,7 @@
      */
 
     public void update() {
-        setNextButtonEnabled((selectedOption == 'A') || (selectedOption == 'B') );
+        setNextButtonEnabled((selectedOption == 'A') || (selectedOption == 'B') ||(selectedOption == 'C'));
         setBackButtonEnabled(false); // there is no way back
         setProgressPanelVisible(false);
         setPageComplete(true);
@@ -151,8 +169,10 @@
 
         } else if (selectedOption == 'B') {
             switchPanel(CodegenFrame.PANEL_FIRST_B );
-            setNextButtonEnabled(false);
         }
+        else if (selectedOption == 'C') {
+            switchPanel(CodegenFrame.PANEL_FIRST_C );
+        }
     }
 
     /**
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPlugin.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPlugin.java	(revision 556526)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPlugin.java	(working copy)
@@ -1,123 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.axis2.tools.idea;
-
-import com.intellij.openapi.components.ApplicationComponent;
-import com.intellij.openapi.options.Configurable;
-import com.intellij.openapi.options.ConfigurationException;
-import com.intellij.openapi.project.Project;
-
-import javax.swing.*;
-import javax.xml.stream.XMLInputFactory;
-
-import org.apache.axis2.tools.wizardframe.CodegenFrame;
-
-/**
- * <h3>SampleApplicationPlugin</h3>
- * <p/>
- * Application level plugin sample showing IDEA <b>OpenAPI</b> basics.<br>
- * Implements <code>ApplicationComponent</code> interface.
- */
-public class CodegenPlugin implements ApplicationComponent , Configurable {
-
-    private CodegenFrame form;
-    private ImageIcon myIcon;
-
-    /**
-     * Method is called after plugin is already created and configured. Plugin can start to communicate with
-     * other plugins only in this method.
-     */
-    public void initComponent() {
-        try {
-            XMLInputFactory.newInstance();
-        } catch (Exception e) {
-            //Fixing class loading issue
-        } catch (Throwable e) {
-            ////Fixing class loading issue
-        }
-
-        if (form == null) {
-            form = new CodegenFrame();
-            form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-            form.setSize(500,500);
-        }
-        if (myIcon == null) {
-            java.net.URL resource = CodegenFrame.class.getResource("/icons/icon.png");
-            myIcon = new ImageIcon(resource);
-        }
-    }
-
-    /**
-     * This method is called on plugin disposal.
-     */
-    public void disposeComponent() {
-    }
-
-    /**
-     * Returns the name of component
-     *
-     * @return String representing component name. Use PluginName.ComponentName notation
-     *         to avoid conflicts.
-     */
-    public String getComponentName() {
-        return "ActionsSample.CodegenPlugin";
-    }
-
-    public String getDisplayName() {
-        return "Axis2 Codegen Plug-ins";
-    }
-
-    public Icon getIcon() {
-        return myIcon;
-    }
-
-    public String getHelpTopic() {
-        return "No help available";
-    }
-
-    public JComponent createComponent() {
-        if (form == null) {
-            form = new CodegenFrame();
-        }
-        return form.getRootComponent();
-    }
-
-    public boolean isModified() {
-        return false;
-    }
-
-    public void apply() throws ConfigurationException {
-
-    }
-
-    public void reset() {
-        //To change body of implemented methods use File | Settings | File Templates.
-    }
-
-    public void disposeUIResources() {
-        form = null;
-    }
-
-    public void showTool(Project project) {
-        form.setProject(project);
-        form.showUI();
-
-    }
-}
\ No newline at end of file
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/FirstPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/FirstPanel.java	(revision 555556)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/FirstPanel.java	(working copy)
@@ -52,7 +52,7 @@
     private CodegenBean codegenBean;
 
     public FirstPanel(WizardComponents wizardComponents,CodegenBean codegenBean) {
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents, "Axis2 Idea Plugin WSDL2Java Wizards");
         this.codegenBean=codegenBean;
         setPanelTopTitle("WSDL selection page");
         setPanelBottomTitle("please Select the WSDl file location");
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ProgressBarPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ProgressBarPanel.java	(revision 555556)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ProgressBarPanel.java	(working copy)
@@ -78,7 +78,7 @@
                 int maximum =progressSent.getMaximum();
                 Runnable runner = new Runnable() {
                     public void run() {
-                        if(stop && progressSent .getValue()<75){
+                        if(stop && progressSent .getValue()<99){
 
                             progressSent .setIndeterminate(false);
                             int value = progressSent .getValue();
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/SecondPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/SecondPanel.java	(revision 555553)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/SecondPanel.java	(working copy)
@@ -58,7 +58,7 @@
     private CodegenBean codegenBean;
 
     public SecondPanel(WizardComponents wizardComponents,CodegenBean codegenBean) {
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents, "Axis2 Idea Plugin WSDL2Java Wizards");
         this.codegenBean=codegenBean;
         setPanelTopTitle("Options");
         setPanelBottomTitle("Set the options for the code generator. If you wish to edit the codegen options, Select custom");
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/WSDL2JavaOutputPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/WSDL2JavaOutputPanel.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/WSDL2JavaOutputPanel.java	(revision 0)
@@ -0,0 +1,602 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package org.apache.axis2.tools.idea;
+
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.project.Project;
+import org.apache.axis2.tools.bean.CodegenBean;
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+
+import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.io.File;
+
+/**
+ * Author : Deepal Jayasinghe
+ * Date: Jul 22, 2005
+ * Time: 12:52:31 PM
+ */
+public class WSDL2JavaOutputPanel extends WizardPanel {
+
+    private JTextField txtoutput;
+    private JTextField txtaxisHome;
+    private JTextField txtjarFileName;
+    private JButton btnBrowseOutput;
+    private JButton btnBrowseAxisHome;
+    private JButton btnCheckLib;
+    private JRadioButton radCurrentProject;
+    private JRadioButton radCustomLocation;
+    private JCheckBox chbAddAxisCodegenJar;
+    private JCheckBox chbAddAxisLib;
+    private JCheckBox chbCreateJar;
+    private JLabel lblMessage;
+    private JTextArea txtaTilte;
+    private JComboBox cmbCurrentProject;
+    private JComboBox cmbModuleSrc;
+    private JLabel  lblAsixHome;
+    private JLabel lblJarFileName;
+    private JLabel lbloutput;
+    private JLabel lblModule;
+    private JLabel lblDirectory;
+    final JFileChooser DirChooser=new JFileChooser();
+    final private String title="Select one of below to save the codegen output either on idea workspace project or on file " +
+            "system and then browse to enter the output path";
+    final private String hint="If you have Axis2 binary distribution or Axis source, then you can add those libs also to the" +
+            " resulted codegen project by checking the \"Add Axis2 Libraries to the codegen resulted project\"" +
+            " check box and specifying the Axis2 home. Another option you have is to compile the codegen " +
+            " result project and add it as a jar file in the lib directory of the resulted project, for that you can" +
+            " check the \"Create a jar file of codegen result project and add to resulted project lib folder\"" +
+            " checkbox and then give the jar file name that you prefer. \n" +
+            " If you are adding the codegen result to a eclipse project on current eclipse workspace," +
+            " please make sure to refresh that particular eclipse project.\n" +
+            " Also if you select the options to add libs to the project, make sure to add those libs to the" +
+            " project library path.";
+
+    private CodegenBean codegenBean;
+    private boolean flag = true;
+    private Project project;
+    private JButton btnHint;
+    private JTextArea txaHint;
+    private boolean jarFileCopyOption = false;
+    private String axis2LibsLocation = null;
+
+
+    public WSDL2JavaOutputPanel(WizardComponents wizardComponents,CodegenBean codegenBean, Project project) {
+        super(wizardComponents, "Axis2 Idea Plugin WSDL2Java Wizards");
+        this.codegenBean=codegenBean;
+        this.project=project;
+        setPanelTopTitle("Output");
+        setPanelBottomTitle("set the out location for the generated code");
+        init();
+    }
+    private void init(){
+        txaHint =new JTextArea();
+        txaHint.setBorder(null);
+        txaHint.setFocusable(false);
+        txaHint.setLineWrap(true);
+        txaHint.setWrapStyleWord(true);
+        txaHint.setOpaque(false);
+        btnHint =new JButton("Hint >>");
+        btnHint.setBorder(new EmptyBorder(new Insets(0,0,0,0)));
+        lblMessage = new JLabel();
+        lblMessage.setOpaque(true);
+        lblMessage.setBackground(Color.white);
+        btnBrowseAxisHome =new JButton("Browse..");
+        btnBrowseOutput =new JButton("Browse..");
+        btnCheckLib =new JButton("Check Libs..");
+        cmbCurrentProject =new JComboBox();
+        cmbCurrentProject.setEnabled(false);
+        cmbModuleSrc=new JComboBox();
+        cmbModuleSrc.setEnabled(false);
+        txtoutput=new JTextField();
+        txtaxisHome =new JTextField("Unpacked Axis2 binary home Or Axis2 source location");
+        txtjarFileName =new JTextField();
+        txtaTilte =new JTextArea(title);
+        txtaTilte.setBorder(null);
+        txtaTilte.setFocusable(false);
+        txtaTilte.setLineWrap(true);
+        txtaTilte.setWrapStyleWord(true);
+        txtaTilte.setOpaque(false);
+        lblAsixHome=new JLabel("Axis2 Home");
+        lblAsixHome.setEnabled(false);
+        lblJarFileName = new JLabel("Jar File Name");
+        lblJarFileName.setEnabled(false);
+        lblDirectory= new JLabel("Select the Directory");
+        lblModule = new JLabel("Select the Module");
+        lbloutput =new JLabel("Out put path");
+        chbAddAxisCodegenJar =new JCheckBox("Add the Axis2 Codegen jars to the codegen resulted project");
+        chbAddAxisLib =new JCheckBox(" Add Axis2 libraries to the codegen result project ");
+        chbCreateJar=new JCheckBox(" Create a jar file of codegen result project and add to resulted project lib folder(Default :CodegenResults.jar)");
+        chbAddAxisLib.setEnabled(false);//Todo after writing include axis2 jar file it must remove
+        radCurrentProject =new JRadioButton("Browse and select a project on current idea workspace");
+        radCustomLocation =new JRadioButton("Browse and select location on local file system");
+        ButtonGroup  buttonGroup= new  ButtonGroup();
+        buttonGroup.add(radCurrentProject );
+        buttonGroup.add(radCustomLocation);
+
+        codegenBean.setProject(project);
+        setNextButtonEnabled(false);
+        this.setLayout(new GridBagLayout() );
+
+        this.add(txtaTilte
+                , new GridBagConstraints(0, 0, GridBagConstraints.REMAINDER , 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0,10), 0, 0));
+        this.add(radCurrentProject
+                , new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,10), 0, 0));
+        radCurrentProject.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                cmbCurrentProject.setEnabled(true);
+                cmbModuleSrc.setEnabled(true);
+                txtoutput.setEnabled(false);
+                btnBrowseOutput.setEnabled(false);
+                loadCmbCurrentProject();
+                loadcmbModuleSrcProject();
+                setFinishButtonEnabled(true);
+                update();
+            }
+        });
+        this.add(lblModule
+                , new GridBagConstraints(0, 2, 1, 1,  0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 10, 0, 0), 0, 0));
+
+        this.add(cmbCurrentProject
+                , new GridBagConstraints(1, 2, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0,0), 0, 0));
+        cmbCurrentProject.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                loadcmbModuleSrcProject();
+                update();
+            }
+        });
+        this.add(lblDirectory
+                , new GridBagConstraints(0, 3, 1, 1,  0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 10, 0, 0), 0, 0));
+
+        this.add(cmbModuleSrc
+                , new GridBagConstraints(1, 3, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0,0), 0, 0));
+        cmbModuleSrc.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                update();
+            }
+        });
+        this.add(radCustomLocation
+                , new GridBagConstraints(0, 4, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0,10), 0, 0));
+        radCustomLocation.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                cmbCurrentProject.setEnabled(false);
+                cmbModuleSrc.setEnabled(false);
+                txtoutput.setEnabled(true);
+                btnBrowseOutput.setEnabled(true);
+                setEnabledForCustomProject();
+                update();
+            }
+        });
+        this.add(lbloutput
+                , new GridBagConstraints(0, 5, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,0), 0, 0));
+        this.add(txtoutput
+                , new GridBagConstraints(1, 5, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0,0), 0, 0));
+        this.add(btnBrowseOutput
+                , new GridBagConstraints(2, 5, 1, 1, 0.1, 0.0
+                , GridBagConstraints.EAST , GridBagConstraints.NONE
+                , new Insets(5, 0, 0,10), 0, 0));
+        btnBrowseOutput .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                DirChooser .setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
+                int returnVal = DirChooser.showOpenDialog(btnBrowseOutput );
+                if (returnVal == JFileChooser.APPROVE_OPTION) {
+                    DirChooser.setFileSelectionMode(JFileChooser .FILES_ONLY );
+                    File newfile = DirChooser.getSelectedFile();
+                    txtoutput.setText(newfile.getAbsolutePath() );
+                }
+                setFinishButtonEnabled(true);
+                update();
+            }
+        });
+        this.add(chbAddAxisCodegenJar
+                , new GridBagConstraints(0, 6, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0,10), 0, 0));
+        chbAddAxisCodegenJar.addActionListener(new ActionListener(){
+            public void actionPerformed(ActionEvent e) {
+                update();
+            }
+        });
+        this.add(new JSeparator()
+                , new GridBagConstraints(0, 7, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 0,1), 0, 0));
+
+        this.add(chbAddAxisLib
+                , new GridBagConstraints(0, 8, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0,10), 0, 0));
+        chbAddAxisLib .addActionListener(new ActionListener(){
+            public void actionPerformed(ActionEvent e) {
+                setEnabledForAddAxisLib();
+                handleLoadLibsBrowse();
+                update();
+            }
+        });
+        this.add(lblAsixHome
+                , new GridBagConstraints(0, 9, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,10), 0, 0));
+        this.add(txtaxisHome
+                , new GridBagConstraints(1, 9, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0,0), 0, 0));
+        this.add(btnBrowseAxisHome
+                , new GridBagConstraints(2, 9, 1, 1, 0.1, 0.0
+                , GridBagConstraints.EAST , GridBagConstraints.NONE
+                , new Insets(5, 0, 0,10), 0, 0));
+        btnBrowseAxisHome .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                DirChooser .setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
+                int returnVal = DirChooser.showOpenDialog(btnBrowseAxisHome );
+                if (returnVal == JFileChooser.APPROVE_OPTION) {
+                    DirChooser.setFileSelectionMode(JFileChooser .FILES_ONLY );
+                    File newfile = DirChooser.getSelectedFile();
+                    txtaxisHome .setText(newfile.getAbsolutePath() );
+                }
+                update();
+            }
+        });
+        this.add(btnCheckLib
+                , new GridBagConstraints(0, 10, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,10), 0, 0));
+        btnCheckLib .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                handleLoadLibsBrowse();
+                update();
+            }
+        });
+        this.add(lblMessage
+                , new GridBagConstraints(1, 10, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0,0), 0, 0));
+        this.add(new JSeparator()
+                , new GridBagConstraints(0, 11, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 0,1), 0, 0));
+        this.add(chbCreateJar
+                , new GridBagConstraints(0, 12, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0,10), 0, 0));
+        chbCreateJar.addActionListener(new ActionListener(){
+            public void actionPerformed(ActionEvent e) {
+                update();
+            }
+        });
+        this.add(lblJarFileName
+                , new GridBagConstraints(0, 13, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,10), 0, 0));
+        this.add(txtjarFileName
+                , new GridBagConstraints(1, 13,1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0,0), 0, 0));
+        this.add(new JSeparator()
+                , new GridBagConstraints(0, 14, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 0,1), 0, 0));
+
+        // hint button
+        this.add(btnHint,
+                new GridBagConstraints(0,15, 1, 1, 0.1,0.0
+                        , GridBagConstraints.WEST , GridBagConstraints.NONE
+                        , new Insets(5, 20, 0,0), 0, 0));
+        btnHint.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                if(flag){
+                    btnHint.setText("Hint >>");
+                    txaHint.setText("");
+                    flag=false;
+                }else{
+                    btnHint.setText("Hint <<");
+                    txaHint.setText(hint);
+                    flag=true;
+                }
+                update();
+            }
+        });
+
+        // hint lable
+        this.add(txaHint,
+                new GridBagConstraints(0, 16, GridBagConstraints.REMAINDER, 1, 0.1, 1.0
+                        , GridBagConstraints.NORTHWEST , GridBagConstraints.BOTH
+                        , new Insets(10, 20, 0,0), 0, 0));
+
+    }
+    public void back() {
+        switchPanel(CodegenFrame.PANEL_OPTION_A );
+    }
+    public void next() {
+    }
+
+    public void update(){
+        setNextButtonEnabled(false);
+        checkPageComlete();
+        setEnabledForAddAxisLib();
+
+    }
+    public void loadCmbCurrentProject() {
+        Module modules[] = codegenBean .getModules();
+
+        if (modules != null) {
+            for(int count = 0; count < modules.length; count++) {
+                cmbCurrentProject.addItem(modules[count].getName());
+            }
+        }
+
+    }
+    public void loadcmbModuleSrcProject() {
+        String module = null;
+        module = (String) cmbCurrentProject.getSelectedItem();
+        cmbModuleSrc.removeAllItems();
+        int count = 0;
+        if (module != null) {
+            String src[] = codegenBean.getModuleSrc(module);
+            for ( count = 0; count < src.length; count++) {
+                cmbModuleSrc.addItem(src[count]);
+            }
+            count = src.length;
+        }
+        if (flag)
+        {
+            if (count == 0) {
+                flag =false;
+                setEnabledForCustomProject();
+            }
+            else{
+                setEnabledForCurrentProject();
+            }
+        }
+    }
+
+    private void setEnabledForCurrentProject(){
+        radCurrentProject.setSelected(true);
+        radCurrentProject.setEnabled(true);
+        cmbCurrentProject.setEnabled(true);
+        cmbModuleSrc.setEnabled(true);
+        lblDirectory.setEnabled(true);
+        lblModule .setEnabled(true);
+        radCurrentProject.setSelected(true);
+        txtoutput.setEnabled(false);
+        lbloutput.setEnabled(false);
+        btnBrowseOutput.setEnabled(false);
+    }
+    private void setEnabledForCustomProject(){
+        if(!flag){
+            radCurrentProject.setEnabled(false);
+        }else{
+            radCurrentProject.setEnabled(true);
+            radCurrentProject.setSelected(true);
+        }
+        cmbCurrentProject.setEnabled(false);
+        cmbModuleSrc.setEnabled(false);
+        lblDirectory.setEnabled(false);
+        lblModule .setEnabled(false);
+        radCustomLocation.setSelected(true);
+        txtoutput.setEnabled(true);
+        lbloutput.setEnabled(true);
+        btnBrowseOutput .setEnabled(true);
+    }
+    private void setEnabledForAddAxisLib(){
+        if(chbAddAxisLib.isSelected()){
+            lblAsixHome.setEnabled(true);
+            lblMessage.setEnabled(true);
+            lblJarFileName.setEnabled(true);
+            txtaxisHome.setEnabled(true);
+            txtjarFileName.setEnabled(true);
+            chbCreateJar.setEnabled(true);
+            btnBrowseAxisHome.setEnabled(true);
+            btnCheckLib .setEnabled(true);
+        }else{
+            lblAsixHome.setEnabled(false);
+            lblMessage.setEnabled(false);
+            lblJarFileName.setEnabled(false);
+            txtaxisHome.setEnabled(false);
+            txtjarFileName.setEnabled(false);
+            chbCreateJar.setEnabled(false);
+            btnBrowseAxisHome.setEnabled(false);
+            btnCheckLib .setEnabled(false);
+            txtaxisHome.setText("Unpacked Axis2 binary home Or Axis2 source location");
+            lblMessage.setBackground(Color.WHITE);
+        }
+    }
+
+    private void handleLoadLibsBrowse(){
+        if(txtaxisHome.getText().equals("")){
+            lblMessage.setText("Axis libs are not available !! ");
+            jarFileCopyOption=false;
+            //error message
+        }else{
+            String axis_home = txtaxisHome.getText().trim();
+            String axis_target_lib=axis_home+File.separator+"target"+File.separator+"lib";
+            String axis_std_lib_directory=axis_home+File.separator+"lib";
+
+            File axis_target_libs_directory = new File(axis_target_lib);
+            File axis_libs_directory = new File(axis_std_lib_directory);
+            if (axis_libs_directory.isDirectory() || axis_target_libs_directory.isDirectory()) {
+                lblMessage.setText("Axis libs loaded successfully!!");
+                if(axis_libs_directory.isDirectory()){
+                    axis2LibsLocation=axis_std_lib_directory;
+                }
+                else if(axis_target_libs_directory.isDirectory()){
+                    axis2LibsLocation=axis_target_lib;
+                }
+                jarFileCopyOption =true;
+                lblMessage.setBackground(Color.WHITE);
+            }else{
+                lblMessage.setText("Axis libs are not available !! ");
+                lblMessage.setBackground(Color.RED);
+                jarFileCopyOption=false;
+            }
+        }
+    }
+
+    /**
+     * get the output location
+     */
+
+    public String getOutputLocation() {
+        if(radCurrentProject.isSelected())
+             return cmbModuleSrc.getSelectedItem().toString();
+        else
+            return txtoutput.getText();
+
+    }
+
+    public String getAxisHomeLocation() {
+        return txtaxisHome.getText();
+    }
+
+    public String getJarFilename() {
+        return txtjarFileName.getText();
+    }
+
+    public boolean getAxis2PluginLibCopyCheckBoxSelection(){
+        return this.chbAddAxisCodegenJar.isSelected();
+    }
+
+    public boolean getAxisLibCopyCheckBoxSelection(){
+        return this.chbAddAxisLib.isSelected();
+    }
+
+    public boolean getCreateJarCheckBoxSelection(){
+        return this.chbCreateJar.isSelected();
+    }
+
+    public String getAxisJarsLocation(){
+        return this.axis2LibsLocation;
+    }
+
+    public boolean oktoLoadLibs(){
+        return this.jarFileCopyOption;
+    }
+
+    public void setJarFileName(String jarFileName){
+        this.txtjarFileName.setText(jarFileName);
+    }
+
+    /**
+     * this algorithm used for set page complete and Enabled finsh button
+     */
+    private void checkPageComlete(){
+        if(getAxisLibCopyCheckBoxSelection()){
+            if(radCurrentProject.isSelected()) {
+                if(jarFileCopyOption){
+                    setPageComplete(true);
+                    setFinishButtonEnabled(true);
+                    codegenBean.setOutput(getOutputLocation());
+                }else{
+                    setPageComplete(false);
+                    setFinishButtonEnabled(false);
+                }
+            }else{
+                if(!getOutputLocation().equals("")){
+                    if(jarFileCopyOption){
+                        setPageComplete(true);
+                        setFinishButtonEnabled(true);
+                        codegenBean.setOutput(getOutputLocation());
+                    }else{
+                        setPageComplete(false);
+                        setFinishButtonEnabled(false);
+                    }
+                }else{
+                    setPageComplete(false);
+                    setFinishButtonEnabled(false);
+                }
+            }
+        }else{
+            if(radCurrentProject.isSelected()) {
+                setPageComplete(true);
+                setFinishButtonEnabled(true);
+                codegenBean.setOutput(getOutputLocation());
+            }else{
+                if(!getOutputLocation().equals("")){
+                    setPageComplete(true);
+                    setFinishButtonEnabled(true);
+                    codegenBean.setOutput(getOutputLocation());
+                }else{
+                    setPageComplete(false);
+                    setFinishButtonEnabled(false);
+                }
+            }
+        }
+    }
+    /**
+     * get page type
+     */
+    public  int getPageType() {
+        return  WizardPanel.WSDL_2_JAVA_TYPE;
+    }
+
+    private void handleModifyEvent() {
+        String text = this.txtoutput.getText();
+        if ((text == null) || (text.trim().equals(""))) {
+            //Todo error message "output location needs to be specified"
+			return;
+		}
+		//Todo error message null
+	}
+	private void handleAxisHomeModifyEvent() {
+		String text = this.txtaxisHome.getText();
+		if ((text == null) || (text.trim().equals(""))) {
+			//Todo error message "output location needs to be specified"
+			return;
+		}
+		//Todo error message null
+	}
+    private void handleJarNameModifyEvent() {
+		String text = this.txtjarFileName.getText();
+		if ((text == null) || (text.trim().equals(""))) {
+			//Todo error message "output location needs to be specified"
+			return;
+		}
+		//Todo error message null
+	}
+}
+
+
+
+
+
+
+
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java	(working copy)
@@ -22,11 +22,17 @@
 import org.apache.axis2.tools.bean.CodegenBean;
 import org.apache.axis2.tools.idea.FirstPanel;
 import org.apache.axis2.tools.idea.ChooserPanel;
+import org.apache.axis2.tools.idea.SecondPanel;
+import org.apache.axis2.tools.idea.WSDL2JavaOutputPanel;
 import org.apache.axis2.tools.component.Utilities;
 import org.apache.axis2.tools.component.WizardPanel;
 import org.apache.axis2.tools.java2wsdl.MiddlePanel;
 import org.apache.axis2.tools.java2wsdl.OptionPanel;
 import org.apache.axis2.tools.java2wsdl.OutputPanel;
+import org.apache.ideaplugin.frames.ClassFileLocationPage;
+import org.apache.ideaplugin.frames.WSDLFileSelectionPage;
+import org.apache.ideaplugin.frames.LibraryAddingPage;
+import org.apache.ideaplugin.bean.ArchiveBean;
 import com.intellij.openapi.project.Project;
 
 /**
@@ -38,49 +44,58 @@
      * variable
      */
     public static final int PANEL_CHOOSER = 0;
-    public static final int PANEL_FIRST_A = 1;    //
-    public static final int PANEL_FIRST_B = 1;
-    public static final int PANEL_OPTION_A =2;
-    public static final int PANEL_OPTION_B = 2;
-    public static final int PANEL_LAST_A = 3;
-    public static final int PANEL_LAST_B = 3;
+    public static final int PANEL_FIRST_A = 1;    
+    public static final int PANEL_FIRST_B = 2;
+    public static final int PANEL_OPTION_A =3;
+    public static final int PANEL_OPTION_B = 4;
+    public static final int PANEL_LAST_A = 5;
+    public static final int PANEL_LAST_B = 6;
+    public static final int PANEL_FIRST_C=7;
+    public static final int PANEL_SECOND_C=8;
+    public static final int PANEL_THIRD_C=9;
+    public static final int PANEL_FOURTH_C=10;
+    public static final int PANEL_LOAD_C=11;
+    public static final int PANEL_OPTION_C=12;
+    public static final int PANEL_LAST_C=13;
 
-    public CodegenFrame(Project project) {
-        super(project);
+    public CodegenFrame() {
         init();
     }
 
     private void init() {
-        this.setTitle("Axis2 Codegen Wizard");
-
+        this.setTitle("Axis2 Codegen Wizard"); 
         WizardPanel panel = null;
 
-        wsdlgenBean= new WsdlgenBean();
-        codegenBean = new CodegenBean();
-
         panel = new ChooserPanel(getWizardComponents());
         getWizardComponents().addWizardPanel(PANEL_CHOOSER , panel);
-      /*
+
         panel = new FirstPanel(getWizardComponents(),codegenBean);
         getWizardComponents().addWizardPanel(PANEL_FIRST_A , panel);
-       */
+
         panel = new MiddlePanel(getWizardComponents(),wsdlgenBean );
         getWizardComponents().addWizardPanel(PANEL_FIRST_B, panel);
 
-       /* panel = new SecondPanel(getWizardComponents(),codegenBean);
+        panel = new SecondPanel(getWizardComponents(),codegenBean);
         getWizardComponents().addWizardPanel(PANEL_OPTION_A , panel);
-       */
+
         panel = new OptionPanel(getWizardComponents(),wsdlgenBean);
         getWizardComponents().addWizardPanel(PANEL_OPTION_B , panel);
-       /*
-        panel = new OutPutPanel(getWizardComponents(),codegenBean);
+
+        panel = new WSDL2JavaOutputPanel(getWizardComponents(),codegenBean,project);
         getWizardComponents().addWizardPanel(PANEL_LAST_A , panel);
-       */
+
         panel = new OutputPanel(getWizardComponents(),wsdlgenBean,project);
         getWizardComponents().addWizardPanel(PANEL_LAST_B , panel);
 
-        setSize(550,700);
-        Utilities.centerComponentOnScreen(this);
+        panel = new ClassFileLocationPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_FIRST_C , panel);
 
+        panel = new WSDLFileSelectionPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_SECOND_C , panel);
+
+        panel = new LibraryAddingPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_THIRD_C , panel);
+
+
     }
 }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java	(working copy)
@@ -22,6 +22,10 @@
 import org.apache.axis2.tools.bean.WsdlgenBean;
 import org.apache.axis2.tools.bean.CodegenBean;
 import org.apache.axis2.tools.idea.ProgressBarPanel;
+import org.apache.axis2.tools.idea.FirstPanel;
+import org.apache.axis2.tools.idea.SecondPanel;
+import org.apache.axis2.tools.idea.WSDL2JavaOutputPanel;
+import org.apache.ideaplugin.bean.ArchiveBean;
 
 import javax.swing.*;
 import java.awt.*;
@@ -50,18 +54,22 @@
     private WizardComponents wizardComponents;
     protected WsdlgenBean wsdlgenBean;
     protected CodegenBean codegenBean;
+    protected ArchiveBean archiveBean;
     protected Project project;
     private ProgressBarPanel progress;
 
-    public WizardFrame(Project project) {
-        this.project=project;
+    public WizardFrame() {
         init();
     }
 
     private void init() {
 
         wizardComponents = new DefaultWizardComponents();
+        wsdlgenBean= new WsdlgenBean();
+        codegenBean = new CodegenBean();
+        archiveBean =new ArchiveBean();
 
+
         this.getContentPane().setLayout(new GridBagLayout());
         this.getContentPane().add(createTitlePanel()
                 , new GridBagConstraints(0, 0, 1, 1, 1.0, 0.0
@@ -82,7 +90,7 @@
         this.getContentPane().add(progress
                 , new GridBagConstraints(0, 3, 1, 1, 1.0, 0.0
                 , GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL
-                , new Insets(10, 5, 5, 5), 0, 0));
+                , new Insets(0, 0, 0, 0), 0, 0));
 
         this.getContentPane().add(new JSeparator()
                 , new GridBagConstraints(0, 4, 1, 1, 1.0, 0.0
@@ -94,8 +102,8 @@
                         ,GridBagConstraints.EAST, GridBagConstraints.NONE,
                         new Insets(10, 10, 10, 10), 0, 0));
 
-        ImageIcon  img=new ImageIcon("icons/icon.png");
-        this.setIconImage(img.getImage());
+        java.net.URL resource = WizardPanel.class.getResource("/icons/icon.png");           
+        this.setIconImage(new ImageIcon(resource).getImage());
         this.setFont(new Font("Helvetica", Font.PLAIN, 8));
 
         wizardComponents.addPropertyChangeListener(new PropertyChangeListener() {
@@ -105,6 +113,7 @@
                 setPanelBottomTitle(((WizardPanel)event.getNewValue()).getPanelBottomTitle());
                 setErrorVisible(false
                         ,((WizardPanel)event.getNewValue()).getError());
+                setTitle(((WizardPanel)event.getNewValue()).getFrameTitle());
             }
         });
         wizardComponents.setFinishAction(createFinishAction());
@@ -122,6 +131,8 @@
 
     public void show() {
         wizardComponents.updateComponents();
+        this.setSize(600,600);
+        Utilities.centerComponentOnScreen(this);
         super.show();
     }
       // set error message
@@ -146,7 +157,7 @@
         panelImageLabel.setIcon(image );
     }
 
-     protected JPanel createTitlePanel() {
+    protected JPanel createTitlePanel() {
 
         JPanel panel = new JPanel(new GridBagLayout() );
 
@@ -156,6 +167,7 @@
         panelTopTitleLabel.setFont(new Font("Helvetica", Font.BOLD, 12));
 
         panelBottomTitleLabel=new JLabel();
+        panelBottomTitleLabel.setFont(new Font("Helvetica", Font.ITALIC, 10));
 
         panelImageLabel= new JLabel();
 
@@ -220,12 +232,17 @@
                             doFinishJava2WSDL();
                             System.out.println("FinishAction Java2WSDL performed");
                             break;
+                         case WizardPanel.SERVICE_ARCHIVE_TYPE:
+                            doFinishServiceArchive();
+                            System.out.println("FinishAction Servcie Archive performed");
+                            break;
                         case WizardPanel.UNSPECIFIED_TYPE:
                             break; //Do nothing
                         default:
                             throw new RuntimeException("Invalid state!");
                     }
                 } catch (Exception e) {
+                     wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
                      dispose();
                 }
 
@@ -236,6 +253,7 @@
     protected CancelAction createCancelAction() {
         return new CancelAction(wizardComponents) {
             public void performAction() {
+                wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
                 System.out.println("CancelAction performed");
                 dispose();
             }
@@ -243,6 +261,7 @@
     }
 
     protected void handleWindowClosing() {
+        wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
         this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
         this.addWindowListener(new WindowAdapter() {
             public void windowClosing(WindowEvent e) {
@@ -252,34 +271,38 @@
     }
 
     protected void handlePragress(){
-           progress.setVisible(true);
-           progress.aboutToDisplayPanel();
-           progress.displayingPanel();
-           new java.util.Timer(true).schedule(new TimerTask() {
-               public void run() {
-                   progress .requestStop();
-               }
-           }, 1000);
-       }
+        wizardComponents.getFinishButton().setEnabled(false);
+        progress.setVisible(true);
+        progress.aboutToDisplayPanel();
+        progress.displayingPanel();
+        new java.util.Timer(true).schedule(new TimerTask() {
+            public void run() {
+                progress.requestStop();
+            }
+        }, 1000);
+    }
 
-     protected void handleSuccess(){
+    protected void handleSuccess(){
         StringWriter writer = new StringWriter();
-        JOptionPane.showMessageDialog(errorPanel ,
+        JOptionPane.showMessageDialog(this ,
                 "Code genaration Successful !" + writer.toString(),
                 "Axis2 code generation",
                 JOptionPane.INFORMATION_MESSAGE );
+        wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
+        dispose();
     }
 
-     protected void handleError(){
+    protected void handleError(){
+        wizardComponents.getFinishButton().setEnabled(true);
         StringWriter writer = new StringWriter();
-        JOptionPane.showMessageDialog(errorPanel ,
+        JOptionPane.showMessageDialog(this ,
                 "Code genaration failed! !" + writer.toString(),
                 "Axis2 code generation",
                 JOptionPane.ERROR_MESSAGE );
     }
 
     private void addLibsToProjectLib(String libDirectory, String outputLocation){
-        String newOutputLocation = outputLocation+File.separator+"aaaa";
+        String newOutputLocation = outputLocation+File.separator+"lib";
         //Create a lib directory; all ancestor directories must exist
         boolean success = (new File(newOutputLocation)).mkdir();
         if (!success) {
@@ -346,37 +369,89 @@
     }
     protected void doFinishWSDL2Java(){
         handlePragress();
+       new java.util.Timer(true).schedule(new TimerTask() {
+           public void run() {
+                try {
+                    FirstPanel  first=(FirstPanel)wizardComponents.getWizardPanel(1);
+                    SecondPanel option=(SecondPanel)wizardComponents.getWizardPanel(3);
+                    WSDL2JavaOutputPanel output=(WSDL2JavaOutputPanel)wizardComponents.getWizardPanel(5);
+                    boolean isServerside,isServiceXML,isGenerateServerSideInterface  = false;
+                    if (option.getGenerateAll()){
+                        isServerside = true;
+                        isServiceXML = true;
+                        isGenerateServerSideInterface = true;
+                    }else{
+                        isServerside = option.isServerside();
+                        isServiceXML =option.isServerXML();
+                        isGenerateServerSideInterface = option.getGenerateServerSideInterface();
+                    }
+                    codegenBean.setPackageName(option.getPackageName());
+                    codegenBean.setLanguage(option.getSelectedLanguage());
+                    codegenBean.setPortName(option.getPortName());
+                    codegenBean.setServiceName(option.getServiceName());
+                    codegenBean.setDatabindingName(option.getDatabinderName());
+                    codegenBean.setAsyncOnly(option.isAsyncOnlyOn());
+                    codegenBean.setSyncOnly(option.isSyncOnlyOn());
+                    codegenBean.setTestCase(option.isGenerateTestCase());
+                    codegenBean.setGenerateAll(option.getGenerateAll());
+                    codegenBean.setServerXML(isServiceXML);
+                    codegenBean.setServerSide(isServerside);
+                    codegenBean.setServerSideInterface(isGenerateServerSideInterface);
+                    codegenBean.setOutput(output.getOutputLocation());
+                    codegenBean.setNamespace2packageList(option.getNs2PkgMapping());
+                    codegenBean.setWSDLFileName(first.getWSDLFileName());
+                    codegenBean.generate();
+                    progress.setVisible(false);
+                    handleSuccess();
+                }catch (Exception e1) {
+                    progress.setVisible(false);
+                    handleError();
+                }
+            }
+        }, 1000);
+
+    }
+
+    protected void doFinishJava2WSDL(){
+        handlePragress();
         new java.util.Timer(true).schedule(new TimerTask() {
-            public void run() {
+           public void run() {
                 try {
-                    // wsdlgenBean.generate(); ToDO
+                    wsdlgenBean.generate();
                     progress.setVisible(false);
                     handleSuccess();
-                    dispose();
                 } catch (Exception e1) {
                     progress.setVisible(false);
                     handleError();
-                    dispose();
                 }
-
             }
-        }, 3100);
+       }, 3100);
     }
-     protected void doFinishJava2WSDL(){
-        handlePragress();
+     protected void doFinishServiceArchive(){
+       handlePragress();
         new java.util.Timer(true).schedule(new TimerTask() {
             public void run() {
                  try {
-                    wsdlgenBean.generate();
+                   // archiveBean.generate();
                     progress.setVisible(false);
                     handleSuccess();
-                    dispose();
                 } catch (Exception e1) {
                     progress.setVisible(false);
                     handleError();
-                    dispose();
                 }
             }
         }, 3100);
     }
+    public void setProject(Project project){
+        this.project=project;
+    }
+    public JComponent getRootComponent() {
+        return this.getRootPane();
+    }
+    public void showUI() {
+        pack();
+        this.setVisible(true);
+        show();
+    }
+
 }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OutputPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OutputPanel.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OutputPanel.java	(working copy)
@@ -53,7 +53,7 @@
      * @param project
      */
     public OutputPanel(WizardComponents wizardComponents,WsdlgenBean wsdlgenBean, Project project){
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents,  "Axis2 Idea Plugin Java2WSDL Wizards");
         setPanelTopTitle("WSDl file output location");
         setPanelBottomTitle("Select the location for the generated WSDL");
         this.wsdlgenBean=wsdlgenBean;
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java	(working copy)
@@ -31,6 +31,7 @@
  * this is the first panel of java2wsdl wizard
  */
 public class
+
         OptionPanel extends WizardPanel{
     /**
      * variable
@@ -48,7 +49,7 @@
      * @param wsdlgenBean
      */
     public OptionPanel(WizardComponents wizardComponents,WsdlgenBean wsdlgenBean){
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents,  "Axis2 Idea Plugin Java2WSDL Wizards");
         setPanelTopTitle("Java to WSDL Options");
         setPanelBottomTitle("Set the Option for the generation");
         this.wsdlgenBean=wsdlgenBean;
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java	(revision 554858)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java	(working copy)
@@ -69,7 +69,7 @@
      * @param wsdlgenBean
      */
     public MiddlePanel(WizardComponents wizardComponents ,WsdlgenBean wsdlgenBean) {
-        super(wizardComponents, "Java source / classpath selection");
+        super(wizardComponents, "Axis2 Idea Plugin Java2WSDL Wizards");
         setPanelTopTitle("Java source / classpath selection");
         setPanelBottomTitle("Select the classes and the libraries");
         this.wsdlgenBean=wsdlgenBean;
