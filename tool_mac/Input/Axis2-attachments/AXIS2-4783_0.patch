Index: modules/metadata/src/org/apache/axis2/jaxws/description/FaultDescription.java
===================================================================
--- modules/metadata/src/org/apache/axis2/jaxws/description/FaultDescription.java	(revision 965601)
+++ modules/metadata/src/org/apache/axis2/jaxws/description/FaultDescription.java	(working copy)
@@ -81,6 +81,10 @@
      *         if not defined.
      */
     public String getTargetNamespace();
-
-
+    
+    /**
+     *  @return the name of the wsdl:message that defines the fault element.
+     * @return
+     */
+    public String getMessageName();
 }
\ No newline at end of file
Index: modules/metadata/src/org/apache/axis2/jaxws/description/OperationDescription.java
===================================================================
--- modules/metadata/src/org/apache/axis2/jaxws/description/OperationDescription.java	(revision 965601)
+++ modules/metadata/src/org/apache/axis2/jaxws/description/OperationDescription.java	(working copy)
@@ -172,7 +172,8 @@
     public String getRequestWrapperTargetNamespace();
 
     public String getRequestWrapperLocalName();
-
+    
+    public String getRequestWrapperPartName();
     /**
      * @return the class name of the wrapper class. NOTE: This method will return null if the
      *         request wrapper class is not known during the description layer processing. In such
@@ -185,6 +186,8 @@
     public String getResponseWrapperTargetNamespace();
 
     public String getResponseWrapperLocalName();
+    
+    public String getResponseWrapperPartName();
 
     public String[] getParamNames();
 
Index: modules/metadata/src/org/apache/axis2/jaxws/description/builder/converter/JavaClassToDBCConverter.java
===================================================================
--- modules/metadata/src/org/apache/axis2/jaxws/description/builder/converter/JavaClassToDBCConverter.java	(revision 965601)
+++ modules/metadata/src/org/apache/axis2/jaxws/description/builder/converter/JavaClassToDBCConverter.java	(working copy)
@@ -381,6 +381,7 @@
             webFaultAnnot.setFaultBean(webFault.faultBean());
             webFaultAnnot.setName(webFault.name());
             webFaultAnnot.setTargetNamespace(webFault.targetNamespace());
+            webFaultAnnot.setMessageName(webFault.messageName());
             composite.setWebFaultAnnot(webFaultAnnot);
         }
     }
Index: modules/metadata/src/org/apache/axis2/jaxws/description/builder/converter/JavaMethodsToMDCConverter.java
===================================================================
--- modules/metadata/src/org/apache/axis2/jaxws/description/builder/converter/JavaMethodsToMDCConverter.java	(revision 965601)
+++ modules/metadata/src/org/apache/axis2/jaxws/description/builder/converter/JavaMethodsToMDCConverter.java	(working copy)
@@ -197,6 +197,7 @@
             rwAnnot.setClassName(requestWrapper.className());
             rwAnnot.setLocalName(requestWrapper.localName());
             rwAnnot.setTargetNamespace(requestWrapper.targetNamespace());
+            rwAnnot.setPartName(requestWrapper.partName());
             mdc.setRequestWrapperAnnot(rwAnnot);
         }
     }
@@ -217,6 +218,7 @@
             rwAnnot.setClassName(responseWrapper.className());
             rwAnnot.setLocalName(responseWrapper.localName());
             rwAnnot.setTargetNamespace(responseWrapper.targetNamespace());
+            rwAnnot.setPartName(responseWrapper.partName());
             mdc.setResponseWrapperAnnot(rwAnnot);
         }
     }
Index: modules/metadata/src/org/apache/axis2/jaxws/description/impl/FaultDescriptionImpl.java
===================================================================
--- modules/metadata/src/org/apache/axis2/jaxws/description/impl/FaultDescriptionImpl.java	(revision 965601)
+++ modules/metadata/src/org/apache/axis2/jaxws/description/impl/FaultDescriptionImpl.java	(working copy)
@@ -46,6 +46,7 @@
     private String name = "";  // WebFault.name
     private String faultBean = "";  // WebFault.faultBean
     private String targetNamespace = ""; // WebFault.targetNamespace
+    private String messageName = ""; //WebFault.messageName
     private String faultInfo = null;
 
     private static final String FAULT = "Fault";
@@ -163,6 +164,21 @@
         return name;
     }
 
+    public String getMessageName(){
+    	if(messageName.length()>0){
+    		return name;
+    	}else{
+    		WebFault annotation= this.getAnnoWebFault();
+    		if(annotation!=null && annotation.messageName().length()>0){
+    			messageName=annotation.messageName();
+    		}else{
+    			// The default is undefined.
+                // The JAX-WS layer may use the fault bean information to determine the name
+    		}
+    	}
+    	return messageName;
+    }
+    
     public String getTargetNamespace() {
         if (targetNamespace.length() > 0) {
             return targetNamespace;
Index: modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java
===================================================================
--- modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java	(revision 965601)
+++ modules/metadata/src/org/apache/axis2/jaxws/description/impl/OperationDescriptionImpl.java	(working copy)
@@ -123,13 +123,13 @@
     private String requestWrapperTargetNamespace;
     private String requestWrapperLocalName;
     private String requestWrapperClassName;
-
+    private String requestWrapperPartName;
     // ANNOTATION: @ResponseWrapper
     private ResponseWrapper responseWrapperAnnotation;
     private String responseWrapperLocalName;
     private String responseWrapperTargetNamespace;
     private String responseWrapperClassName;
-    
+    private String responseWrapperPartName;
     // ANNOTATION: @Action
     private Action actionAnnotation;
 
@@ -1089,7 +1089,37 @@
         }
         return requestWrapperClassName;
     }
-
+    
+    public String getRequestWrapperPartName(){
+    	return getAnnoRequestWrapperPartName();
+    }
+    
+    /**
+     * Return PartName for RequestWrapper annotation if one present.
+     * @return
+     */
+    public String getAnnoRequestWrapperPartName(){
+    	if(!isWrappedParameters()){
+    		return null;
+    	}
+        if (requestWrapperPartName == null) {
+            if (getAnnoRequestWrapper() != null &&
+                    !DescriptionUtils.isEmpty(getAnnoRequestWrapper().partName())) {
+                requestWrapperPartName = getAnnoRequestWrapper().partName();
+            } else {
+                // There is no default for the RequestWrapper part name.  
+            	requestWrapperPartName = null;
+            }
+        }
+        if(log.isDebugEnabled()){
+            if(requestWrapperPartName!=null){
+                log.debug("RequestWrapperPartName ="+requestWrapperPartName);
+            }else{
+                log.debug("RequestWrapperPartName = NULL");
+            }
+        }
+        return requestWrapperPartName;
+    }
     // ===========================================
     // ANNOTATION: ResponseWrapper
     // ===========================================
@@ -1194,6 +1224,36 @@
         return responseWrapperClassName;
     }
 
+    public String getResponseWrapperPartName(){
+    	return getAnnoResponseWrapperPartName();
+    }
+    
+    /**
+     * return ResponseWrapper PartName if one present.
+     * @return
+     */
+    public String getAnnoResponseWrapperPartName(){
+    	if(!isWrappedParameters()){
+    		return null;
+    	}
+        if (responseWrapperPartName == null) {
+            if (getAnnoResponseWrapper() != null &&
+                    !DescriptionUtils.isEmpty(getAnnoResponseWrapper().partName())) {
+                responseWrapperPartName = getAnnoResponseWrapper().partName();
+            } else {
+                // There is no default for the ResponseWrapper part name.  
+                responseWrapperPartName = null;
+            }
+        }
+        if(log.isDebugEnabled()){
+            if(responseWrapperPartName!=null){
+                log.debug("ResponseWrapperPartName ="+responseWrapperPartName);
+            }else{
+                log.debug("ResponseWrapperPartName = NULL");
+            }
+        }
+        return responseWrapperPartName;
+    }
     // ===========================================
     // ANNOTATION: WebFault
     // ===========================================
Index: modules/metadata/test/org/apache/axis2/jaxws/description/AnnotationServiceImplDescriptionTests.java
===================================================================
--- modules/metadata/test/org/apache/axis2/jaxws/description/AnnotationServiceImplDescriptionTests.java	(revision 965601)
+++ modules/metadata/test/org/apache/axis2/jaxws/description/AnnotationServiceImplDescriptionTests.java	(working copy)
@@ -43,6 +43,7 @@
 import javax.xml.ws.Holder;
 import javax.xml.ws.RequestWrapper;
 import javax.xml.ws.ResponseWrapper;
+import javax.xml.ws.WebFault;
 
 import java.io.IOException;
 import java.util.Iterator;
@@ -1346,7 +1347,34 @@
         assertTrue(checkParamDesc.isHeader());
     }
 
+    /**
+     * This method tests the new property updates in JAX-WS2.2 specification.
+     * @RequestWrapper(PartName)
+     * @ResponseWrapper(PartName)
+     * @WebFault(MessageName)
+     * We will ensure that these new properties are successfully set in the Metadata layer
+     */
+    public void testJAXWS22AnnotationPropertyUpdate(){
+    	EndpointInterfaceDescription testEndpointInterfaceDesc =
+    		getEndpointInterfaceDesc(ReqRspWrapperTestImpl.class);
+    	OperationDescription operationDesc =
+    		testEndpointInterfaceDesc.getOperationForJavaMethod("method1")[0];
+    	assertNotNull(operationDesc);
+    	
+    	assertEquals("jaxws22.RequestPartName",
+    			operationDesc.getRequestWrapperPartName());
+    	
+    	assertEquals("jaxws22.ResponsePartName",
+    			operationDesc.getResponseWrapperPartName());
 
+
+    	operationDesc = testEndpointInterfaceDesc.getOperationForJavaMethod("method2")[0];
+    	assertNotNull(operationDesc);
+    	FaultDescription faultDescription = operationDesc.getFaultDescriptions()[0];
+    	
+    	assertEquals("jaxws22MessageName", faultDescription.getMessageName());
+    }
+
     /*
     * Method to return the endpoint interface description for a given implementation class.
     */
@@ -1461,10 +1489,12 @@
 //Note the default parameterStyle is WRAPPED, so no type-level annotation is required.
 class ReqRspWrapperTestImpl {
     @RequestWrapper(localName = "method1ReqWrapper", targetNamespace = "http://a.b.c.method1ReqTNS",
-                    className = "org.apache.axis2.jaxws.description.AnnotationServiceImplDescriptionTests.ReqRspWrapperTestImpl.method1ReqWrapper")
+                    className = "org.apache.axis2.jaxws.description.AnnotationServiceImplDescriptionTests.ReqRspWrapperTestImpl.method1ReqWrapper",
+                    partName = "jaxws22.RequestPartName")
     @ResponseWrapper(localName = "method1RspWrapper",
                      targetNamespace = "http://a.b.c.method1RspTNS",
-                     className = "org.apache.axis2.jaxws.description.AnnotationServiceImplDescriptionTests.ReqRspWrapperTestImpl.method1RspWrapper")
+                     className = "org.apache.axis2.jaxws.description.AnnotationServiceImplDescriptionTests.ReqRspWrapperTestImpl.method1RspWrapper",
+                     partName = "jaxws22.ResponsePartName")
     public String method1(String s) {
         return s;
     }
@@ -1473,7 +1503,7 @@
                     className = "org.apache.axis2.jaxws.description.AnnotationServiceImplDescriptionTests.ReqRspWrapperTestImpl.method2ReqWrapper")
     @ResponseWrapper(localName = "method2RspWrapper",
                      targetNamespace = "http://a.b.c.method2RspTNS")
-    public String method2(String s) {
+    public String method2(String s) throws ReqRspWrapperException{
         return s;
     }
 
@@ -1490,6 +1520,17 @@
     }
 }
 
+@WebFault(messageName="jaxws22MessageName")
+class ReqRspWrapperException extends Exception{
+	private String message = null;
+	public ReqRspWrapperException(){
+		
+	}
+	public ReqRspWrapperException(String message){
+		this.message = message;
+	}
+
+}
 //=============================================================================
 //testWebMethod service implementaiton class
 //=============================================================================
