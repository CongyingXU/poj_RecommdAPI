Index: modules/core/project.xml
===================================================================
--- modules/core/project.xml	(revision 419887)
+++ modules/core/project.xml	(working copy)
@@ -197,6 +197,31 @@
                 <module>true</module>
             </properties>
         </dependency>
+        <dependency>
+            <groupId>beehive</groupId>
+            <artifactId>beehive-wsm</artifactId>
+            <version>${beehive.version}</version>
+            <properties>
+                <module>true</module>
+            </properties>
+        </dependency>
+        <dependency>
+            <groupId>beehive</groupId>
+            <artifactId>beehive-jsr181</artifactId>
+            <version>${beehive.version}</version>
+            <properties>
+                <module>true</module>
+            </properties>
+        </dependency>
+        <dependency>
+            <groupId>beehive</groupId>
+            <artifactId>beehive-jsr181-annogen</artifactId>
+            <version>${beehive.version}</version>
+            <properties>
+                <module>true</module>
+            </properties>
+        </dependency>
+
     </dependencies>
     <build>
 		<resources>
Index: modules/core/src/org/apache/axis2/description/WSMToAxisServiceBuilder.java
===================================================================
--- modules/core/src/org/apache/axis2/description/WSMToAxisServiceBuilder.java	(revision 0)
+++ modules/core/src/org/apache/axis2/description/WSMToAxisServiceBuilder.java	(revision 0)
@@ -0,0 +1,102 @@
+/*
+ * Copyright 2004,2005 The Apache Software Foundation.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not
+ * use this file except in compliance with the License. You may obtain a copy of
+ * the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+ * License for the specific language governing permissions and limitations under
+ * the License.
+ *
+ *
+ */
+package org.apache.axis2.description;
+
+import java.util.Iterator;
+
+import javax.wsdl.Operation;
+import javax.wsdl.OperationType;
+import javax.xml.namespace.QName;
+
+import org.apache.axis2.AxisFault;
+import org.apache.axis2.wsdl.WSDLConstants;
+import org.apache.beehive.wsm.processor.model.factory.WsmServiceFactory;
+import org.apache.beehive.wsm.processor.model.factory.WsmServiceStyleFactory;
+import org.apache.beehive.wsm.processor.model.factory.reflection.ReflectionTypeResolver;
+import org.apache.beehive.wsm.model.*;
+import org.apache.axis2.engine.MessageReceiver;
+
+public class WSMToAxisServiceBuilder{
+
+    private WsmService wsmService;    
+
+    /**
+     * We need to figure out a way to extract classes that
+     * are marked with @WebService  
+    */	 
+    public WSMToAxisServiceBuilder()throws AxisFault {
+
+	    String serviceClassName = "SampleAnnotatedPOJO";
+		String baseLocation     = "/";
+		WsmServiceFactory serviceFactory = WsmServiceStyleFactory.create(WsmServiceStyleFactory.FactoryType.REFLECT);
+		wsmService = serviceFactory.create(serviceClassName,ReflectionTypeResolver.getInstance(),baseLocation);
+	}
+	
+	public AxisService populateService(){
+		AxisService axisService = new AxisService();
+	
+		axisService.setName(wsmService.getServiceName());
+		axisService.setTargetNamespace(wsmService.getTargetNamespace());
+		
+		// Add operations
+		for(Iterator it = wsmService.getOperations().iterator(); it.hasNext();){
+			WsmOperation wsmOperation = (WsmOperation)it.next();
+			AxisOperation axisOperation = null;
+			try {
+				String MEP = getMEP(wsmOperation);
+				axisOperation = AxisOperationFactory.getOperationDescription(MEP);
+			} catch (Exception e) {
+				AxisFault ex = new AxisFault("Error building operation " + wsmOperation);
+				ex.initCause(e);
+			}
+			
+			if (axisOperation != null){
+				axisOperation.setName(new QName(wsmOperation.getOperationName()));
+				axisOperation.setSoapAction(wsmOperation.getAction());
+				// need to add a message receiver
+				String messageReceiverClass = "org.apache.axis2.rpc.receivers.RPCMessageReceiver";
+				if(wsmOperation.isOneWay()){
+					messageReceiverClass = "org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver";
+				}
+				try{
+					MessageReceiver msgReceiver = (MessageReceiver)Class.forName(messageReceiverClass).newInstance();
+					axisOperation.setMessageReceiver(msgReceiver);
+
+				}catch(Exception e){
+				}
+			}
+			axisService.addOperation(axisOperation);
+		}
+		
+		return axisService;
+    } 
+	    
+    private String getMEP(WsmOperation operation) throws Exception {
+        if (null != operation) {
+            if (operation.isOneWay()){
+            	return WSDLConstants.WSDL20_2004Constants.MEP_URI_IN_ONLY;
+            }else{
+            	return WSDLConstants.WSDL20_2004Constants.MEP_URI_IN_OUT;
+            }
+            	
+        }else{
+        	throw new Exception("Cannot Determine the MEP");
+        }
+    }
+
+}
Index: etc/project.properties
===================================================================
--- etc/project.properties	(revision 419887)
+++ etc/project.properties	(working copy)
@@ -135,6 +135,7 @@
 xmlsec.version=1.3.0
 xmlunit.version=1.0
 log4j.version=1.2.13
+beehive.version=1.0-SNAPSHOT
 # ------------------------------------------------------------------------
 # M A V E N  J A R  O V E R R I D E
 # ------------------------------------------------------------------------
