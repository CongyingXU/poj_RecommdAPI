Index: modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportListener.java
===================================================================
--- modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportListener.java	(revision 0)
+++ modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportListener.java	(revision 0)
@@ -0,0 +1,51 @@
+package org.apache.axis2.transport.local;
+
+import org.apache.axis2.AxisFault;
+import org.apache.axis2.Constants;
+import org.apache.axis2.addressing.EndpointReference;
+import org.apache.axis2.context.ConfigurationContext;
+import org.apache.axis2.context.MessageContext;
+import org.apache.axis2.context.SessionContext;
+import org.apache.axis2.description.TransportInDescription;
+import org.apache.axis2.transport.TransportListener;
+
+/**
+ * LocalTransportListener is used as a dummy TransportListener to register in the axis2.xml. When
+ * generating the WSDL for a particular service which is exposed through local transport, this
+ * is used to derive the endpoints for that particular service.
+ */
+public class LocalTransportListener implements TransportListener {
+    public void init(ConfigurationContext configurationContext,
+                     TransportInDescription transportInDescription)
+            throws AxisFault {
+        String scheme = transportInDescription.getName();
+        if (!Constants.TRANSPORT_LOCAL.equals(scheme)) {
+            throw new AxisFault(LocalTransportReceiver.class.getName() +
+                    " can only be used for local");
+        }
+    }
+
+    public void start() throws AxisFault {
+    }
+
+    public void stop() throws AxisFault {
+    }
+
+    public EndpointReference getEPRForService(String serviceName, String ip) throws AxisFault {
+        return new EndpointReference(Constants.TRANSPORT_LOCAL +
+                "://localhost/services/"  + serviceName);
+    }
+
+    public EndpointReference[] getEPRsForService(String serviceName, String ip) throws AxisFault {
+        EndpointReference [] epr ={new EndpointReference(Constants.TRANSPORT_LOCAL +
+                "://localhost/services/"  + serviceName)};
+        return epr;
+    }
+
+    public SessionContext getSessionContext(MessageContext messageContext) {
+        return null;
+    }
+
+    public void destroy() {
+    }
+}
