Index: Utils.java
===================================================================
--- Utils.java	(revision 703931)
+++ Utils.java	(working copy)
@@ -1,27 +1,44 @@
 package org.apache.axis2.mtompolicy;
 
 import java.util.ArrayList;
+import java.util.Date;
 import java.util.List;
 
+import org.apache.axis2.description.AxisBinding;
+import org.apache.axis2.description.AxisBindingMessage;
+import org.apache.axis2.description.AxisBindingOperation;
 import org.apache.axis2.description.AxisDescription;
+import org.apache.axis2.description.AxisEndpoint;
+import org.apache.axis2.description.AxisMessage;
+import org.apache.axis2.description.AxisOperation;
 import org.apache.axis2.description.AxisService;
+import org.apache.axis2.description.PolicySubject;
+import org.apache.axis2.engine.AxisConfiguration;
 import org.apache.axis2.policy.model.MTOMAssertion;
 import org.apache.axis2.util.PolicyUtil;
+import org.apache.axis2.wsdl.WSDLConstants;
+import org.apache.axis2.wsdl.WSDLUtil;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 import org.apache.neethi.Assertion;
 import org.apache.neethi.Policy;
 
 public class Utils {
-    
+	
+	public static final Log log = LogFactory.getLog(Utils.class);
+	
     public static MTOMAssertion getMTOMAssertion (AxisDescription axisDescription) {
         
         if (axisDescription == null) {
             return null;
         }
         
-        ArrayList policyList = new ArrayList();
-        policyList.addAll(axisDescription.getPolicySubject().getAttachedPolicyComponents());
-            
-        Policy policy = PolicyUtil.getMergedPolicy(policyList, axisDescription);
+        ArrayList policyList = new ArrayList();        
+//        policyList.addAll(axisDescription.getPolicySubject().getAttachedPolicyComponents());
+//            
+//        Policy policy = PolicyUtil.getMergedPolicy(policyList, axisDescription);
+
+        Policy policy = calculateEffectivePolicy(axisDescription, policyList);
         
         if (policy == null) {
             return null;
@@ -38,5 +55,92 @@
         return null;
         
     }
+    
+	private static Policy calculateEffectivePolicy(
+			AxisDescription axisDescription, ArrayList policyList) {
 
+        AxisService axisService = locateAxisService(axisDescription);
+        
+       	accumulateEffectivePolicies(axisDescription, policyList); 
+       	
+       	Policy bindingPolicy = getApplicablePolicy(axisDescription);
+       	
+       	if (bindingPolicy != null) {
+       		policyList.add(bindingPolicy);
+       	}
+		
+		Policy result = PolicyUtil.getMergedPolicy(policyList, axisService);
+
+		return result;
+	}
+
+	private static void accumulateEffectivePolicies(
+			AxisDescription axisDescription, ArrayList policyList) {
+		PolicySubject policySubject = null;
+
+		policySubject = axisDescription.getPolicySubject();
+		policyList.addAll(policySubject.getAttachedPolicyComponents());
+
+		if (axisDescription.getParent() != null) {
+			accumulateEffectivePolicies(axisDescription.getParent(),
+					policyList);
+		}			
+	}
+	
+	private static AxisService locateAxisService(AxisDescription axisDescription) {
+		AxisService axisService = null;
+		if (axisService == null && (axisDescription instanceof AxisService)) {
+			axisService = (AxisService) axisDescription;			
+		} else {
+			axisService = locateAxisService(axisDescription.getParent());
+		}
+		return axisService;
+	}
+	
+	private static Policy getApplicablePolicy(AxisDescription axisDescription) {
+		if (axisDescription instanceof AxisMessage) {
+			AxisMessage axisMessage = (AxisMessage) axisDescription;
+			AxisOperation axisOperation = axisMessage.getAxisOperation();
+			if (axisOperation != null) {
+				AxisService axisService = (AxisService) axisOperation
+						.getAxisService();
+				if (axisService != null) {
+					if (axisService.getEndpointName() != null) {
+						AxisEndpoint axisEndpoint = axisService
+								.getEndpoint(axisService.getEndpointName());
+						if (axisEndpoint != null) {
+							AxisBinding axisBinding = axisEndpoint.getBinding();
+							AxisBindingOperation axisBindingOperation = (AxisBindingOperation) axisBinding
+									.getChild(axisOperation.getName());
+							String direction = axisMessage.getDirection();
+							AxisBindingMessage axisBindingMessage = null;
+							if (WSDLConstants.WSDL_MESSAGE_DIRECTION_IN
+									.equals(direction)
+									&& WSDLUtil
+											.isInputPresentForMEP(axisOperation
+													.getMessageExchangePattern())) {
+								axisBindingMessage = (AxisBindingMessage) axisBindingOperation
+										.getChild(WSDLConstants.MESSAGE_LABEL_IN_VALUE);
+								return axisBindingMessage.getEffectivePolicy();
+								
+							} else if (WSDLConstants.WSDL_MESSAGE_DIRECTION_OUT
+									.equals(direction)
+									&& WSDLUtil
+											.isOutputPresentForMEP(axisOperation
+													.getMessageExchangePattern())) {
+								axisBindingMessage = (AxisBindingMessage) axisBindingOperation
+										.getChild(WSDLConstants.MESSAGE_LABEL_OUT_VALUE);
+								return axisBindingMessage.getEffectivePolicy();
+							}
+						}
+
+					}
+				}
+			}
+			return ((AxisMessage) axisDescription).getEffectivePolicy();
+		}
+		return null;
+	}
+	
+
 }
