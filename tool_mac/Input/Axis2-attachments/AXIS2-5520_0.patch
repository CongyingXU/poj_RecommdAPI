Index: modules/kernel/src/org/apache/axis2/util/Utils.java
===================================================================
--- modules/kernel/src/org/apache/axis2/util/Utils.java	(revision 1480015)
+++ modules/kernel/src/org/apache/axis2/util/Utils.java	(working copy)
@@ -20,23 +20,6 @@
 
 package org.apache.axis2.util;
 
-import java.io.File;
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-import java.lang.reflect.Modifier;
-import java.net.InetAddress;
-import java.net.NetworkInterface;
-import java.net.SocketException;
-import java.security.AccessController;
-import java.security.PrivilegedAction;
-import java.security.PrivilegedExceptionAction;
-import java.util.Enumeration;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Map;
-
-import javax.xml.namespace.QName;
-
 import org.apache.axiom.soap.SOAPBody;
 import org.apache.axiom.soap.SOAPEnvelope;
 import org.apache.axiom.soap.SOAPFault;
@@ -73,6 +56,22 @@
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 
+import javax.xml.namespace.QName;
+import java.io.File;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
+import java.net.InetAddress;
+import java.net.NetworkInterface;
+import java.net.SocketException;
+import java.security.AccessController;
+import java.security.PrivilegedAction;
+import java.security.PrivilegedExceptionAction;
+import java.util.Enumeration;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+
 public class Utils {
     private static final Log log = LogFactory.getLog(Utils.class);
 
@@ -804,4 +803,21 @@
     		return val != null && ((Boolean)val).booleanValue();
     	}
     }
+
+    /**
+     * This method is used to find whether an axis2service is declared as hidden using the
+     * "hiddenService" param
+     *
+     * @param axisService - the service of interest
+     * @return true if is declared as hidden, false if not
+     */
+    public static boolean isHiddenService(AxisService axisService) {
+        boolean hideService = false;
+        Parameter hiddenServiceParam;
+        hiddenServiceParam = axisService.getParameter(Constants.HIDDEN_SERVICE_PARAM_NAME);
+        if (hiddenServiceParam != null) {
+            hideService = !JavaUtils.isFalseExplicitly(hiddenServiceParam.getValue());
+        }
+        return hideService;
+    }
 }
Index: modules/webapp/src/main/webapp/axis2-web/listServices.jsp
===================================================================
--- modules/webapp/src/main/webapp/axis2-web/listServices.jsp	(revision 1480015)
+++ modules/webapp/src/main/webapp/axis2-web/listServices.jsp	(working copy)
@@ -22,6 +22,7 @@
 <%@ page import="org.apache.axis2.description.AxisService" %>
 <%@ page import="org.apache.axis2.description.Parameter" %>
 <%@ page import="org.apache.axis2.engine.AxisConfiguration" %>
+<%@ page import="org.apache.axis2.util.Utils" %>
 <%@ page import="org.apache.axis2.util.JavaUtils" %>
 <%@ page import="java.util.Collection" %>
 <%@ page import="java.util.Enumeration" %>
@@ -56,6 +57,7 @@
         // Collection operationsList;
         for (Iterator iterator = servicecol.iterator(); iterator.hasNext();) {
             AxisService axisService = (AxisService) iterator.next();
+            if (!Utils.isHiddenService(axisService)) {
             opItr = axisService.getOperations();
             //operationsList = operations.values();
             serviceName = axisService.getName();
@@ -104,6 +106,7 @@
     %></ul>
 <%
             status = true;
+            }
         }
     }
     if (errornessservice != null) {
Index: modules/transport/http/src/org/apache/axis2/transport/http/HTTPTransportReceiver.java
===================================================================
--- modules/transport/http/src/org/apache/axis2/transport/http/HTTPTransportReceiver.java	(revision 1480015)
+++ modules/transport/http/src/org/apache/axis2/transport/http/HTTPTransportReceiver.java	(working copy)
@@ -20,6 +20,13 @@
 
 package org.apache.axis2.transport.http;
 
+import org.apache.axis2.AxisFault;
+import org.apache.axis2.context.ConfigurationContext;
+import org.apache.axis2.description.AxisOperation;
+import org.apache.axis2.description.AxisService;
+import org.apache.axis2.engine.AxisConfiguration;
+import org.apache.axis2.util.Utils;
+
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -29,13 +36,7 @@
 import java.util.Set;
 import java.util.TreeSet;
 
-import org.apache.axis2.AxisFault;
-import org.apache.axis2.context.ConfigurationContext;
-import org.apache.axis2.description.AxisOperation;
-import org.apache.axis2.description.AxisService;
-import org.apache.axis2.engine.AxisConfiguration;
 
-
 /**
  * Class HTTPTransportReceiver
  */
@@ -113,23 +114,25 @@
 
                 AxisService axisService = (AxisService) it.next();
 
-                Iterator iterator = axisService.getOperations();
+                if (!Utils.isHiddenService(axisService)) {
+                    Iterator iterator = axisService.getOperations();
 
-                temp += "<h3><a href=\"" + axisService.getName() + "?wsdl\">" +
-                        axisService.getName() + "</a></h3>";
+                    temp += "<h3><a href=\"" + axisService.getName() + "?wsdl\">" +
+                            axisService.getName() + "</a></h3>";
 
-                if (iterator.hasNext()) {
-                    temp += "Available operations <ul>";
+                    if (iterator.hasNext()) {
+                        temp += "Available operations <ul>";
 
-                    for (; iterator.hasNext();) {
-                        AxisOperation axisOperation = (AxisOperation) iterator.next();
+                        for (; iterator.hasNext();) {
+                            AxisOperation axisOperation = (AxisOperation) iterator.next();
 
-                        temp += "<li>" + axisOperation.getName().getLocalPart() + "</li>";
+                            temp += "<li>" + axisOperation.getName().getLocalPart() + "</li>";
+                        }
+
+                        temp += "</ul>";
+                    } else {
+                        temp += "No operations specified for this service";
                     }
-
-                    temp += "</ul>";
-                } else {
-                    temp += "No operations specified for this service";
                 }
             }
         }
