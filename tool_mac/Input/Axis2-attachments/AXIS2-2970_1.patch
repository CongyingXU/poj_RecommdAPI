Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ParameterDialog.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ParameterDialog.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ParameterDialog.java	(working copy)
@@ -1,105 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 12:11:36 PM
- */
-public class ParameterDialog extends JFrame implements ActionListener {
-
-    Insets insets;
-
-    protected JLabel paraName;
-    protected JLabel paravale;
-    protected JTextField txtpraName;
-    protected JTextArea txtparaValue;
-    protected JScrollPane sp;
-    protected JButton addbut;
-    protected String val;
-    JTextArea textarea;
-    int position;
-
-    public ParameterDialog() {
-        getContentPane().setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(null);
-        getContentPane().setBounds(150, 150, 300, 180);
-        insets = getInsets();
-
-        paraName = new JLabel("Parameter Name: ");
-        getContentPane().add(paraName);
-
-        paravale = new JLabel("Parameter Value: ");
-        getContentPane().add(paravale);
-
-
-        txtpraName = new JTextField("-para name -");
-        getContentPane().add(txtpraName);
-
-
-        txtparaValue = new JTextArea("-para vale -");
-        sp = new JScrollPane(txtparaValue);
-        getContentPane().add(sp);
-        sp.setAutoscrolls(true);
-
-        addbut = new JButton("Add");
-        getContentPane().add(addbut);
-        addbut.addActionListener(this);
-
-
-        paraName.setBounds(insets.left + 5, insets.top + 6, 100, 24);
-        paravale.setBounds(insets.left + 5, insets.top + 34, 100, 24);
-        sp.setBounds(insets.left + 110, insets.top + 34, 160, 60);
-        txtpraName.setBounds(insets.left + 110, insets.top + 6, 160, 24);
-        addbut.setBounds(insets.left + 100, insets.top + 100, 60, 24);
-
-        setSize(getPreferredSize());
-        setResizable(false);
-    }
-
-    public void showDialog(String in, JTextArea textarea, int position) {
-        this.textarea = textarea;
-        this.position = position;
-        this.show();
-        this.val = in;
-        this.setVisible(true);
-    }
-
-    public String hideForm() {
-        return this.val;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == addbut) {
-            String str = "<parameter locked=\"false\" name=\"" + txtpraName.getText().trim() + "\">\n"
-                    + txtparaValue.getText() + "\n" +
-                    "</parameter>\n";
-            val = str;
-            textarea.insert(str, position + 1);
-            this.setVisible(false);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ObjectKeeper.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ObjectKeeper.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ObjectKeeper.java	(working copy)
@@ -1,48 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.bean;
-
-import javax.swing.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 17, 2005
- * Time: 11:40:12 PM
- */
-
-//to fill the bean
-public interface ObjectKeeper {
-
-    void fillBean(ArchiveBean bean);
-
-    //to keep a refernce to next panel
-    void setNext(JPanel next);
-
-    JPanel getNext();
-
-    //to keep a refernce to previous panel
-    void setPrivious(JPanel privious);
-
-    JPanel getPrivious();
-
-    String getTopLable();
-
-    String getLable();
-
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/XmlFileFilter.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/XmlFileFilter.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/XmlFileFilter.java	(revision 0)
@@ -0,0 +1,33 @@
+package org.apache.ideaplugin.bean;
+
+import javax.swing.filechooser.FileFilter;
+import java.io.File;
+
+
+public class XmlFileFilter extends FileFilter {
+     public boolean accept(File file) {
+        if(file.isDirectory() ){
+            return true;
+        }
+        String extension = getExtension(file);
+        if(extension != null){
+            return  extension .equals("xml");
+        }
+        return false;
+    }
+
+    public String getDescription() {
+        return ".xml";
+    }
+
+   private String getExtension(File file){
+        String ext = null;
+        String s = file.getName();
+        int i = s.lastIndexOf('.');
+
+        if (i > 0 && i < s.length() - 1) {
+            ext = s.substring(i + 1).toLowerCase();
+        }
+        return ext;
+    }
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ArchiveBean.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ArchiveBean.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ArchiveBean.java	(working copy)
@@ -38,21 +38,16 @@
     private File classLoc;
     private ClassLoader classLoader;
     private String ServiceXML;
-
     public String fileSeparator = System.getProperty("file.separator");
-
     private ArrayList libs = new ArrayList();
     private ArrayList tempLibs = new ArrayList();
     private ArrayList tempWsdls = new ArrayList();
-
-
     private ArrayList wsdls = new ArrayList();
-
     private String outPath;
     private String archiveName;
     private ArrayList servicelsit = new ArrayList();
+    private boolean includeClass=false;
 
-
     public ArrayList getTempWsdls() {
         return tempWsdls;
     }
@@ -139,8 +134,8 @@
         return wsdls;
     }
 
-    public void addWsdls(ArrayList wsdls) {
-        this.wsdls.addAll(wsdls);
+    public void addWsdls(File wsdl) {
+        this.wsdls.add(wsdl);
     }
 
     public String getOutPath() {
@@ -158,7 +153,14 @@
     public void setArchiveName(String archiveName) {
         this.archiveName = archiveName;
     }
+    public void setIncludeClass(boolean includeClass){
+        this.includeClass=includeClass;
+    }
+    public boolean getIncludeClass(){
+        return this.includeClass;
+    }
 
+
     public void finsh() throws Exception {
         //Creating out File
         try {
@@ -181,9 +183,13 @@
 
             //Coping class files
             FileCopier fc = new FileCopier();
-            for (int count=0;count<classLocation.size();count++)
-            fc.copyFiles((File)classLocation.get(count), tempfile, null);
-
+            if(includeClass){
+                for (int count=0;count<classLocation.size();count++)
+                    fc.copyFiles((File)classLocation.get(count), tempfile, ".class");
+            }else{
+                for (int count=0;count<classLocation.size();count++)
+                    fc.copyFiles((File)classLocation.get(count), tempfile, null);
+            }
             // Coping wsdl files
             File lib = new File(tempfile, "lib");
             if (!lib.exists()) {
@@ -192,16 +198,16 @@
             if (libs!=null)
             {
             for (int i = 0; i < libs.size(); i++) {
-                String libname = (String) libs.get(i);
-                fc.copyFiles(new File(libname), lib, null);
+                      String libname = (String) libs.get(i);
+                      fc.copyFiles(new File(libname), lib, null);
             }
             }
 
             //coping wsdl files
             if (wsdls!=null)
             for (int i = 0; i < wsdls.size(); i++) {
-                String libname = (String) wsdls.get(i);
-                fc.copyFiles(new File(libname), metainf, null);
+                File libname = (File)wsdls.get(i);
+                fc.copyFiles(libname, metainf, null);
             }
 
             String arcivename = getArchiveName();
@@ -212,7 +218,6 @@
             jwriter.writeJarFile(outFile, arcivename, tempfile);
             //craeting the jar file
             deleteDir(tempfile);
-//
 
         } catch (Exception e) {
             throw e;
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ValidateXMLFile.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ValidateXMLFile.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ValidateXMLFile.java	(revision 0)
@@ -0,0 +1,54 @@
+package org.apache.ideaplugin.bean;
+
+
+import javax.xml.transform.stream.StreamSource;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.validation.Schema;
+import javax.xml.validation.SchemaFactory;
+import javax.xml.XMLConstants;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.DocumentBuilder;
+
+import org.xml.sax.SAXException;
+import org.xml.sax.InputSource;
+import org.w3c.dom.Document;
+import org.apache.axis2.tools.component.WizardPanel;
+
+import java.io.StringReader;
+
+
+public class ValidateXMLFile {
+
+
+    /**
+     * this calss used for check service xml validation
+     */
+
+
+    public  boolean Validate(String args) {
+        try {
+            // define the type of schema  get validation driver:
+            SchemaFactory schemafactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
+
+            // create schema by reading it from an XSD file:
+            java.net.URL resource = WizardPanel.class.getResource("/resources/service.xsd");
+            Schema schema = schemafactory.newSchema(new StreamSource(resource.getPath()));
+
+            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+            factory.setNamespaceAware(true);
+            DocumentBuilder docBuilder = factory.newDocumentBuilder();
+            Document doc = docBuilder.parse(new InputSource(new StringReader(args)));
+
+            schema.newValidator().validate(new DOMSource(doc));
+
+            return true;
+        }catch (SAXException ex) {
+         //   ex.printStackTrace();
+            return false;
+        } catch (Exception ex) {
+          //  ex.printStackTrace();
+             return false;
+        }
+
+    }
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ServiceObj.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ServiceObj.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ServiceObj.java	(working copy)
@@ -50,18 +50,24 @@
 
     public String toString() {
         String serviceXML = "<service name=\"" + serviceName + "\" >\n" +
-                "<description>\n" +
-                "Please Type your service description here\n" +
-                "</description>\n" +
-                "<parameter name=\"ServiceClass\" locked=\"false\">" + serviceClass + "</parameter>\n";
+                "   <description>\n" +
+                "       Please Type your service description here\n" +
+                "   </description>\n" +
+                "   <messageReceivers>\n"+
+                "       <messageReceiver mep=\"http://www.w3.org/2004/08/wsdl/in-only\" \n"+
+                "       class=\"org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver\" />\n "+
+                "       <messageReceiver mep=\"http://www.w3.org/2004/08/wsdl/in-out\"\n " +
+                "       class=\"org.apache.axis2.rpc.receivers.RPCMessageReceiver\" /> \n" +
+                "   </messageReceivers>\n "+
+                "   <parameter name=\"ServiceClass\" locked=\"false\">" + serviceClass + "</parameter>\n";
         if (operations.size() > 0) {
-            serviceXML = serviceXML + "<excludeOperations>\n";
+            serviceXML = serviceXML + " <excludeOperations>\n";
             for (int i = 0; i < operations.size(); i++) {
                 String s = (String) operations.get(i);
-                String op = "<operation>" + s + "</operation>\n";
+                String op = "       <operation>" + s + "</operation>\n";
                 serviceXML = serviceXML + op;
             }
-            serviceXML = serviceXML + "</excludeOperations>\n";
+            serviceXML = serviceXML + " </excludeOperations>\n";
         }
         serviceXML = serviceXML + "</service>\n";
         return serviceXML;
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ParameterObj.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ParameterObj.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ParameterObj.java	(revision 0)
@@ -0,0 +1,29 @@
+package org.apache.ideaplugin.bean;
+
+public class ParameterObj {
+
+    private String  paraName;
+    private String paraValue;
+
+    public ParameterObj(String name,String value){
+        this.paraName=name;
+        this.paraValue=value;
+    }
+
+    public void setName(String name){
+        this.paraName=name;
+    }
+
+    public void setValue(String value){
+        this.paraValue=value;
+    }
+
+    public String  getName(){
+        return this.paraName;
+    }
+
+    public String  getValue(){
+        return this.paraValue;
+    }
+
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ClassFileFilter.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ClassFileFilter.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/bean/ClassFileFilter.java	(revision 0)
@@ -0,0 +1,36 @@
+package org.apache.ideaplugin.bean;
+
+import javax.swing.filechooser.FileFilter;
+import java.io.File;
+
+
+public class ClassFileFilter extends FileFilter {
+
+    public boolean accept(File file) {
+        if (file .isDirectory()) {
+            return true;
+        }
+        String extension = getExtension(file );
+        if (extension != null) {
+            return extension.equals("class");
+        }
+
+        return false;
+
+    }
+
+    public String getDescription() {
+        return ".class";
+    }
+
+    private String getExtension(File file) {
+        String ext = null;
+        String s = file.getName();
+        int i = s.lastIndexOf('.');
+
+        if (i > 0 && i < s.length() - 1) {
+            ext = s.substring(i + 1).toLowerCase();
+        }
+        return ext;
+    }
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ModuleDialog.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ModuleDialog.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/ModuleDialog.java	(working copy)
@@ -1,89 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 4:11:19 PM
- */
-public class ModuleDialog extends JFrame implements ActionListener {
-
-    Insets insets;
-
-    protected JLabel moduleName;
-    protected JTextField txtModule;
-    protected JButton addbut;
-
-    protected String val;
-    JTextArea textarea;
-    int position;
-
-    public ModuleDialog() {
-        getContentPane().setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(null);
-        getContentPane().setBounds(150, 150, 300, 100);
-        insets = getInsets();
-
-        moduleName = new JLabel("Module Name: ");
-        getContentPane().add(moduleName);
-
-        txtModule = new JTextField("moduleName");
-        getContentPane().add(txtModule);
-
-        addbut = new JButton("Add");
-        getContentPane().add(addbut);
-        addbut.addActionListener(this);
-
-
-        moduleName.setBounds(insets.left + 5, insets.top + 6, 100, 24);
-        txtModule.setBounds(insets.left + 110, insets.top + 6, 160, 24);
-        addbut.setBounds(insets.left + 100, insets.top + 45, 60, 24);
-
-        setSize(getPreferredSize());
-        setResizable(false);
-    }
-
-    public void showDialog(String in, JTextArea textarea, int position) {
-        this.textarea = textarea;
-        this.position = position;
-        this.show();
-        this.val = in;
-        this.setVisible(true);
-    }
-
-    public String hideForm() {
-        return this.val;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == addbut) {
-            String str = "<module ref=\"" + txtModule.getText().trim() + "\" \\>";
-            val = str;
-            textarea.insert(str, position + 1);
-            this.setVisible(false);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/SelectPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/SelectPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/SelectPanel.java	(working copy)
@@ -1,327 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-import org.apache.ideaplugin.bean.OperationObj;
-import org.apache.ideaplugin.bean.ServiceObj;
-import org.apache.ideaplugin.frames.table.ArchiveTableModel;
-
-import javax.swing.*;
-import javax.swing.filechooser.FileFilter;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-import java.lang.reflect.Method;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Iterator;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 9:11:54 PM
- */
-public class SelectPanel extends JPanel implements ObjectKeeper, ActionListener {
-
-    protected JLabel lblClass;
-    protected JLabel lblServiceNam;
-    protected JTextField txtClassDir;
-    protected JTextField txtServiceName;
-    protected JButton butSelect;
-    protected JButton load;
-    protected JScrollPane sp;
-    protected JLabel tablelbl;
-
-    private JPanel previous;
-    protected File file;
-    protected Insets insets;
-    protected ServiceArciveFrame parent;
-    protected String fileName;
-    protected int count = 1;
-    protected HashMap operations;
-    protected DescriptorFile disfile;
-    protected ClassSelctionPage classPage;
-    protected String sgXMl;
-    ArrayList servicelsit;
-
-    public SelectPanel(ServiceArciveFrame parent, File file) {
-        this.parent = parent;
-        this.file = file;
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        this.setLayout(null);
-
-        insets = parent.getInsets();
-
-        lblClass = new JLabel("Select Service Classes");
-        add(lblClass);
-        lblClass.setBounds(insets.left + 8, insets.top + 2, 130, 24);
-
-        txtClassDir = new JTextField("");
-        add(txtClassDir);
-        txtClassDir.setBounds(insets.left + 140, insets.top + 2, 280, 24);
-
-        butSelect = new JButton("Browse...");
-        add(butSelect);
-        butSelect.addActionListener(this);
-        butSelect.setBounds(insets.left + 420, insets.top + 2, 90, 24);
-
-
-        load = new JButton(" Load ");
-        add(load);
-        load.addActionListener(this);
-        load.setBounds(insets.left + 512, insets.top + 2, 70, 24);
-
-
-        lblServiceNam = new JLabel("Service Name : ");
-        add(lblServiceNam);
-        lblServiceNam.setBounds(insets.left + 10, insets.top + 185, 100, 24);
-        txtServiceName = new JTextField("");
-        add(txtServiceName);
-        txtServiceName.setBounds(insets.left + 115, insets.top + 185, 120, 24);
-        lblServiceNam.setVisible(false);
-        txtServiceName.setVisible(false);
-        setSize(getPreferredSize());
-        parent.fc.setFileFilter(new ClassFileFilter());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.addClassLocation(bean.getClassLoc());
-        bean.setServiceXML(sgXMl);
-        bean.addLibs(bean.getTempLibs());
-        bean.addWsdls(bean.getTempWsdls());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-        //no one call this
-    }
-
-    public JPanel getNext() {
-        parent.setEnable(true, true, false, true);
-        if (classPage != null) {
-
-         classPage.setPrivious(this);
-            return classPage;
-        }
-        return disfile;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butSelect) {
-            parent.fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-
-                File newfile = parent.fc.getSelectedFile();
-                String newFile = newfile.getPath();
-                int index = newFile.indexOf(file.getAbsolutePath().trim());
-                if (index >= 0) {
-                    int lastindex = file.getAbsolutePath().trim().length();
-                    newFile = newFile.substring(lastindex + 1);
-                    char ch = parent.fileSeparator.toCharArray()[0];
-                    char newch = '.';
-                    int cindex = newFile.indexOf(ch);
-                    while (cindex >= 0) {
-                        newFile = newFile.replace(ch, newch);
-                        cindex = newFile.indexOf(ch);
-                    }
-                    fileName = newFile;
-                    int classIndex = fileName.lastIndexOf(".");
-                    fileName = fileName.substring(0, classIndex);
-                    txtClassDir.setText(fileName);
-
-
-                }
-            }
-        } else if (obj == load) {
-            if (file == null || fileName ==null) {
-                return;
-            }
-            try {
-                try {
-                    this.remove(sp);
-                    this.remove(tablelbl);
-                    lblServiceNam.setVisible(false);
-                    txtServiceName.setVisible(false);
-                } catch (Exception e1) {
-//                    e1.printStackTrace();
-                }
-
-//                ClassLoader classLoader = new URLClassLoader(
-//                        new URL[]{file.toURL()},SelectPanel.class.getClassLoader());
-
-                ClassLoader classLoader = parent.bean.getClassLoader();
-                Class serCla = Class.forName(fileName, true, classLoader);
-                Method[] methods = serCla.getDeclaredMethods();
-                operations = new HashMap();
-                if (methods.length > 0) {
-                    for (int i = 0; i < methods.length; i++) {
-                        Method method = methods[i];
-                        OperationObj operationobj = new OperationObj(method.getName(),
-                                method.getReturnType().toString(),
-                                new Integer(method.getParameterTypes().length), new Boolean(false));
-                        operations.put(method.getName(), operationobj);
-                    }
-                }
-
-                ArchiveTableModel myModel = new ArchiveTableModel(operations);
-                JTable table = new JTable(myModel);
-                tablelbl = new JLabel("Mark operation you do not want to publish ");
-                add(tablelbl);
-                tablelbl.setBounds(insets.left + 10, insets.top + 45, 400, 24);
-
-                sp = new JScrollPane(table);
-                add(sp);
-                sp.setAutoscrolls(true);
-                sp.setBounds(insets.left + 10, insets.top + 75, 550, 100);
-                txtServiceName.setText("MyService" + count);
-                lblServiceNam.setVisible(true);
-                txtServiceName.setVisible(true);
-                parent.setEnable(true,true,false,true);
-            } catch (ClassNotFoundException e1) {
-                JOptionPane.showMessageDialog(parent, "The specified file is not a valid java class",
-                            "Error!", JOptionPane.ERROR_MESSAGE);
-            }
-             catch (NoClassDefFoundError e1) {
-                JOptionPane.showMessageDialog(parent, "The specified file is not a valid java class",
-                            "Error!", JOptionPane.ERROR_MESSAGE);
-            }
-            parent.repaint();
-
-        }
-    }
-
-    public String getTopLable() {
-        return "Service class and operation selection";
-    }
-
-    public String getLable() {
-        return "First select service class and load its method operations";
-    }
-
-    public void process(){
-
-        ArrayList ops = new ArrayList();
-            Iterator opitr = operations.values().iterator();
-            while (opitr.hasNext()) {
-                OperationObj operationObj = (OperationObj) opitr.next();
-                if (operationObj.getSelect().booleanValue()) {
-                    ops.add(operationObj.getOpName());
-                }
-            }
-
-            ServiceObj service = new ServiceObj(txtServiceName.getText(), fileName, ops);
-
-            parent.bean.addToServicelsit(service);
-            if (!parent.singleService) {
-                int valu = JOptionPane.showConfirmDialog(parent, "Do you want to add an another service to group", "Service Archive",
-                        JOptionPane.YES_NO_OPTION);
-                if (valu == 0) {
-                    txtClassDir.setText("");
-                    fileName = "";
-                    try {
-                        this.remove(sp);
-                        this.remove(tablelbl);
-                        lblServiceNam.setVisible(false);
-                        txtServiceName.setVisible(false);
-                    } catch (Exception e1) {
-//                    e1.printStackTrace();
-                    }
-                    classPage = new ClassSelctionPage(parent);
-                    count++;
-                    parent.reShow();
-                    this.repaint();
-                } else {
-                    servicelsit = parent.bean.getServicelsit();
-                    parent.setEnable(false, true, false, true);
-                    sgXMl = "<serviceGroup>\n";
-                    for (int i = 0; i < servicelsit.size(); i++) {
-                        ServiceObj serviceObj = (ServiceObj) servicelsit.get(i);
-                        sgXMl = sgXMl + serviceObj.toString();
-                    }
-                    sgXMl = sgXMl + "</serviceGroup>";
-                    disfile = new DescriptorFile(parent, sgXMl);
-                    disfile.setPrivious(this);
-                }
-            } else {
-                servicelsit = parent.bean.getServicelsit();
-                parent.setEnable(false, true, false, true);
-                sgXMl = "<serviceGroup>\n";
-                for (int i = 0; i < servicelsit.size(); i++) {
-                    ServiceObj serviceObj = (ServiceObj) servicelsit.get(i);
-                    sgXMl = sgXMl + serviceObj.toString();
-                }
-                sgXMl = sgXMl + "</serviceGroup>";
-                disfile = new DescriptorFile(parent, sgXMl);
-                disfile.setPrivious(this);
-
-            }
-
-    }
-
-
-class ClassFileFilter extends FileFilter {
-
-    public boolean accept(File f) {
-        if (f.isDirectory()) {
-            return true;
-        }
-        String extension = getExtension(f);
-        if (extension != null) {
-            return extension.equals("class");
-        }
-
-        return false;
-
-    }
-
-    public String getDescription() {
-        return ".class";
-    }
-
-    private String getExtension(File f) {
-        String ext = null;
-        String s = f.getName();
-        int i = s.lastIndexOf('.');
-
-        if (i > 0 && i < s.length() - 1) {
-            ext = s.substring(i + 1).toLowerCase();
-        }
-        return ext;
-    }
-
-
-
-}
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ParameterDialog.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ParameterDialog.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ParameterDialog.java	(revision 0)
@@ -0,0 +1,84 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.ideaplugin.bean.ParameterObj;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+
+public class ParameterDialog extends JDialog {
+    private static ParameterDialog dialog;
+    private static ParameterObj para =new ParameterObj("","");
+    private JTextField txtName;
+    private JTextField txtValue;
+
+    public static void initialize(Component comp,
+                                  String title) {
+        Frame frame = JOptionPane.getFrameForComponent(comp);
+        dialog = new ParameterDialog(frame,title);
+        dialog.setResizable(false);
+        dialog.setSize(250,150);
+    }
+
+    public static ParameterObj showDialog(String title) {
+        if (dialog != null) {
+            dialog.setTitle(title);
+            dialog.setVisible(true);
+        }
+        return para;
+    }
+
+
+    private ParameterDialog(Frame frame,  String title) {
+        super(frame, title, true);
+
+        //buttons
+        final JButton cancelButton = new JButton("Cancel");
+        final JButton setButton = new JButton(" OK ");
+        cancelButton.addActionListener(new ActionListener() {
+            public void actionPerformed(ActionEvent e) {
+                ParameterDialog .dialog.setVisible(false);
+            }
+        });
+        setButton.addActionListener(new ActionListener() {
+            public void actionPerformed(ActionEvent e) {
+                ParameterDialog.para.setName(txtName.getText());
+                ParameterDialog.para.setValue(txtValue.getText());
+                ParameterDialog.dialog.setVisible(false);
+            }
+        });
+        getRootPane().setDefaultButton(setButton);
+        getRootPane().setDefaultButton(cancelButton);
+        //main part of the dialog
+
+        txtName =new JTextField();
+        txtValue =new JTextField();
+
+        JPanel listPane = new JPanel();
+        listPane.setLayout(new BoxLayout(listPane, BoxLayout.PAGE_AXIS));
+        listPane.add(Box.createRigidArea(new Dimension(10,0)));
+        listPane.add(new JLabel("Name:"));
+        listPane.add(txtName);
+        listPane.add(new JLabel("Value:"));
+        listPane.add(txtValue );
+        listPane.setBorder(BorderFactory.createEmptyBorder(0,10,10,10));
+
+        //Lay out the buttons from left to right.
+        JPanel buttonPane = new JPanel();
+        buttonPane.setLayout(new BoxLayout(buttonPane, BoxLayout.X_AXIS));
+        buttonPane.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 10));
+        buttonPane.add(Box.createHorizontalGlue());
+        buttonPane.add(cancelButton);
+        buttonPane.add(Box.createRigidArea(new Dimension(10, 0)));
+        buttonPane.add(setButton);
+
+        //Put everything together, using the content pane's BorderLayout.
+        Container contentPane = getContentPane();
+        contentPane.add(listPane, BorderLayout.CENTER);
+        contentPane.add(buttonPane, BorderLayout.SOUTH);
+
+        pack();
+    }
+
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/FirstFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/FirstFrame.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/FirstFrame.java	(working copy)
@@ -1,189 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 17, 2005
- * Time: 10:09:08 PM
- */
-public class FirstFrame extends JPanel implements ObjectKeeper {
-    JLabel lblArchivetype;
-    ButtonGroup cbgservoceType;
-    ButtonGroup cbggenerateserviceDesc;
-    JRadioButton radioSingle;
-    JRadioButton serviGroup;
-    JLabel label_1;
-    JRadioButton radioGenerate;
-    JRadioButton radihaveService;
-
-    private JPanel previous;
-    protected ClassSelctionPage classPage;
-    ServiceArciveFrame parent;
-
-    public FirstFrame(ServiceArciveFrame parent) {
-        this.parent = parent;
-        FirstFrameLayout customLayout = new FirstFrameLayout();
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        lblArchivetype = new JLabel("Select Archive Type");
-        add(lblArchivetype);
-
-        cbgservoceType = new ButtonGroup();
-        radioSingle = new JRadioButton("Single service Archive", true);
-        cbgservoceType.add(radioSingle);
-        add(radioSingle);
-
-        serviGroup = new JRadioButton("Service Group Archive", false);
-        cbgservoceType.add(serviGroup);
-        add(serviGroup);
-
-        label_1 = new JLabel("Do you want to generate services.xml");
-        add(label_1);
-
-        cbggenerateserviceDesc = new ButtonGroup();
-        radioGenerate = new JRadioButton("Generate services.xml", true);
-        cbggenerateserviceDesc.add(radioGenerate);
-        add(radioGenerate);
-
-        radihaveService = new JRadioButton("I already have services.xml", false);
-        cbggenerateserviceDesc.add(radihaveService);
-        add(radihaveService);
-
-        //creating next page
-//        classPage = new ClassSelctionPage(parent);
-//        classPage.setPrivious(this);
-        setSize(getPreferredSize());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setGeneretServiceDesc(radioGenerate.isSelected());
-        bean.setSingleService(radioSingle.isSelected());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-//        this.next = next;
-    }
-
-    public JPanel getNext() {
-        boolean singleservice = radioSingle.isSelected();
-        boolean generateXML = radioGenerate.isSelected();
-        
-        if (singleservice && generateXML) {
-            parent.singleService = true;
-            parent.generateServiceXML = true;
-            ClassSelctionPage classPage = new ClassSelctionPage(parent);
-            classPage.setPrivious(this);
-            return classPage;
-        } else if (!generateXML) {
-            parent.generateServiceXML = false;
-            XMLSelectionPage xml = new XMLSelectionPage(parent);
-            xml.setPrivious(this);
-            return xml;
-        } else {
-            parent.generateServiceXML = true;
-            parent.singleService = false;
-            ClassSelctionPage classPage = new ClassSelctionPage(parent);
-            classPage.setPrivious(this);
-            return classPage;
-        }
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public String getTopLable() {
-        return "Service Type selection";
-    }
-
-    public String getLable() {
-        return "Welcome to Axis2 service archive generation. " +
-                "Select service type";
-    }
-}
-
-class FirstFrameLayout implements LayoutManager {
-
-    public FirstFrameLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 494 + insets.left + insets.right;
-        dim.height = 281 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 24, 208, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 56, 184, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 88, 184, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 136, 250, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 168, 224, 24);
-        }
-        c = parent.getComponent(5);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 32, insets.top + 200, 224, 16);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ImagePanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ImagePanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ImagePanel.java	(working copy)
@@ -1,109 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 8:50:16 PM
- */
-public class ImagePanel extends JPanel {
-    JLabel lblImage;
-    JLabel labTop;
-    JLabel lblBottom;
-    ImageIcon apachelogo;
-
-    public ImagePanel() {
-        ImageLayout customLayout = new ImageLayout();
-        setLayout(customLayout);
-
-        java.net.URL resource = ImagePanel.class.getResource("/icons/asf-feather.png");
-        apachelogo = new ImageIcon(resource);
-
-        lblImage = new JLabel(apachelogo);
-        add(lblImage);
-        lblImage.setBackground(Color.white);
-
-        labTop = new JLabel();
-        labTop.setBackground(Color.white);
-        add(labTop);
-        labTop.setFont(new Font("Helvetica", Font.BOLD, 12));
-
-        lblBottom = new JLabel();
-        add(lblBottom);
-        lblBottom.setBackground(Color.white);
-        lblBottom.setFont(new Font("Helvetica", Font.PLAIN, 10));
-
-        setSize(getPreferredSize());
-        this.setBackground(Color.white);
-    }
-
-    public void setCaptions(String lbl1, String lbl2) {
-        labTop.setText("  " + lbl1);
-        lblBottom.setText("  " + lbl2);
-    }
-}
-
-class ImageLayout implements LayoutManager {
-
-    public ImageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 535 + insets.left + insets.right;
-        dim.height = 77 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-        return dim;
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 368, insets.top + 0, 168, 80);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 0, insets.top + 0, 368, 40);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 0, insets.top + 40, 368, 40);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassSelctionPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassSelctionPage.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassSelctionPage.java	(working copy)
@@ -1,128 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 22, 2005
- * Time: 5:18:26 PM
- */
-public class ClassSelctionPage extends JPanel implements ObjectKeeper, ActionListener {
-
-    protected JLabel lblClass;
-    protected JTextField txtClassDir;
-    protected JButton butSelect;
-
-    private JPanel previous;
-
-    File file;
-    Insets insets;
-    ServiceArciveFrame parent;
-//    protected SelectPanel selectPanel;
-
-
-    public ClassSelctionPage(ServiceArciveFrame parent) {
-        this.parent = parent;
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        this.setLayout(null);
-        insets = parent.getInsets();
-
-        lblClass = new JLabel("Select Classes");
-        add(lblClass);
-        lblClass.setBounds(insets.left + 8, insets.top + 24, 120, 24);
-
-        txtClassDir = new JTextField("");
-        add(txtClassDir);
-        txtClassDir.setBounds(insets.left + 136, insets.top + 24, 336, 24);
-
-        butSelect = new JButton("Browse...");
-        add(butSelect);
-        butSelect.addActionListener(this);
-        butSelect.setBounds(insets.left + 480, insets.top + 24, 90, 24);
-        setSize(getPreferredSize());
-//        this.parent.setEnable(true, false, false, true);
-//        this.parent.reShow();
-
-
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setClassLoc(file);
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-    }
-
-    public JPanel getNext() {
-        ResourceChooser res = new ResourceChooser(parent);
-        parent.setEnable(true,true,false,true);
-        res.setPrivious(this);
-        return res;
-//        return selectPanel;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-
-    public String getTopLable() {
-        return "Class location selection";
-    }
-
-    public String getLable() {
-        return " Select the location of service classes directory";
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butSelect) {
-            parent.fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                file = parent.fc.getSelectedFile();
-                parent.fc.setCurrentDirectory(file);
-                txtClassDir.setText(file.getAbsolutePath());
-                parent.setEnable(true, true, false, true);
-//                selectPanel = new SelectPanel(parent,file);
-//                selectPanel.setPrivious(this);
-            } else {
-                txtClassDir.setText("");
-                parent.setEnable(true, false, false, true);
-            }
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/XMLSelectionPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/XMLSelectionPage.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/XMLSelectionPage.java	(working copy)
@@ -1,178 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.IOException;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 11:26:02 PM
- */
-public class XMLSelectionPage extends JPanel implements ObjectKeeper, ActionListener {
-    JLabel selectxml;
-    JTextField txtService;
-    JButton butSelect;
-
-    JLabel selctclass;
-    JTextField txtclass;
-    File file;
-    JButton bustSelectclss;
-    String value;
-    private JPanel previous;
-
-    protected ServiceArciveFrame parent;
-
-    public XMLSelectionPage(ServiceArciveFrame parent) {
-        Insets insets = parent.getInsets();
-        this.parent = parent;
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(null);
-
-        selectxml = new JLabel("Select services.xml");
-        add(selectxml);
-
-        txtService = new JTextField("");
-        add(txtService);
-
-        butSelect = new JButton("Browse...");
-        butSelect.addActionListener(this);
-        add(butSelect);
-
-        selctclass = new JLabel("Select class location");
-        add(selctclass);
-
-        txtclass = new JTextField("");
-        add(txtclass);
-
-        bustSelectclss = new JButton("Browse...");
-        bustSelectclss.addActionListener(this);
-        add(bustSelectclss);
-
-        selectxml.setBounds(insets.left + 16, insets.top + 16, 168, 24);
-        txtService.setBounds(insets.left + 192, insets.top + 16, 288, 24);
-        butSelect.setBounds(insets.left + 488, insets.top + 16, 90, 24);
-
-        selctclass.setBounds(insets.left + 16, insets.top + 45, 168, 24);
-        txtclass.setBounds(insets.left + 192, insets.top + 45, 288, 24);
-        bustSelectclss.setBounds(insets.left + 488, insets.top + 45, 90, 24);
-
-        setSize(getPreferredSize());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.addClassLocation(file);
-        bean.setClassLoc(file);
-        bean.setServiceXML(value);
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-
-    }
-
-    public String getTopLable() {
-        return "Class location & Service descriptor selection";
-    }
-
-    public String getLable() {
-        return " Select the location of service classes directory and services.xml";
-    }
-
-    public JPanel getNext() {
-
-        ResourceChooser resourceChooser = new ResourceChooser(parent);
-        parent.setEnable(true,true,false,true);
-        resourceChooser.setPrivious(this);
-        return resourceChooser;
-
-
-        /*
-        DescriptorFile disfile = new DescriptorFile(parent, value);
-        disfile.setPrivious(this);
-        return disfile;
-        */
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == bustSelectclss) {
-            parent.fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                file = parent.fc.getSelectedFile();
-                txtclass.setText(file.getAbsolutePath());
-                if ((new File(txtService.getText())).isFile())
-                parent.setEnable(false, true, false, true);
-            } else {
-                txtclass.setText("");
-                parent.setEnable(true, false, false, true);
-            }
-
-        } else if (obj == butSelect) {
-            parent.fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = parent.fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                File file = parent.fc.getSelectedFile();
-
-                byte[] buf = new byte[1024];
-                int read;
-                ByteArrayOutputStream out;
-                try {
-                    FileInputStream in = new FileInputStream(file);
-
-                    out = new ByteArrayOutputStream();
-                    while ((read = in.read(buf)) > 0) {
-                        out.write(buf, 0, read);
-                    }
-                    in.close();
-                    value = new String(out.toByteArray());
-                } catch (IOException e1) {
-                }
-                txtService.setText(file.getAbsolutePath());
-                if ((new File(txtclass.getText())).isDirectory())
-                parent.setEnable(false, true, false, true);
-            } else {
-                txtService.setText("");
-                parent.setEnable(true, false, false, true);
-            }
-
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/OutPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/OutPage.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/OutPage.java	(working copy)
@@ -1,172 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 5:12:13 PM
- */
-public class OutPage extends JPanel implements ObjectKeeper, ActionListener {
-    JLabel lblout;
-    JTextField txtoutput;
-    JButton butselect;
-    JLabel lblname;
-    JTextField txtjarName;
-
-    public final JFileChooser fc = new JFileChooser();
-    ServiceArciveFrame parent;
-    private JPanel previous;
-
-
-    public OutPage(ServiceArciveFrame parent) {
-        this.parent = parent;
-        OutPageLayout customLayout = new OutPageLayout();
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        lblout = new JLabel("Select Output location");
-        add(lblout);
-
-        txtoutput = new JTextField(".");
-        add(txtoutput);
-
-        butselect = new JButton("Browse...");
-        butselect.addActionListener(this);
-        add(butselect);
-
-        lblname = new JLabel("Archive name");
-        add(lblname);
-
-        txtjarName = new JTextField("MyArchive");
-        add(txtjarName);
-
-        setSize(getPreferredSize());
-    }
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setOutPath(txtoutput.getText().trim());
-        bean.setArchiveName(txtjarName.getText().trim());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-
-    }
-
-    public JPanel getNext() {
-        return null;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public String getTopLable() {
-        return "Output location selection";
-    }
-
-    public String getLable() {
-        return "Select output location and archive name";
-    }
-
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butselect) {
-            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-            int returnVal = fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-                File newfile = fc.getSelectedFile();
-                txtoutput.setText(newfile.getAbsolutePath());
-            } else {
-                txtoutput.setText("");
-            }
-            parent.setEnable(false, false, true, true);
-        }
-    }
-}
-
-class OutPageLayout implements LayoutManager {
-
-    public OutPageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 594 + insets.left + insets.right;
-        dim.height = 240 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 16, 152, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 168, insets.top + 16, 312, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 488, insets.top + 16, 90, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 56, 152, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 168, insets.top + 56, 312, 24);
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArciveFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArciveFrame.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArciveFrame.java	(working copy)
@@ -1,165 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 11:45:58 AM
- */
-public class ServiceArciveFrame extends JFrame {
-
-    protected ImagePanel topPanel;
-    protected BottomPanel bottomPanel;
-    public boolean singleService;
-    public boolean generateServiceXML;
-    //  protected JPanel firstpanel ;
-    //    protected SelectPanel slectpanel;
-    protected JPanel currentpanle;
-    public String fileSeparator = System.getProperty("file.separator");
-    public final JFileChooser fc = new JFileChooser();
-    Insets insets;
-    ArchiveBean bean;
-
-    public ServiceArciveFrame() {
-        setBounds(200, 200, 600, 420);
-        getContentPane().setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(null);
-        getContentPane().setBounds(200, 200, 600, 420);
-        bean = new ArchiveBean();
-
-        topPanel = new ImagePanel();
-        getContentPane().add(topPanel);
-        topPanel.setCaptions("Service Type selection", "Welcome to Axis2 service archive generation. " +
-                "Select service type");
-
-        currentpanle = new FirstFrame(this);
-        getContentPane().add(currentpanle);
-
-
-        bottomPanel = new BottomPanel(currentpanle, this, bean);
-        getContentPane().add(bottomPanel);
-        bottomPanel.setEnable(false, true, false, true);
-
-        insets = getInsets();
-        topPanel.setBounds(insets.left, insets.top, 608, 80);
-        currentpanle.setBounds(insets.left, insets.top + 80, 608, 260);
-        bottomPanel.setBounds(insets.left, insets.top + 328, 608, 60);
-        setSize(getPreferredSize());
-        setResizable(false);
-        
-
-    }
-
-    public void setEnable(boolean back, boolean next, boolean finish, boolean cancel) {
-        if (currentpanle instanceof FirstFrame) {
-            bottomPanel.setEnable(back, next, finish, cancel);
-        } else {
-            bottomPanel.setEnable(back, next, finish, cancel);
-        }
-
-    }
-
-    public void Next(JPanel current) {
-        currentpanle.setVisible(false);
-        try {
-            remove(currentpanle);
-        } catch (Exception e) {
-            System.out.println("");
-        }
-        getContentPane().add(current);
-        current.setBounds(insets.left, insets.top + 80, 608, 260);
-        currentpanle = current;
-        
-        reShow();
-    }
-
-    public void Back(JPanel current) {
-        currentpanle.setVisible(false);
-        try {
-            remove(currentpanle);
-        } catch (Exception e) {
-            System.out.println("");
-        }
-        getContentPane().add(current);
-        current.setBounds(insets.left, insets.top + 80, 608, 260);
-        currentpanle = current;
-        currentpanle.setVisible(true);
-        setEnable(true, true, false, true);
-        reShow();
-    }
-
-    public void reShow() {
-        ObjectKeeper keeper = (ObjectKeeper) currentpanle;
-        topPanel.setCaptions(keeper.getTopLable(), keeper.getLable());
-        this.show();
-    }
-
-    class MainFrameLayout implements LayoutManager {
-
-        public MainFrameLayout() {
-        }
-
-        public void addLayoutComponent(String name, Component comp) {
-        }
-
-        public void removeLayoutComponent(Component comp) {
-        }
-
-        public Dimension preferredLayoutSize(Container parent) {
-            Dimension dim = new Dimension(0, 0);
-
-            Insets insets = parent.getInsets();
-            dim.width = 608 + insets.left + insets.right;
-            dim.height = 400 + insets.top + insets.bottom;
-
-            return dim;
-        }
-
-        public Dimension minimumLayoutSize(Container parent) {
-            return new Dimension(0, 0);
-        }
-
-        public void layoutContainer(Container parent) {
-            Insets insets = parent.getInsets();
-
-            Component c;
-            c = parent.getComponent(0);
-            if (c.isVisible()) {
-                c.setBounds(insets.left, insets.top, 608, 80);
-            }
-            c = parent.getComponent(1);
-            if (c.isVisible()) {
-                c.setBounds(insets.left, insets.top + 80, 608, 260);
-            }
-            c = parent.getComponent(2);
-            if (c.isVisible()) {
-                c.setBounds(insets.left, insets.top + 328, 608, 60);
-            }
-//        c = parent.getComponent(3);
-//        if (c.isVisible()) {c.setBounds(insets.left+0,insets.top+80,608,260);}
-        }
-    }
-}
\ No newline at end of file
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LibraryAddingPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LibraryAddingPage.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LibraryAddingPage.java	(revision 0)
@@ -0,0 +1,205 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+import org.apache.axis2.tools.java2wsdl.JarFileFilter;
+import org.apache.ideaplugin.bean.ArchiveBean;
+
+import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+import java.util.ArrayList;
+import java.net.URL;
+import java.net.URLClassLoader;
+import java.io.File;
+
+
+public class LibraryAddingPage extends WizardPanel {
+
+    private JTextField txtJarLocation;
+    private JButton butSelect;
+    private JButton butAdd;
+    private JButton butRemove;
+    private JList listPathDisply;
+    private DefaultListModel listModel;
+    private JButton btnHint;
+    private JTextArea txaHint;
+    private boolean flag=false;
+    private String hint ="";
+    private ArchiveBean archiveBean;
+    private final JFileChooser fileChooser=new JFileChooser();
+
+
+    public LibraryAddingPage(WizardComponents wizardComponents, ArchiveBean archiveBean) {
+        super(wizardComponents,  "Axis2 Idea Plugin Service Archiver Creator Wizards");
+        setPanelTopTitle("Service Archiver");
+        setPanelBottomTitle("Add any external Jar");
+        this.archiveBean=archiveBean;
+        init();
+    }
+
+    private void init(){
+        txaHint =new JTextArea();
+        txaHint.setBorder(null);
+        txaHint.setFocusable(false);
+        txaHint.setLineWrap(true);
+        txaHint.setWrapStyleWord(true);
+        txaHint.setOpaque(false);
+
+        btnHint =new JButton("Hint >>");
+        btnHint.setBorder(new EmptyBorder(new Insets(0,0,0,0)));
+        txtJarLocation=new JTextField();
+        butSelect =new JButton("Browse..");
+        butAdd =new JButton("Add ->");
+        butRemove=new JButton("Remove <-");
+        listModel =new DefaultListModel();
+        listPathDisply =new JList(listModel);
+        listPathDisply.setAutoscrolls(true);
+        listPathDisply.setOpaque(false);
+        listPathDisply.setBorder(BorderFactory.createBevelBorder(1) );
+        listPathDisply.setFocusable(false);
+
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(true);
+        setFinishButtonEnabled(false);
+        setPageComplete(false);
+
+        this.setLayout(new GridBagLayout());
+
+        this.add(new JLabel("Jar file location")
+                , new GridBagConstraints(0, 0, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,10), 0, 0));
+
+        this.add(txtJarLocation
+                , new GridBagConstraints(1, 0, GridBagConstraints.RELATIVE , 1, 1.0, 0.0
+                , GridBagConstraints.CENTER , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 0, 10), 0, 0));
+
+        txtJarLocation.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                update();
+            }
+        });
+
+        this.add(butSelect
+                , new GridBagConstraints(2, 0, 1, 1, 0.1, 0.0
+                , GridBagConstraints.CENTER , GridBagConstraints.NONE
+                , new Insets(5, 10, 1,10), 0, 0));
+
+        butSelect.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                broswseJarFile();
+                update();
+            }
+        });
+
+        this.add(butAdd
+                , new GridBagConstraints(0, 1, 1, 1, 0.1, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 1,1), 0, 0));
+        butAdd.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                listModel.addElement(txtJarLocation.getText() );
+                txtJarLocation.setText("");
+                update();
+            }
+        });
+
+        this.add(butRemove
+                , new GridBagConstraints(1, 1, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 1, 1,1), 2, 0));
+        butRemove .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                handleRemove();
+                update();
+            }
+        });
+
+        this.add(new JScrollPane(listPathDisply)
+                , new GridBagConstraints(0, 2, GridBagConstraints.REMAINDER, 1, 1.0, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 1,10), 0, 0));
+
+        this.add(btnHint
+                , new GridBagConstraints(0, 3, 1, 1, 0.1,0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0, 10), 0, 0));
+        btnHint.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                if(flag){
+                    btnHint.setText("Hint >>");
+                    txaHint.setText("");
+                    flag=false;
+                }else{
+                    btnHint.setText("Hint <<");
+                    txaHint.setText(hint);
+                    flag=true;
+                }
+                update();
+            }
+        });
+
+        this.add(txaHint
+                , new GridBagConstraints(0, 4, GridBagConstraints.REMAINDER, 1, 0.1,1.0
+                , GridBagConstraints.CENTER , GridBagConstraints.BOTH
+                , new Insets(5, 10, 10, 10), 0, 0));
+
+    }
+    //next
+    public void next() {
+        switchPanel(CodegenFrame.PANEL_FOURTH_C );
+
+    }
+    //back
+    public void back() {
+        switchPanel(CodegenFrame.PANEL_SECOND_C );
+    }
+    //update
+    public void update() {
+        fillBean();
+        setPageComplete(true);
+        setNextButtonEnabled(true);
+    }
+
+    //get page type
+    public  int getPageType() {
+        return  WizardPanel.SERVICE_ARCHIVE_TYPE  ;
+    }
+
+    private void broswseJarFile(){
+        fileChooser.setFileFilter(new JarFileFilter() );
+        int returnVal= fileChooser.showOpenDialog(butAdd);
+        if(returnVal == JFileChooser .APPROVE_OPTION ){
+            File file = fileChooser.getSelectedFile();
+            txtJarLocation.setText(file.getAbsolutePath());
+        }
+    }
+    private void handleRemove() {
+        int[] selectionIndices = listPathDisply .getSelectedIndices() ;
+        for (int i=0;i<selectionIndices.length;i++){
+            listModel .remove(selectionIndices[i]);
+        }
+    }
+    private void fillBean(){
+        ArrayList tempList=archiveBean.getLibs();
+        tempList.addAll(getJarPathlist());
+        archiveBean.addLibs(tempList);
+        URL urllist[] = new URL[listModel.size() + 1];
+        ClassLoader cls = new URLClassLoader(urllist , LibraryAddingPage.class.getClassLoader());
+        archiveBean.setClassLoader(cls);
+    }
+      //get class path list
+    public ArrayList getJarPathlist(){
+        Object [] listObject = listModel.toArray() ;
+        ArrayList listString =new ArrayList();
+        for(int i=0 ;i<listObject.length ;i++){
+            listString.add(listObject[i].toString()) ;
+        }
+        return listString ;
+    }
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArchiveOutputLocationPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArchiveOutputLocationPage.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceArchiveOutputLocationPage.java	(revision 0)
@@ -0,0 +1,151 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+import org.apache.ideaplugin.bean.ArchiveBean;
+
+import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+import java.io.File;
+
+
+public class ServiceArchiveOutputLocationPage  extends WizardPanel {
+
+    private JTextField txtLocation;
+    private JTextField txtFileName;
+    private JButton btnBrowes;
+    private JButton btnHint;
+    private JTextArea txaHint;
+    private boolean flag=false;
+    final JFileChooser DirChooser=new JFileChooser();
+    public static final String hint="";
+    private ArchiveBean archiveBean;
+    /**
+     * Constructor
+     * @param wizardComponents
+     */
+    public ServiceArchiveOutputLocationPage(WizardComponents wizardComponents, ArchiveBean archiveBean){
+        super(wizardComponents, "Axis2 Idea Plugin Service Archiver Creator Wizards");
+        setPanelTopTitle("Service Archiver");
+        setPanelBottomTitle("Select the location for the generated Archiver");
+        this.archiveBean=archiveBean;
+        init();
+    }
+    private void init(){
+        txaHint =new JTextArea();
+        txaHint.setBorder(null);
+        txaHint.setFocusable(false);
+        txaHint.setLineWrap(true);
+        txaHint.setWrapStyleWord(true);
+        txaHint.setOpaque(false);
+
+        btnHint =new JButton("Hint >>");
+        btnHint.setBorder(new EmptyBorder(new Insets(0,0,0,0)));
+
+        txtFileName =new JTextField("Service_Archiver");
+
+        txtLocation=new JTextField();
+
+        btnBrowes=new JButton("Browse..");
+
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(false);
+        setFinishButtonEnabled(false);
+        this.setLayout(new GridBagLayout());
+
+        this.add(new JLabel("OutPut File Name")
+                       , new GridBagConstraints(0, 0, 1, 1, 0.1, 0.0
+                       , GridBagConstraints.NORTHWEST  , GridBagConstraints.NONE
+                       , new Insets(5, 10, 0, 0), 0, 0));
+
+               this.add(txtFileName
+                       , new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0
+                       , GridBagConstraints.NORTHWEST  , GridBagConstraints.HORIZONTAL
+                       , new Insets(5, 10, 0, 0), 0, 0));
+
+        this.add(new JLabel("OutPut Location")
+                , new GridBagConstraints(0, 1, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,0), 0, 0));
+
+        this.add(txtLocation
+                , new GridBagConstraints(1, 1, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0, 0), 0, 0));
+
+        this.add(btnBrowes
+                , new GridBagConstraints(2, 1, 1, 1, 0.1, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.NONE
+                , new Insets(5, 10, 0, 10), 0, 0));
+
+        btnBrowes.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                DirChooser .setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
+                int returnVal = DirChooser.showOpenDialog(btnBrowes );
+                if (returnVal == JFileChooser.APPROVE_OPTION) {
+                    DirChooser.setFileSelectionMode(JFileChooser .FILES_ONLY );
+                    File newfile = DirChooser.getSelectedFile();
+                    txtLocation.setText(newfile.getAbsolutePath() );
+                }
+                update();
+            }
+        });
+        this.add(btnHint,
+                new GridBagConstraints(0, 2, 1, 1, 0.1,0.0
+                        , GridBagConstraints.WEST , GridBagConstraints.NONE
+                        , new Insets(5, 10, 0, 10), 0, 0));
+        btnHint.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                if(flag){
+                    btnHint.setText("Hint >>");
+                    txaHint.setText("");
+                    flag=false;
+                }else{
+                    btnHint.setText("Hint <<");
+                    txaHint.setText(hint);
+                    flag=true;
+                }
+                update();
+            }
+        });
+
+        this.add(txaHint
+                , new GridBagConstraints(0, 3, GridBagConstraints.REMAINDER, 1, 0.1,1.0
+                , GridBagConstraints.CENTER , GridBagConstraints.BOTH
+                , new Insets(5, 10, 10, 10), 0, 0));
+    }
+
+
+    public void back() {
+        if(!((ServiceXMLFileSelectionPage)getWizardComponents().getWizardPanel(CodegenFrame.PANEL_FOURTH_C)).isIncludeXml()){
+             switchPanel(CodegenFrame.PANEL_FOURTH_C );
+        }else{
+            switchPanel(CodegenFrame.PANEL_OPTION_C );
+        }
+    }
+
+    public void next() {
+
+    }
+
+    public void update(){
+        if(!txtFileName.getText() .equals("")){
+            archiveBean.setArchiveName(txtFileName.getText());
+        }
+        if(!txtLocation .getText() .equals("")){
+           if(new File(txtLocation.getText()).isDirectory())
+                archiveBean.setOutPath(txtLocation.getText());
+        }
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(false);
+
+    }
+    public  int getPageType() {
+        return  WizardPanel.SERVICE_ARCHIVE_TYPE;
+    }
+}
+ 
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ResourceChooser.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ResourceChooser.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ResourceChooser.java	(working copy)
@@ -1,318 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.io.File;
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.net.URLClassLoader;
-import java.util.ArrayList;
-import java.util.Enumeration;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 23, 2005
- * Time: 4:30:18 PM
- */
-public class ResourceChooser extends JPanel implements ObjectKeeper, ActionListener {
-
-    JLabel libLbl;
-    JTextField txtLibs;
-    JButton butLoad;
-    JButton butselect;
-    JList lisLibs;
-    JScrollPane sp_lisLibs;
-    JLabel lblwsdl;
-    JTextField txtwsdl;
-    JButton butSelectwsdl;
-    JButton butaddwsdl;
-    JList listwsdl;
-    JScrollPane sp_listwsdl;
-    private DefaultListModel listModellibs;
-    private DefaultListModel listModellwsdls;
-    private JPanel previous;
-
-    public final JFileChooser fc = new JFileChooser();
-    ServiceArciveFrame parent;
-
-    public ResourceChooser(ServiceArciveFrame parent) {
-        this.parent = parent;
-        ResourceChooserLayout customLayout = new ResourceChooserLayout();
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        libLbl = new JLabel("Select Lib files : ");
-        add(libLbl);
-
-        txtLibs = new JTextField("");
-        add(txtLibs);
-
-        butLoad = new JButton("Add");
-        butLoad.addActionListener(this);
-        add(butLoad);
-
-        butselect = new JButton("Browse...");
-        butselect.addActionListener(this);
-        add(butselect);
-
-        listModellibs = new DefaultListModel();
-        lisLibs = new JList(listModellibs);
-        sp_lisLibs = new JScrollPane(lisLibs);
-        add(sp_lisLibs);
-
-        lblwsdl = new JLabel("Select WSDLs : ");
-        add(lblwsdl);
-
-        txtwsdl = new JTextField("");
-        add(txtwsdl);
-
-        butSelectwsdl = new JButton("Browse...");
-        butSelectwsdl.addActionListener(this);
-        add(butSelectwsdl);
-
-        butaddwsdl = new JButton("Add");
-        butaddwsdl.addActionListener(this);
-        add(butaddwsdl);
-
-        listModellwsdls = new DefaultListModel();
-        listwsdl = new JList(listModellwsdls);
-        sp_listwsdl = new JScrollPane(listwsdl);
-        add(sp_listwsdl);
-
-   setSize(getPreferredSize());
-
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butLoad) {
-            File lib = new File(txtLibs.getText());
-            if (lib.isFile() ) {
-                if( !listModellibs.contains(txtLibs.getText()))
-            listModellibs.addElement(txtLibs.getText());
-            }
-            else{
-                JOptionPane.showMessageDialog(parent, "The file selected is not a valid jar file",
-                    "Axis2 ServiceArchieve creation", JOptionPane.ERROR_MESSAGE);
-            }
-        } else if (obj == butselect) {
-            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-                File newfile = fc.getSelectedFile();
-                txtLibs.setText(newfile.getAbsolutePath());
-            } else {
-                txtLibs.setText("");
-            }
-        } else if (obj == butSelectwsdl) {
-            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-            int returnVal = fc.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
-                File newfile = fc.getSelectedFile();
-                txtwsdl.setText(newfile.getAbsolutePath());
-            } else {
-                txtwsdl.setText("");
-            }
-        } else if (obj == butaddwsdl) {
-            File wsdl = new File(txtwsdl.getText());
-            if (wsdl.isFile()){
-                if(!listModellwsdls.contains(txtwsdl.getText()))
-            listModellwsdls.addElement(txtwsdl.getText());
-            }
-            else{
-                JOptionPane.showMessageDialog(parent, "The file selected is not a valid jar file",
-                    "Axis2 ServiceArchieve creation", JOptionPane.ERROR_MESSAGE);
-            }
-        }
-    }
-
-    public void fillBean(ArchiveBean bean) {
-
-        Enumeration enumerator = listModellibs.elements();
-        ArrayList libs = new ArrayList();
-        URL urllist[] = new URL[listModellibs.size() + 1];
-        int count = 0;
-        while (enumerator.hasMoreElements()) {
-            String s = (String) enumerator.nextElement();
-            File file = new File(s);
-            if (file.exists()) {
-                try {
-                    urllist[count] = file.toURL();
-                } catch (MalformedURLException e) {
-                    System.out.println("Error");
-                }
-            }
-            libs.add(s);
-            count++;
-        }
-        try {
-            urllist[count] = bean.getClassLoc().toURL();
-        } catch (MalformedURLException e) {
-
-        }
-        ClassLoader cls = new URLClassLoader(urllist, ResourceChooser.class.getClassLoader());
-        bean.setClassLoader(cls);
-//        Enumeration enumerator =listModellibs.elements();
-//        ArrayList libs = new ArrayList();
-//        while (enumerator.hasMoreElements()) {
-//            String s = (String) enumerator.nextElement();
-//            libs.add(s);
-//        }
-        bean.setTempLibs(libs);
-        enumerator = listModellwsdls.elements();
-        ArrayList wsdls = new ArrayList();
-        while (enumerator.hasMoreElements()) {
-            String s = (String) enumerator.nextElement();
-            wsdls.add(s);
-        }
-        bean.setTempWsdls(wsdls);
-    }
-
-
-    public String getTopLable() {
-        return "Resource Selection";
-    }
-
-    public String getLable() {
-        return "Select service specific lib and service WSDLs";
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-
-    }
-
-    public JPanel getNext() {
-
-
-
-
-        if (parent.generateServiceXML) {
-            parent.setEnable(true, false, false, true);
-            SelectPanel sp = new SelectPanel(parent, parent.bean.getClassLoc());
-            
-            
-            sp.setPrivious(this);
-            return sp;
-        } else {
-            DescriptorFile dis = new DescriptorFile(parent, parent.bean.getServiceXML());
-            parent.setEnable(true, true, false, true);
-            dis.setPrivious(this);
-            return dis;
-        }
-
-
-//        OutPage op = new OutPage(parent);
-//        op.setPrivious(this);
-//        return op;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-}
-
-class ResourceChooserLayout implements LayoutManager {
-
-    public ResourceChooserLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 587 + insets.left + insets.right;
-        dim.height = 278 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-        return dim;
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 16, insets.top + 16, 100, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 16, 300, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 530, insets.top + 16, 60, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 430, insets.top + 16, 90, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 48, 300, 72);
-        }
-        c = parent.getComponent(5);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 16, insets.top + 128, 100, 24);
-        }
-        c = parent.getComponent(6);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 128, 300, 24);
-        }
-        c = parent.getComponent(7);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 430, insets.top + 128, 90, 24);
-        }
-        c = parent.getComponent(8);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 530, insets.top + 128, 60, 24);
-        }
-        c = parent.getComponent(9);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 120, insets.top + 160, 300, 72);
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/WSDLFileSelectionPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/WSDLFileSelectionPage.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/WSDLFileSelectionPage.java	(revision 0)
@@ -0,0 +1,207 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+import org.apache.axis2.tools.idea.WSDLFileFilter;
+import org.apache.ideaplugin.bean.ArchiveBean;
+
+import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import javax.wsdl.xml.WSDLReader;
+import javax.wsdl.factory.WSDLFactory;
+import javax.wsdl.WSDLException;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+import java.io.File;
+
+/**
+ * Created by IntelliJ IDEA.
+ * User: shivantha
+ * Date: 16/07/2007
+ * Time: 11:20:00
+ * To change this template use File | Settings | File Templates.
+ */
+public class WSDLFileSelectionPage extends WizardPanel {
+
+    private JLabel lblWSDL;
+    private JCheckBox chkBoxSkip;
+    private JCheckBox chkBoxSelect;
+    private JTextField txtWSDL;
+    private JButton btnBrowse;
+    private JButton btnHint;
+    private JTextArea txaHint;
+    private boolean flag=false;
+    private String hint ="";
+    private final JFileChooser fileChooser=new JFileChooser();
+    private ArchiveBean archiveBean;     
+    /**
+     * Constructor
+     * @param wizardComponents
+     */
+    public WSDLFileSelectionPage(WizardComponents wizardComponents, ArchiveBean archiveBean){
+        super(wizardComponents,"Axis2 Idea Plugin Service Archiver Creator Wizards");
+        setPanelTopTitle("Service Archiver");
+        setPanelBottomTitle("Add the WSDL file");
+        this.archiveBean=archiveBean;
+        init();
+    }
+    private void init(){
+        txaHint =new JTextArea();
+        txaHint.setBorder(null);
+        txaHint.setFocusable(false);
+        txaHint.setLineWrap(true);
+        txaHint.setWrapStyleWord(true);
+        txaHint.setOpaque(false);
+
+        btnHint =new JButton("Hint >>");
+        btnHint.setBorder(new EmptyBorder(new Insets(0,0,0,0)));
+
+        lblWSDL=new JLabel("Select a WSDL file");
+
+        chkBoxSkip =new JCheckBox("Skip WSDL",true);
+
+        chkBoxSelect =new JCheckBox("Select WSDL",false) ;
+
+        ButtonGroup  buttonGroup= new  ButtonGroup();
+        buttonGroup.add(chkBoxSkip );
+        buttonGroup.add(chkBoxSelect );
+
+        txtWSDL=new JTextField();
+
+        btnBrowse=new JButton("Browse..");
+
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(true);
+        setFinishButtonEnabled(false);
+        this.setLayout(new GridBagLayout());
+
+        this.add(chkBoxSkip
+        , new GridBagConstraints(0, 0, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+        , GridBagConstraints.WEST , GridBagConstraints.NONE
+        , new Insets(5, 10, 0,10), 0, 0));
+        chkBoxSkip .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                update();
+            }
+        });
+
+        this.add(chkBoxSelect
+        , new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+        , GridBagConstraints.WEST  , GridBagConstraints.NONE
+        , new Insets(5, 10, 0,0), 0, 0));
+        chkBoxSelect.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                update();
+            }
+        });
+        this.add(lblWSDL
+        , new GridBagConstraints(0, 2, 1, 1, 0.1, 0.0
+        , GridBagConstraints.WEST  , GridBagConstraints.NONE
+        , new Insets(5, 10, 0,0), 0, 0));
+
+         this.add(txtWSDL
+        , new GridBagConstraints(1, 2, 1, 1, 1.0, 0.0
+        , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+        , new Insets(5, 10, 0, 0), 0, 0));
+
+         this.add(btnBrowse
+        , new GridBagConstraints(2, 2, 1, 1, 0.1, 0.0
+        , GridBagConstraints.CENTER  , GridBagConstraints.NONE
+        , new Insets(5, 10, 0, 10), 0, 0));
+
+        btnBrowse.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                browseWSDLFile();
+                checkWSDLFile();
+                update();
+            }
+        });
+
+        this.add(btnHint
+                     , new GridBagConstraints(0, 3, 1, 1, 0.1,0.0
+                     , GridBagConstraints.WEST , GridBagConstraints.NONE
+                     , new Insets(5, 10, 0, 10), 0, 0));
+             btnHint.addActionListener(new ActionListener()  {
+                 public void actionPerformed(ActionEvent e) {
+                     if(flag){
+                         btnHint.setText("Hint >>");
+                         txaHint.setText("");
+                         flag=false;
+                     }else{
+                         btnHint.setText("Hint <<");
+                         txaHint.setText(hint);
+                         flag=true;
+                     }
+                     update();
+                 }
+             });
+
+             this.add(txaHint
+                     , new GridBagConstraints(0, 4, GridBagConstraints.REMAINDER, 1, 0.1,1.0
+                     , GridBagConstraints.CENTER , GridBagConstraints.BOTH
+                     , new Insets(5, 10, 10, 10), 0, 0));
+
+
+    }
+
+     public void back() {
+          switchPanel(CodegenFrame.PANEL_FIRST_C);
+    }
+
+    public void next() {
+         switchPanel(CodegenFrame.PANEL_THIRD_C );
+    }
+
+    public void update(){
+        setChangeEnabled();
+        fillBean();
+        setPageComplete(true);
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(true);
+    }
+     public  int getPageType() {
+        return  WizardPanel.SERVICE_ARCHIVE_TYPE;
+    }
+
+    private void setChangeEnabled(){
+        if(chkBoxSkip.isSelected()){
+            lblWSDL.setEnabled(false);
+            txtWSDL .setEnabled(false);
+            btnBrowse.setEnabled(false);
+        }else{
+            lblWSDL.setEnabled(true);
+            txtWSDL.setEnabled(true);
+            btnBrowse.setEnabled(true);
+        }
+    }
+
+    private void fillBean(){
+        if(chkBoxSelect.isSelected()){
+            if(!txtWSDL.getText().equals(""))
+            archiveBean.addWsdls(new File(txtWSDL.getText()));
+        }
+    }
+    private void checkWSDLFile(){
+        if (txtWSDL.getText().equals("") ) {
+            try{
+                WSDLReader reader = WSDLFactory.newInstance().newWSDLReader();
+                reader.readWSDL(txtWSDL.getText().trim()) ;
+            }catch(WSDLException e1) {
+                txtWSDL.setText("");
+                JOptionPane.showMessageDialog(btnBrowse , "The file selected is not a valid WSDLfile",
+                        "Axis2 ServiceArchieve creation", JOptionPane.ERROR_MESSAGE);
+            }
+        }
+    }
+    private void browseWSDLFile(){
+        fileChooser.setFileFilter(new WSDLFileFilter());
+        fileChooser.setCurrentDirectory(archiveBean.getClassLoc());
+        int returnVal = fileChooser.showOpenDialog(btnBrowse);
+        if (returnVal == JFileChooser.APPROVE_OPTION) {
+            File file = fileChooser.getSelectedFile();
+            txtWSDL.setText(file.getAbsolutePath());
+        }
+    }
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/DescriptorFile.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/DescriptorFile.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/DescriptorFile.java	(working copy)
@@ -1,127 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.ModuleDialog;
-import org.apache.ideaplugin.ParameterDialog;
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 22, 2005
- * Time: 11:42:16 PM
- */
-public class DescriptorFile extends JPanel implements ObjectKeeper, ActionListener {
-
-    protected JTextArea desArea;
-    protected JButton butaddpara;
-    protected JButton addModuleRef;
-    protected ServiceArciveFrame parent;
-    protected Insets insets;
-    protected JScrollPane sp;
-
-    protected ParameterDialog pradialog;
-    protected ModuleDialog moduledialog;
-    private JPanel previous;
-
-    public DescriptorFile(ServiceArciveFrame parent, String XML) {
-        this.parent = parent;
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        this.setLayout(null);
-        insets = parent.getInsets();
-
-        desArea = new JTextArea(XML);
-        sp = new JScrollPane(desArea);
-        sp.setAutoscrolls(true);
-        add(sp);
-        sp.setBounds(insets.left + 8, insets.top + 26, 560, 190);
-
-        butaddpara = new JButton("+Parameter ");
-        add(butaddpara);
-        butaddpara.addActionListener(this);
-        butaddpara.setBounds(insets.left + 10, insets.top + 2, 120, 20);
-
-        addModuleRef = new JButton("+ModuleRef ");
-        add(addModuleRef);
-        addModuleRef.addActionListener(this);
-        addModuleRef.setBounds(insets.left + 135, insets.top + 2, 120, 20);
-
-        pradialog = new ParameterDialog();
-        moduledialog = new ModuleDialog();
-        setSize(getPreferredSize());
-
-
-    }
-
-
-    public void fillBean(ArchiveBean bean) {
-        bean.setServiceXML(desArea.getText());
-    }
-
-    //to keep a refernce to next panel
-    public void setNext(JPanel next) {
-    }
-
-    public JPanel getNext() {
-        OutPage out = new OutPage(parent);
-        parent.setEnable(true, true, false, true);
-        out.setPrivious(this);
-        return out;
-    }
-
-    //to keep a refernce to previous panel
-    public void setPrivious(JPanel privious) {
-        this.previous = privious;
-    }
-
-    public JPanel getPrivious() {
-        return this.previous;
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butaddpara) {
-            String str = "";
-            int cusrpos = desArea.getCaretPosition();
-            pradialog.showDialog(str, desArea, cusrpos);
-            pradialog.hideForm();
-        } else if (obj == addModuleRef) {
-            String str = "";
-            int cusrpos = desArea.getCaretPosition();
-            moduledialog.showDialog(str, desArea, cusrpos);
-            moduledialog.hideForm();
-        }
-    }
-
-    public String getTopLable() {
-        return "Edit service descriptor";
-    }
-
-    public String getLable() {
-        return "Edit description file add parameters and module references";
-    }
-
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java	(working copy)
@@ -1,202 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import com.intellij.openapi.project.Project;
-import org.apache.axis2.tools.wizardframe.CodegenFrame;
-import org.apache.axis2.tools.wizardframe.CodegenFrame;
-
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 24, 2005
- * Time: 10:41:41 AM
- */
-public class Axi2PluginPage extends JFrame implements ActionListener {
-    ButtonGroup cbg;
-    JRadioButton service;
-    JRadioButton codeGen;
-    JButton butOK;
-    JButton butCancle;
-    JPanel imglbl;
-    Project project;
-    CodegenFrame codegenFrame;
-
-    private int defaultCloseOperation;
-
-    public Axi2PluginPage() {
-        setBackground(Color.white);
-        Dimension dim = getPreferredSize();
-        setSize(dim);
-        setBounds(200, 200, dim.width, dim.height);
-        setBounds(200, 200, dim.width, dim.height);
-        Axi2PluginPageLayout customLayout = new Axi2PluginPageLayout();
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        getContentPane().setLayout(customLayout);
-        setTitle("Axis2 Plugin");
-        cbg = new ButtonGroup();
-
-        /*Create a service archive Radio Button  */
-
-        service = new JRadioButton("Axis2 Aervice Archive", true);
-        service.setToolTipText("Hepls package classes, libs and WSDLs to create a archive that can be deployed in Axis2");
-        cbg.add(service);
-        getContentPane().add(service);
-
-        /*Create a Code code generation Radio Button */
-
-        codeGen = new JRadioButton("Axis2 Code Generator", false);
-        codeGen.setToolTipText("you can generate a WSDL from a java source file or java code from a WSDL ");
-        cbg.add(codeGen);
-        getContentPane().add(codeGen);
-
-
-
-        butOK = new JButton("OK");
-        butOK.addActionListener(this);
-        getContentPane().add(butOK);
-
-        butCancle = new JButton("Cancel");
-        butCancle.addActionListener(this);
-        getContentPane().add(butCancle);
-
-        imglbl = new LogoPage();
-        getContentPane().add(imglbl);
-
-    }
-
-
-
-    public void setDefaultCloseOperation(int operation) {
-        if (operation != DO_NOTHING_ON_CLOSE &&
-                operation != HIDE_ON_CLOSE &&
-                operation != DISPOSE_ON_CLOSE &&
-                operation != EXIT_ON_CLOSE) {
-            throw new IllegalArgumentException("defaultCloseOperation must be one of: DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE, DISPOSE_ON_CLOSE, or EXIT_ON_CLOSE");
-        }
-        if (this.defaultCloseOperation != operation) {
-            if (operation == EXIT_ON_CLOSE) {
-                SecurityManager security = System.getSecurityManager();
-                if (security != null) {
-                    security.checkExit(0);
-                }
-            }
-            int oldValue = this.defaultCloseOperation;
-            this.defaultCloseOperation = operation;
-            firePropertyChange("defaultCloseOperation", oldValue, operation);
-        }
-    }
-
-    public void showUI() {
-        pack();
-        this.setVisible(true);
-        show();
-    }
-
-    public void setProject(Project project) {
-
-        this.project = project;
-    }
-
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == butCancle) {
-            this.hide();
-            setVisible(false);
-        } else if (obj == butOK) {
-            this.hide();
-            setVisible(false);
-            if (codeGen.isSelected()) {
-                codegenFrame = new CodegenFrame();
-                codegenFrame.setProject(project);
-		codegenFrame.setVisible(true);
-                codegenFrame .setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-            }else{
-                ServiceArciveFrame window = new ServiceArciveFrame();
-                window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-                window.setResizable(false);
-                window.setTitle("Service Archive creation");
-                window.show();
-            }
-        }
-
-    }
-
-    public JComponent getRootComponent() {
-        return this.getRootPane();
-    }
-}
-
-class Axi2PluginPageLayout implements LayoutManager {
-
-    public Axi2PluginPageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 320 + insets.left + insets.right;
-        dim.height = 264 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 104, 296, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 136, 296, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 130, insets.top + 210, 80, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 215, insets.top + 210, 80, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left, insets.top, 320, 80);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/BottomPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/BottomPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/BottomPanel.java	(working copy)
@@ -1,174 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import org.apache.ideaplugin.bean.ArchiveBean;
-import org.apache.ideaplugin.bean.ObjectKeeper;
-
-import javax.swing.*;
-import java.awt.*;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 18, 2005
- * Time: 12:01:58 PM
- */
-public class BottomPanel extends JPanel implements ActionListener {
-    JButton butBack;
-    JButton butNext;
-    JButton btnFinsh;
-    JButton btnCanclel;
-    ServiceArciveFrame parent;
-    private ArchiveBean bean;
-
-    private JPanel currentPanel = null;
-
-    public BottomPanel(JPanel currPanel, ServiceArciveFrame parent, ArchiveBean bean) {
-        BottomPanelLayout customLayout = new BottomPanelLayout();
-
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-        this.parent = parent;
-        this.bean = bean;
-
-        butBack = new JButton("< Back");
-        add(butBack);
-        butBack.addActionListener(this);
-
-        butNext = new JButton("Next >");
-        butNext.setEnabled(false);
-        add(butNext);
-        butNext.addActionListener(this);
-
-        btnFinsh = new JButton("Finish");
-        btnFinsh.setEnabled(false);
-        add(btnFinsh);
-        btnFinsh.addActionListener(this);
-
-        btnCanclel = new JButton("Cancel");
-        add(btnCanclel);
-        btnCanclel.addActionListener(this);
-
-        this.currentPanel = currPanel;
-
-        if (((ObjectKeeper) currentPanel).getPrivious() == null) {
-            butBack.setEnabled(false);
-        }
-        setSize(getPreferredSize());
-    }
-
-    public void setEnable(boolean back, boolean next, boolean finish, boolean cancel) {
-        butBack.setEnabled(back);
-        butNext.setEnabled(next);
-        btnFinsh.setEnabled(finish);
-        btnCanclel.setEnabled(cancel);
-    }
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj = e.getSource();
-        if (obj == btnCanclel) {
-            parent.setVisible(false);
-        }
-        if (obj == butNext) {
-            ((ObjectKeeper) currentPanel).fillBean(bean);
-            if (currentPanel instanceof SelectPanel){
-               ((SelectPanel)currentPanel).process(); 
-            }
-            if(currentPanel instanceof FirstFrame){
-                parent.setEnable(true, false, false, true);
-            }
-            currentPanel = ((ObjectKeeper) currentPanel).getNext();
-
-
-            parent.Next(currentPanel);
-
-        } else if (obj == btnFinsh) {
-            ((ObjectKeeper) currentPanel).fillBean(bean);
-            try {
-                bean.finsh();
-            } catch (Exception e1) {
-               JOptionPane.showMessageDialog(parent, "An error occured while creating the service archieve",
-                    "Error!", JOptionPane.ERROR_MESSAGE);
-            parent.dispose();
-            }
-
-            JOptionPane.showMessageDialog(parent, "Service creation successful!",
-                    "Axis2 Service creation", JOptionPane.INFORMATION_MESSAGE);
-            parent.dispose();
-
-        } else if (obj == butBack) {
-            currentPanel = ((ObjectKeeper) currentPanel).getPrivious();
-            parent.Back(currentPanel);
-            if (currentPanel instanceof FirstFrame) {
-                parent.setEnable(false, true, false, true);
-            }
-        }
-    }
-}
-
-class BottomPanelLayout implements LayoutManager {
-
-    public BottomPanelLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 606 + insets.left + insets.right;
-        dim.height = 64 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 176, insets.top + 24, 80, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 260, insets.top + 24, 80, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 344, insets.top + 24, 80, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 426, insets.top + 24, 80, 24);
-        }
-    }
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLFileSelectionPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLFileSelectionPage.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLFileSelectionPage.java	(revision 0)
@@ -0,0 +1,221 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+import org.apache.ideaplugin.bean.ArchiveBean;
+import org.apache.ideaplugin.bean.XmlFileFilter;
+
+import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+import java.io.File;
+import java.io.ByteArrayOutputStream;
+import java.io.FileInputStream;
+import java.io.IOException;
+
+/**
+ * Created by IntelliJ IDEA.
+ * User: shivantha
+ * Date: 17/07/2007
+ * Time: 09:45:03
+ * To change this template use File | Settings | File Templates.
+ */
+public class ServiceXMLFileSelectionPage extends WizardPanel {
+    /**
+     * varialbales
+     */
+    private JLabel lblXmlLocation;
+    private JTextField txtServiceXml;
+    private JButton butSelect;
+    private JCheckBox chkBoxIncludeXml;
+    private JButton btnHint;
+    private JTextArea txaHint;
+    private boolean flag=false;
+    private String hint ="";
+    private final JFileChooser fileChooser=new JFileChooser();
+    private ArchiveBean archiveBean;
+    private String value;
+    /**
+     * Constructor
+     * @param wizardComponents
+     */
+    public ServiceXMLFileSelectionPage(WizardComponents wizardComponents,ArchiveBean archiveBean ) {
+        super(wizardComponents, "Axis2 Idea Plugin Service Archiver Creator Wizards");
+        setPanelTopTitle("Service Archiver");
+        setPanelBottomTitle("Select the service.xml file");
+        this.archiveBean=archiveBean;
+        init();
+    }
+
+    /**
+     * initiate panel
+     */
+    private void init(){
+
+        txaHint =new JTextArea();
+        txaHint.setBorder(null);
+        txaHint.setFocusable(false);
+        txaHint.setLineWrap(true);
+        txaHint.setWrapStyleWord(true);
+        txaHint.setOpaque(false);
+
+        btnHint =new JButton("Hint >>");
+        btnHint.setBorder(new EmptyBorder(new Insets(0,0,0,0)));
+        lblXmlLocation=new JLabel("set the Service XML file");
+        lblXmlLocation.setEnabled(false);
+        txtServiceXml =new JTextField();
+        txtServiceXml.setEnabled(false);
+        butSelect=new JButton("Browse..");
+        butSelect.setEnabled(false);
+        chkBoxIncludeXml = new JCheckBox("Generate service xml automatically", true) ;
+
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(false);
+        setFinishButtonEnabled(false);
+        setPageComplete(false);
+
+        this.setLayout(new GridBagLayout());
+
+
+         this.add(chkBoxIncludeXml
+                , new GridBagConstraints(0, 0, GridBagConstraints.REMAINDER, 1,0.0, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 1,1), 0, 0));
+        chkBoxIncludeXml.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                setChangeEnabled();
+                update();
+            }
+        });
+        this.add(lblXmlLocation
+                , new GridBagConstraints(0, 1, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,0), 0, 0));
+
+        this.add(txtServiceXml
+                , new GridBagConstraints(1, 1, GridBagConstraints.RELATIVE , 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 0, 0), 0, 0));
+
+        txtServiceXml.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                update();
+            }
+        });
+
+        this.add(butSelect
+                , new GridBagConstraints(2, 1, 1, 1, 0.1, 0.0
+                , GridBagConstraints.CENTER , GridBagConstraints.NONE
+                , new Insets(5, 0, 1,10), 0, 0));
+
+        butSelect.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                browseXmlFile();
+                setNextButtonEnabled(true);
+                setPageComplete(true);
+                update();
+            }
+        });
+        this.add(btnHint,
+                new GridBagConstraints(0, 2, GridBagConstraints.REMAINDER, 1, 0.1,0.0
+                        , GridBagConstraints.WEST , GridBagConstraints.NONE
+                        , new Insets(5, 10, 0, 10), 0, 0));
+        btnHint.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                if(flag){
+                    btnHint.setText("Hint >>");
+                    txaHint.setText("");
+                    flag=false;
+                }else{
+                    btnHint.setText("Hint <<");
+                    txaHint.setText(hint);
+                    flag=true;
+                }
+                update();
+            }
+        });
+
+        this.add(txaHint
+                , new GridBagConstraints(0, 3, GridBagConstraints.REMAINDER, 1, 0.1,1.0
+                , GridBagConstraints.CENTER , GridBagConstraints.BOTH
+                , new Insets(5, 10, 10, 10), 0, 0));
+
+    }
+
+    //next
+    public void next() {
+        if(!chkBoxIncludeXml.isSelected()){
+            switchPanel(CodegenFrame.PANEL_LAST_C);
+        } else{
+            switchPanel(CodegenFrame.PANEL_LOAD_C);
+        }
+        setNextButtonEnabled(false);
+
+    }
+    //back
+    public void back() {
+        switchPanel(CodegenFrame.PANEL_THIRD_C );
+    }
+    //update
+    public void update() {
+        fillBean();
+        setPageComplete(true);
+        setNextButtonEnabled(true);
+    }
+
+    //get page type
+    public  int getPageType() {
+        return  WizardPanel.SERVICE_ARCHIVE_TYPE  ;
+    }
+
+    private void browseXmlFile(){
+        fileChooser.setFileFilter(new XmlFileFilter() );
+        fileChooser.setCurrentDirectory(archiveBean.getClassLoc());
+        int returnVal= fileChooser.showOpenDialog(butSelect);
+        if(returnVal == JFileChooser .APPROVE_OPTION ){
+            File xmlfile = fileChooser.getSelectedFile();
+            txtServiceXml.setText(xmlfile.getAbsolutePath());
+            byte[] buf = new byte[1024];
+            int read;
+            ByteArrayOutputStream out;
+            try {
+                FileInputStream in = new FileInputStream(xmlfile);
+
+                out = new ByteArrayOutputStream();
+                while ((read = in.read(buf)) > 0) {
+                    out.write(buf, 0, read);
+                }
+                in.close();
+                value = new String(out.toByteArray());
+            } catch (IOException e1) {
+            }
+
+        } else {
+            txtServiceXml.setText("");
+        }
+    }
+    private void setChangeEnabled(){
+        if(chkBoxIncludeXml.isSelected()){
+            lblXmlLocation.setEnabled(false);
+            txtServiceXml .setEnabled(false);
+            butSelect.setEnabled(false);
+        }else{
+            lblXmlLocation.setEnabled(true);
+            txtServiceXml.setEnabled(true);
+            butSelect.setEnabled(true);
+        }
+    }
+    private void fillBean(){
+        if(!chkBoxIncludeXml.isSelected()){
+            if(value!=null)
+                archiveBean.setServiceXML(value);
+        }
+
+    }
+    public boolean isIncludeXml(){
+        return this.chkBoxIncludeXml.isSelected();
+    }
+}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLEditPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLEditPage.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLEditPage.java	(revision 0)
@@ -0,0 +1,193 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+import org.apache.ideaplugin.bean.ArchiveBean;
+import org.apache.ideaplugin.bean.ParameterObj;
+import org.apache.ideaplugin.bean.ValidateXMLFile;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+import java.awt.event.MouseEvent;
+import java.awt.event.MouseListener;
+
+public class ServiceXMLEditPage extends WizardPanel {
+    protected JTextArea desArea;
+    protected JButton addpara;
+    protected JButton addModuleRef;
+    protected JButton validateXML;
+    private JButton reGenerate;
+    protected JScrollPane sp;
+    private JLabel lblerror;
+     private ArchiveBean archiveBean;
+
+     public ServiceXMLEditPage(WizardComponents wizardComponents, ArchiveBean archiveBean){
+        super(wizardComponents, "Axis2 Idea Plugin Service Archiver Creator Wizards");
+        setPanelTopTitle("Service Archiver");
+        setPanelBottomTitle("Edit the generated service.xml");
+          this.archiveBean=archiveBean;
+        init();
+    }
+    public void init(){
+        ParameterDialog.initialize(addpara, "Parameter Dialog");
+        addpara = new JButton("+Parameter ");
+        addpara.setEnabled(false);
+        addModuleRef = new JButton("+ModuleRef ");
+        addModuleRef.setEnabled(false);
+        validateXML =new JButton("Validate XML");
+        reGenerate=new JButton("ReGenerate XML");
+        lblerror=new JLabel();
+        desArea = new JTextArea("");
+        sp = new JScrollPane(desArea);
+        sp.setAutoscrolls(true);
+        this.setLayout(new GridBagLayout());
+        setDefaultEnabled();
+
+         this.add(addpara
+                , new GridBagConstraints(0, 0, 1, 1, 1.0, 0.0
+                , GridBagConstraints.CENTER , GridBagConstraints.NONE
+                , new Insets(5, 1, 0, 10), 0, 0));
+
+       addpara.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                ParameterObj selectedName=ParameterDialog.showDialog("Parameter Dialog");
+                setParameter(selectedName);
+                setEnabledToNotValidate();
+                update();
+            }
+        });
+
+        this.add(addModuleRef
+                , new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.NONE
+                , new Insets(5, 10, 1,10), 0, 0));
+
+        addModuleRef.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                String moduleName = (String)JOptionPane.showInputDialog(
+                        addModuleRef,
+                        "Module Name","Module Dialog",
+                        JOptionPane.PLAIN_MESSAGE);
+                setModule(moduleName);
+                setEnabledToNotValidate();
+                update();
+            }
+        });
+         this.add(validateXML
+                , new GridBagConstraints(2, 0, 1, 1, 1.0, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.NONE
+                , new Insets(5, 10, 1,10), 0, 0));
+
+        validateXML.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                if(new ValidateXMLFile().Validate("<?xml version=\"1.0\"?>\n"+desArea.getText()))  {
+                    setEnabledToValidate();
+                    lblerror.setText("Service XML file validation successfully");
+                } else{
+                    setEnabledToNotValidate();
+                    lblerror.setText("Error! Service XML file validation Error");
+            }
+                update();
+            }
+        });
+         this.add(reGenerate
+                , new GridBagConstraints(3, 0, 1, 1, 1.0, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.NONE
+                , new Insets(5, 10, 1,10), 0, 0));
+
+        reGenerate.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                desArea.setText("");
+                desArea.setText(archiveBean.getServiceXML());
+                update();
+            }
+        });
+        this.add(sp
+                , new GridBagConstraints(0, 1,GridBagConstraints.REMAINDER, 1, 1.0, 1.0
+                , GridBagConstraints.WEST , GridBagConstraints.BOTH
+                , new Insets(5, 10, 10,10), 0, 0));
+        desArea.addMouseListener(new MouseListener(){
+            public void mouseClicked(MouseEvent e){
+                addpara.setEnabled(true);
+                addModuleRef.setEnabled(true);
+            }
+            public void mousePressed(MouseEvent e){}
+            public void mouseReleased(MouseEvent e){}
+            public void mouseEntered(MouseEvent e){}
+            public void mouseExited(MouseEvent e){}
+        });
+        this.add(lblerror
+                , new GridBagConstraints(0,2,GridBagConstraints.REMAINDER, 1, 1.0,0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 20, 10,10), 0, 0));
+
+    }
+
+    //next
+    public void next() {
+        if(!archiveBean.getServiceXML().equals("") ){
+           archiveBean.setServiceXML(desArea.getText());
+         }
+            switchPanel(CodegenFrame.PANEL_LAST_C );
+
+    }
+    //back
+    public void back() {
+        switchPanel(CodegenFrame.PANEL_LOAD_C );
+    }
+    //update
+    public void update() {
+
+    }
+
+    //get page type
+    public  int getPageType() {
+        return  WizardPanel.SERVICE_ARCHIVE_TYPE;
+    }
+
+    public void setDescription(String descrip){
+        this.desArea.setText(descrip);
+        update();
+    }
+
+    private void setEnabledToValidate(){
+        setNextButtonEnabled(true);
+        reGenerate.setEnabled(false);
+        addpara.setEnabled(false);
+        addModuleRef.setEnabled(false);
+        setPageComplete(true);
+    }
+    private void setEnabledToNotValidate(){
+        reGenerate.setEnabled(true);
+        setNextButtonEnabled(false);
+        setPageComplete(false);
+        addpara.setEnabled(false);
+        addModuleRef.setEnabled(false);
+    }
+    public void setDefaultEnabled(){
+        lblerror.setText("");
+        addpara.setEnabled(false);
+        addModuleRef.setEnabled(false);
+        validateXML.setEnabled(true);
+        reGenerate.setEnabled(false);
+        setNextButtonEnabled(false);
+    }
+    private void setParameter(ParameterObj obj){
+       int position = desArea.getCaretPosition();
+        System.out.println(desArea.getLineCount());
+        System.out.println(desArea.getCaretPosition());
+        String str = "      <parameter name=\"" + obj.getName() + "\" locked=\"false\">"
+                            + obj.getValue() +
+                            "</parameter>\n";
+        desArea.insert(str, position + 1);
+    }
+    private void setModule(String module){
+        int position = desArea.getCaretPosition();
+        String str = "      <module ref=\"" + module + "\" />\n";
+        desArea .insert(str, position + 1);
+    }
+}
+
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLGenerationPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLGenerationPage.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ServiceXMLGenerationPage.java	(revision 0)
@@ -0,0 +1,338 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+import org.apache.ideaplugin.bean.ArchiveBean;
+import org.apache.ideaplugin.bean.OperationObj;
+import org.apache.ideaplugin.bean.ServiceObj;
+import org.apache.ideaplugin.bean.ClassFileFilter;
+import org.apache.ideaplugin.frames.table.ArchiveTableModel;
+
+import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import javax.swing.table.TableModel;
+import java.util.HashMap;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+import java.lang.reflect.Method;
+import java.net.URL;
+import java.net.URLClassLoader;
+import java.net.MalformedURLException;
+import java.io.File;
+
+
+public class ServiceXMLGenerationPage extends WizardPanel {
+
+    private JTextField txtServiceName;
+    private JTextField txtClassName;
+    private JCheckBox chkBoxSearchMethod;
+    private JButton btnLoad;
+    private JButton btnBrowse;
+    private JTable table;
+    private JLabel lblTable;
+    private JScrollPane scrollPane;
+    private HashMap operations;
+    private String fileName;
+    private int count = 1;
+    private ArrayList servicelsit;
+    private String sgXMl;
+    private final JFileChooser fileChooser=new JFileChooser();
+    private ArchiveBean archiveBean;
+    /**
+     * Constructor
+     * @param wizardComponents
+     */
+    public ServiceXMLGenerationPage(WizardComponents wizardComponents, ArchiveBean archiveBean){
+        super(wizardComponents, "Axis2 Idea Plugin Service Archiver Creator Wizards");
+        setPanelTopTitle("Service Archiver");
+        setPanelBottomTitle("Service XML Generation");
+        this.archiveBean=archiveBean;
+        init();
+    }
+    private void init(){
+       
+        txtServiceName =new JTextField();
+        txtClassName =new JTextField();
+
+        btnBrowse=new JButton("Browse");
+        btnLoad =new JButton("Load");
+
+        chkBoxSearchMethod=new JCheckBox("Search declared method only",true);
+
+        lblTable=new JLabel("Mark operation you do not want to publish ");
+        operations = new HashMap();
+        ArchiveTableModel myModel=new ArchiveTableModel(operations);
+        table=new JTable(myModel);
+        table.setOpaque(true);
+        table.setBackground(getBackground());
+        table.setShowGrid(true);
+        table.setSize(getPreferredSize());
+
+        scrollPane =new JScrollPane(table);
+        scrollPane.setBorder(new EmptyBorder(0,0,0,0));
+        scrollPane.setSize(table.getSize());
+        scrollPane.setOpaque(true);
+        scrollPane.setBackground(getBackground());
+        scrollPane.getViewport().setBackground(getBackground());
+        scrollPane.setViewportBorder(new EmptyBorder(0,0,0,0));
+
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(false);
+        setFinishButtonEnabled(false);
+        setPageComplete(false);
+        this.setLayout(new GridBagLayout());
+
+        this.add(new JLabel("Class Name")
+                , new GridBagConstraints(0, 0, 1, 1, 0.1, 0.0
+                , GridBagConstraints.NORTHWEST   , GridBagConstraints.NONE
+                , new Insets(5, 10, 0, 0), 0, 0));
+
+        this.add(txtClassName
+                , new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0
+                , GridBagConstraints.NORTHWEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0, 0), 0, 0));
+        this.add(btnBrowse
+                , new GridBagConstraints(2, 0, 1, 1, 0.1, 0.0
+                , GridBagConstraints.NORTH  , GridBagConstraints.NONE
+                , new Insets(5, 1, 1, 1), 0, 0));
+        btnBrowse .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                browseClassFile();
+                update();
+            }
+        });
+        this.add(btnLoad
+                , new GridBagConstraints(3, 0, 1, 1, 0.1, 0.0
+                , GridBagConstraints.NORTH  , GridBagConstraints.NONE
+                , new Insets(5, 1, 1, 10), 0, 0));
+
+        btnLoad .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                updateTable();
+                update();
+            }
+        });
+         this.add(new JLabel("Service Name")
+                , new GridBagConstraints(0, 1, 1, 1, 0.1, 0.0
+                , GridBagConstraints.NORTHWEST  , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,0), 0, 0));
+         this.add(txtServiceName
+                , new GridBagConstraints(1, 1, 1, 1, 1.0, 0.0
+                , GridBagConstraints.NORTHWEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 0, 0, 0), 0, 0));
+
+        this.add(chkBoxSearchMethod
+                , new GridBagConstraints(0, 2, GridBagConstraints.RELATIVE, 1, 0.0, 0.0
+                , GridBagConstraints.NORTHWEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0, 10), 0, 0));
+         chkBoxSearchMethod .addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                updateTable();
+                update();
+            }
+        });
+        this.add(lblTable
+                , new GridBagConstraints(0, 3, GridBagConstraints.RELATIVE, 1, 0.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0, 10), 0, 0));
+
+       this.add(scrollPane
+                        , new GridBagConstraints(0, 4, GridBagConstraints.REMAINDER , 1, 1.0, 1.0
+                        , GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH
+                        , new Insets(5, 10, 10, 10), 0, 0));
+
+        setPageComplete(true);
+    }
+
+
+    public void back() {
+        switchPanel(CodegenFrame.PANEL_FOURTH_C );
+    }
+
+    public void next() {
+        setNextButtonEnabled(false);        
+        checkautoGeneration();
+        switchPanel(CodegenFrame.PANEL_OPTION_C );
+        ((ServiceXMLEditPage)getWizardComponents().getWizardPanel(CodegenFrame.PANEL_OPTION_C )).setDescription(archiveBean.getServiceXML());
+        ((ServiceXMLEditPage)getWizardComponents().getWizardPanel(CodegenFrame.PANEL_OPTION_C )).setDefaultEnabled();
+    }
+
+    public void update(){
+
+    }
+    public  int getPageType() {
+        return  WizardPanel.SERVICE_ARCHIVE_TYPE;
+    }
+
+
+    private void updateTable() {
+        //get a URL from the class file location
+        try {
+            String classFileLocation = archiveBean.getClassLoc().getPath();
+            URL classFileURL = new File(classFileLocation).toURL();
+
+           ArrayList listofURLs = new ArrayList();
+           listofURLs.add(classFileURL);
+
+            //get the libraries from the lib page and load it
+            ArrayList libList=archiveBean.getLibs();
+            String[] libFileList=new String[libList.size()];
+            for (int i = 0; i < libList.size(); i++) {
+                libFileList[i] =  (String )libList.get(i);
+            }
+
+            if (libFileList!=null){
+                int count = libFileList.length;
+                for (int i=0;i<count;i++){
+                    listofURLs.add(new File(libFileList[i]).toURL());
+                }
+            }
+            txtServiceName.setText("MyService" + count);
+            ClassLoader loader = new URLClassLoader((URL[])listofURLs.toArray(new URL[listofURLs.size()]));
+            Class clazz = Class.forName(fileName ,true,loader);
+            Method[] methods = null;
+            if (chkBoxSearchMethod.isSelected()){
+                methods = clazz.getDeclaredMethods();
+            }else{
+                methods = clazz.getMethods();
+            }
+
+            int methodCount = methods.length;
+            if (methodCount > 0) {
+                try {
+                    table.removeAll();
+                    table.setVisible(true);
+                    operations.clear();
+                } catch (Exception e1) {
+                }
+                for (int i = 0 ; i < methodCount; i++){
+                    Method method = methods[i];
+                    OperationObj operationobj = new OperationObj(method.getName(),
+                            method.getReturnType().toString(),
+                            new Integer(method.getParameterTypes().length), new Boolean(true));
+                    operations.put(method.getName(), operationobj);
+                }
+
+                ArchiveTableModel myModel=new ArchiveTableModel(operations);
+                table.setModel(myModel);
+                scrollPane.repaint();
+                this.repaint();
+                setNextButtonEnabled(true);
+            }
+
+        } catch (MalformedURLException e) {
+            setNextButtonEnabled(false);
+           JOptionPane.showMessageDialog(btnLoad, "The specified file is not a valid java class",
+                    "Error!", JOptionPane.ERROR_MESSAGE);
+        } catch (ClassNotFoundException e) {
+            setNextButtonEnabled(false);
+           JOptionPane.showMessageDialog(btnLoad, "The specified file is not a valid java class",
+                    "Error!", JOptionPane.ERROR_MESSAGE);
+        }
+    }
+
+    private void browseClassFile(){
+        fileChooser.setFileFilter(new ClassFileFilter() );
+        fileChooser.setCurrentDirectory(archiveBean.getClassLoc());
+        int returnVal = fileChooser.showOpenDialog(this);
+        if (returnVal == JFileChooser.APPROVE_OPTION) {
+            File tempfile = fileChooser .getSelectedFile();
+            String newFile = tempfile.getPath();
+            int index = newFile.indexOf(archiveBean.getClassLoc().getAbsolutePath().trim());
+            if (index >= 0) {
+                int lastindex = archiveBean.getClassLoc().getAbsolutePath().trim().length();
+                newFile = newFile.substring(lastindex + 1);
+                char ch = File.separatorChar;
+                char newch = '.';
+                int cindex = newFile.indexOf(ch);
+                while (cindex >= 0) {
+                    newFile = newFile.replace(ch, newch);
+                    cindex = newFile.indexOf(ch);
+                }
+                fileName = newFile;
+                int classIndex = fileName.lastIndexOf(".");
+                fileName = fileName.substring(0, classIndex);
+                txtClassName .setText(fileName);
+            }
+        }
+    }
+    private void serviceGroupProcess(){
+
+        ArrayList ops = new ArrayList();
+            Iterator opitr = operations.values().iterator();
+            while (opitr.hasNext()) {
+                OperationObj operationObj = (OperationObj) opitr.next();
+                if (operationObj.getSelect().booleanValue()) {
+                    ops.add(operationObj.getOpName());
+                }
+            }
+
+            ServiceObj service = new ServiceObj(txtServiceName.getText(), fileName, ops);
+            archiveBean.addToServicelsit(service);
+            if (!archiveBean.isSingleService()) {
+                int valu = JOptionPane.showConfirmDialog(this, "Do you want to add an another service to group", "Service Archive",
+                        JOptionPane.YES_NO_OPTION);
+                if (valu == 0) {
+                    fileName = "";
+                    txtClassName.setText("");
+                    txtServiceName.setText("");
+                    operations.clear();
+                    setNextButtonEnabled(false);
+                    switchPanel(CodegenFrame.PANEL_FIRST_C);
+                    count++;
+                    this.repaint();
+                } else {
+                    servicelsit =archiveBean.getServicelsit();
+                    System.out.println(servicelsit.size());
+                    sgXMl = "<serviceGroup>\n";
+                    for (int i = 0; i < servicelsit.size(); i++) {
+                        ServiceObj serviceObj = (ServiceObj) servicelsit.get(i);
+                        sgXMl = sgXMl + serviceObj.toString();
+                    }
+                    sgXMl = sgXMl + "</serviceGroup>";
+                    archiveBean.setServiceXML(sgXMl);
+                    sgXMl="";
+                    switchPanel(CodegenFrame.PANEL_OPTION_C );
+                }
+            } else {
+                servicelsit = archiveBean.getServicelsit();
+                sgXMl = "<serviceGroup>\n";
+                for (int i = 0; i < servicelsit.size(); i++) {
+                    ServiceObj serviceObj = (ServiceObj) servicelsit.get(i);
+                    sgXMl = sgXMl + serviceObj.toString();
+                }
+                sgXMl = sgXMl + "</serviceGroup>";
+                archiveBean.setServiceXML(sgXMl);
+                sgXMl="";
+                switchPanel(CodegenFrame.PANEL_OPTION_C );
+            }
+    }
+
+    private void checkautoGeneration(){
+        ArrayList ops = new ArrayList();
+        Iterator opitr = operations.values().iterator();
+        while (opitr.hasNext()) {
+            OperationObj operationObj = (OperationObj) opitr.next();
+            if (operationObj.getSelect().booleanValue()) {
+                ops.add(operationObj.getOpName());
+            }
+        }
+        txtServiceName.setText(txtServiceName.getText());
+        ServiceObj service = new ServiceObj(txtServiceName.getText(), fileName, ops);
+        archiveBean.addToServicelsit(service);
+        servicelsit = archiveBean.getServicelsit();
+        sgXMl="<serviceGroup>";
+        for (int i = 0; i < servicelsit.size(); i++) {
+            ServiceObj serviceObj = (ServiceObj) servicelsit.get(i);
+            sgXMl = sgXMl + serviceObj.toString();
+        }
+        sgXMl = sgXMl + "</serviceGroup>";
+        archiveBean.setServiceXML(sgXMl);
+        sgXMl="";
+    }
+}
+
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassFileLocationPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassFileLocationPage.java	(revision 0)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/ClassFileLocationPage.java	(revision 0)
@@ -0,0 +1,189 @@
+package org.apache.ideaplugin.frames;
+
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+import org.apache.ideaplugin.bean.ArchiveBean;
+
+import javax.swing.*;
+import javax.swing.border.EmptyBorder;
+import java.awt.*;
+import java.awt.event.ActionListener;
+import java.awt.event.ActionEvent;
+import java.io.File;
+
+/**
+ * Created by IntelliJ IDEA.
+ * User: shivantha
+ * Date: 16/07/2007
+ * Time: 10:55:31
+ * To change this template use File | Settings | File Templates.
+ */
+public class ClassFileLocationPage extends WizardPanel {
+        /**
+         * varialbales
+         */
+        private JTextField txtClassDir;
+        private JButton butSelect;
+        private JCheckBox chkBoxIncludeClass;
+        private JCheckBox chkBoxArchiveType;
+        private JButton btnHint;
+        private JTextArea txaHint;
+        private boolean flag=false;
+        private String hint =":";
+        private ArchiveBean archiveBean;
+        public final JFileChooser fileChooser = new JFileChooser();
+        private File file;
+        /**
+         * Constructor
+         * @param wizardComponents
+         */
+        public ClassFileLocationPage(WizardComponents wizardComponents, ArchiveBean archiveBean ) {
+            super(wizardComponents, "Axis2 Idea Plugin Service Archiver Creator Wizards");
+            setPanelTopTitle("Service Archiver");
+            setPanelBottomTitle("Welcome to Axis2 Service Archive Wizard.Insert the class files and select the service type. ");
+            this.archiveBean=archiveBean;
+            init();
+        }
+
+        /**
+         * initiate panel
+         */
+        private void init(){
+
+            txaHint =new JTextArea();
+            txaHint.setBorder(null);
+            txaHint.setFocusable(false);
+            txaHint.setLineWrap(true);
+            txaHint.setWrapStyleWord(true);
+            txaHint.setOpaque(false);
+            btnHint =new JButton("Hint >>");
+            btnHint.setBorder(new EmptyBorder(new Insets(0,0,0,0)));
+            txtClassDir =new JTextField();
+            butSelect=new JButton("Browse..");
+            chkBoxIncludeClass = new JCheckBox("include .class file only") ;
+            chkBoxArchiveType=new JCheckBox("Select for Service Group Archive");
+
+            setBackButtonEnabled(true);
+            setFinishButtonEnabled(false);
+            setPageComplete(false);
+
+            this.setLayout(new GridBagLayout());
+
+            this.add(new JLabel("Class file location")
+                    , new GridBagConstraints(0, 0, 1, 1, 0.1, 0.0
+                    , GridBagConstraints.WEST , GridBagConstraints.NONE
+                    , new Insets(5, 10, 0,0), 0, 0));
+
+            this.add(txtClassDir
+                    , new GridBagConstraints(1, 0, GridBagConstraints.RELATIVE, 1, 1.0, 0.0
+                    , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                    , new Insets(5, 1, 1, 1), 0, 0));
+
+            txtClassDir.addActionListener(new ActionListener()  {
+                public void actionPerformed(ActionEvent e) {
+                    update();
+                }
+            });
+
+            this.add(butSelect
+                    , new GridBagConstraints(2, 0, 1, 1, 0.1, 0.0
+                    , GridBagConstraints.CENTER , GridBagConstraints.NONE
+                    , new Insets(5, 1, 1,10), 0, 0));
+
+            butSelect.addActionListener(new ActionListener()  {
+                public void actionPerformed(ActionEvent e) {
+                    fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
+                    int returnVal = fileChooser.showOpenDialog(butSelect);
+                    if (returnVal == JFileChooser.APPROVE_OPTION) {
+                        file = fileChooser.getSelectedFile();
+                        fileChooser.setCurrentDirectory(file);
+                        txtClassDir.setText(file.getAbsolutePath());
+                        setPageComplete(true);
+                        setNextButtonEnabled(true);
+                    } else {
+                        txtClassDir.setText("");
+                    }
+
+                    update();
+                }
+            });
+
+            this.add(chkBoxIncludeClass
+                    , new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                    , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                    , new Insets(5, 10, 1,1), 0, 0));
+            chkBoxIncludeClass.addActionListener(new ActionListener()  {
+                public void actionPerformed(ActionEvent e) {
+                    update();
+                }
+            });
+
+//             this.add(chkBoxArchiveType
+//                    , new GridBagConstraints(0, 2, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+//                    , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+//                    , new Insets(5, 10, 1,1), 0, 0));
+//            chkBoxArchiveType .addActionListener(new ActionListener()  {
+//                public void actionPerformed(ActionEvent e) {
+//                    update();
+//                }
+//            });
+            this.add(btnHint,
+                    new GridBagConstraints(0, 2, 1, 1, 0.0,0.0
+                            , GridBagConstraints.WEST , GridBagConstraints.NONE
+                            , new Insets(5, 10, 0, 10), 0, 0));
+            btnHint.addActionListener(new ActionListener()  {
+                public void actionPerformed(ActionEvent e) {
+                    if(flag){
+                        btnHint.setText("Hint >>");
+                        txaHint.setText("");
+                        flag=false;
+                    }else{
+                        btnHint.setText("Hint <<");
+                        txaHint.setText(hint);
+                        flag=true;
+                    }
+                    update();
+                }
+            });
+
+            this.add(txaHint
+                    , new GridBagConstraints(0, 3, GridBagConstraints.REMAINDER, 1, 0.0,1.0
+                    , GridBagConstraints.WEST , GridBagConstraints.BOTH
+                    , new Insets(5, 10, 10, 10), 0, 0));
+
+        }
+
+        //next
+        public void next() {
+            switchPanel(CodegenFrame.PANEL_SECOND_C );
+        }
+        //back
+        public void back() {
+            switchPanel(CodegenFrame.PANEL_CHOOSER );
+        }
+        //update
+        public void update() {
+            fillBean();
+        }
+        private void fillBean(){
+//          if(!chkBoxArchiveType.isSelected()){
+//               archiveBean.setSingleService(true);
+//          } else
+//              archiveBean.setSingleService(false);
+          if(!txtClassDir.getText().trim().equals("")){
+              archiveBean.setClassLoc(file);
+              archiveBean.addClassLocation(file);
+          }
+           if(chkBoxIncludeClass.isSelected()){
+               archiveBean.setIncludeClass(true);
+          } else
+              archiveBean.setIncludeClass(false);
+        }
+
+        //get page type
+        public  int getPageType() {
+            return  WizardPanel.SERVICE_ARCHIVE_TYPE;
+        }
+ }
+
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LogoPage.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LogoPage.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/frames/LogoPage.java	(working copy)
@@ -1,82 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ideaplugin.frames;
-
-import javax.swing.*;
-import java.awt.*;
-
-/**
- * Author: Deepal Jayasinghe
- * Date: Sep 24, 2005
- * Time: 11:04:25 AM
- */
-public class LogoPage extends JPanel {
-    JLabel imagelbl;
-    ImageIcon apachelogo;
-
-    public LogoPage() {
-        LogoPageLayout customLayout = new LogoPageLayout();
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-        setLayout(customLayout);
-
-        java.net.URL resource = LogoPage.class.getResource("/icons/asf-feather.png");
-        apachelogo = new ImageIcon(resource);
-        imagelbl = new JLabel(apachelogo);
-        add(imagelbl);
-        setSize(getPreferredSize());
-        setBackground(Color.white);
-    }
-}
-
-class LogoPageLayout implements LayoutManager {
-
-    public LogoPageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 320 + insets.left + insets.right;
-        dim.height = 76 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-        return dim;
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 8, insets.top + 8, 304, 64);
-        }
-    }
-}
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/plugin/Axis2IdeaPlugin.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/plugin/Axis2IdeaPlugin.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/ideaplugin/plugin/Axis2IdeaPlugin.java	(working copy)
@@ -22,13 +22,13 @@
 import com.intellij.openapi.options.Configurable;
 import com.intellij.openapi.options.ConfigurationException;
 import com.intellij.openapi.project.Project;
-import org.apache.ideaplugin.frames.Axi2PluginPage;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
 
 import javax.swing.*;
 import javax.xml.stream.XMLInputFactory;
 
 public class Axis2IdeaPlugin implements ApplicationComponent, Configurable {
-    private Axi2PluginPage form;
+    private CodegenFrame form;
     private ImageIcon myIcon;
 
     /**
@@ -45,8 +45,8 @@
         }
 
         if (form == null) {
-            form = new Axi2PluginPage();
-            form.setResizable(false);
+            form = new CodegenFrame();
+            form.setResizable(true);
             form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         }
         if (myIcon == null) {
@@ -85,7 +85,7 @@
 
     public JComponent createComponent() {
         if (form == null) {
-            form = new Axi2PluginPage();
+            form = new CodegenFrame();
         }
         return form.getRootComponent();
     }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/component/WizardPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/component/WizardPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/component/WizardPanel.java	(working copy)
@@ -32,11 +32,13 @@
     private ImageIcon panelImage;
     private String  panelBottomTitle;
     private String error;
+    private String frametitle;
     private boolean flag;
     private boolean progressFlag;
     public static final int WSDL_2_JAVA_TYPE = 1;
     public static final int JAVA_2_WSDL_TYPE = 2;
-    public static final int UNSPECIFIED_TYPE = 3;
+    public static final int SERVICE_ARCHIVE_TYPE=3;
+    public static final int UNSPECIFIED_TYPE = 4;
     private boolean isPageComplete = false;
 
     public WizardPanel(WizardComponents wizardComponents) {
@@ -45,7 +47,7 @@
 
     public WizardPanel(WizardComponents wizardComponents, String title) {
         this.wizardComponents = wizardComponents;
-        this.panelTopTitle = title;
+        this.frametitle = title;
         java.net.URL resource = WizardPanel.class.getResource("/icons/asf-feather.png");
         setPanelImage(new ImageIcon(resource));
     }
@@ -111,6 +113,13 @@
         return progressFlag;
     }
 
+    public String getFrameTitle(){
+         return this.frametitle;
+    }
+
+    public void setFrameTitle(String title){
+        this.frametitle=title;
+    }
     // next
     protected boolean goNext() {
         if (wizardComponents.getWizardPanelList().size() > wizardComponents.getCurrentIndex()+1 ) {
@@ -132,7 +141,7 @@
         }
     }
     
-    protected void switchPanel(int panelIndex) {
+    public void switchPanel(int panelIndex) {
         getWizardComponents().setCurrentIndex(panelIndex);
         getWizardComponents().updateComponents();
     }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPluginAction.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPluginAction.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPluginAction.java	(working copy)
@@ -1,49 +0,0 @@
-package org.apache.axis2.tools.idea;
-
-import com.intellij.openapi.actionSystem.*;
-import com.intellij.openapi.application.Application;
-import com.intellij.openapi.application.ApplicationManager;
-import com.intellij.openapi.project.Project;
-
-import javax.swing.*;
-
-
-/**
- * Created by IntelliJ IDEA.
- * User: shivantha
- * Date: 9/07/2007
- * Time: 17:40:25
- * To change this template use File | Settings | File Templates.
- */
-public class CodegenPluginAction extends AnAction {
-
-    private ImageIcon myIcon;
-
-    public CodegenPluginAction() {
-        super("GC", "Axis2 Code Generator", null);
-    }
-
-    public void actionPerformed(AnActionEvent anActionEvent) {
-        Application application =
-                ApplicationManager.getApplication();
-        Project project = (Project) anActionEvent.getDataContext().getData(DataConstants.PROJECT);
-
-        CodegenPlugin axis2component =
-                (CodegenPlugin) application.getComponent(CodegenPlugin.class);
-        axis2component.showTool(project);
-    }
-
-    public void update(AnActionEvent event) {
-        super.update(event);
-        Presentation presentation = event.getPresentation();
-        if (ActionPlaces.MAIN_TOOLBAR.equals(event.getPlace())) {
-            if (myIcon == null) {
-                java.net.URL resource = CodegenPluginAction.class.getResource("/icons/icon.png");
-                myIcon = new ImageIcon(resource);
-            }
-            presentation.setIcon(myIcon);
-        }
-    }
-
-}
-
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ChooserPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ChooserPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ChooserPanel.java	(working copy)
@@ -29,8 +29,9 @@
     private boolean flag=false;
     private JRadioButton optionJ2WRadioButton;
     private JRadioButton optionW2JRadioButton;
+    private JRadioButton optionServiceArchiverRadioButton;
     private ButtonGroup bg;
-    private char selectedOption = 'A'; // 'N' is no option selected  'A', 'B' & 'F' stands for options
+    private char selectedOption = 'A'; // 'N' is no option selected  'A', 'B','C' & 'F' stands for options
     final private String hint="You can generate java code from a WSDL or WSDL from a java source file.";
     /**
      * construct method for chooserPanel
@@ -39,7 +40,7 @@
 
     public ChooserPanel(WizardComponents wizardComponents){
 
-        super(wizardComponents, "ChooserPanel");
+        super(wizardComponents, "Axis2 Idea Plugin Wizards");
         setPanelTopTitle("Select the wizard");
         setPanelBottomTitle("Welcome to the Axis2 code generator wizard");
         init();
@@ -56,9 +57,11 @@
 
         optionW2JRadioButton = new JRadioButton("Generate java sorce code from a WSDl file.",true);
         optionJ2WRadioButton = new JRadioButton("Generate a WSDl from a java source file",false);
+        optionServiceArchiverRadioButton = new JRadioButton("Create Service Archiver",false);
         ButtonGroup bg = new ButtonGroup();
         bg.add(optionJ2WRadioButton);
         bg.add(optionW2JRadioButton);
+        bg.add(optionServiceArchiverRadioButton);
 
         this.setLayout(new GridBagLayout() );
 
@@ -97,11 +100,26 @@
                 }
             }
         });
+        // option button for service Archive
 
+            this.add(optionServiceArchiverRadioButton
+                    , new GridBagConstraints(0, 3, 1, 1, 1.0, 0.0
+                    , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
+                    , new Insets(10, 20, 0,0), 0, 0));
+            optionServiceArchiverRadioButton .addItemListener(new ItemListener() {
+                public void itemStateChanged(ItemEvent e) {
+                    if (e.getStateChange() == ItemEvent.SELECTED) {
+                        selectedOption = 'C';
+                        update();
+                    }
+                }
+            });
+
+
         // hint button
 
         this.add(btnHint,
-                new GridBagConstraints(0,3, 1, 1, 1.0,0.0
+                new GridBagConstraints(0,4, 1, 1, 1.0,0.0
                         , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
                         , new Insets(10, 20, 0,0), 0, 0));
         btnHint.addActionListener(new ActionListener()  {
@@ -122,7 +140,7 @@
         // hint lable
 
         this.add(lblHint,
-                new GridBagConstraints(0, 4, 1, 1, 1.0, 1.0
+                new GridBagConstraints(0, 5, 1, 1, 1.0, 1.0
                         , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
                         , new Insets(10, 20, 0,0), 0, 0));
 
@@ -136,10 +154,10 @@
      */
 
     public void update() {
-        setNextButtonEnabled((selectedOption == 'A') || (selectedOption == 'B') );
+        setNextButtonEnabled((selectedOption == 'A') || (selectedOption == 'B') ||(selectedOption == 'C'));
         setBackButtonEnabled(false); // there is no way back
         setProgressPanelVisible(false);
-        setPageComplete(true);
+        setPageComplete(true);          
     }
 
     /**
@@ -151,8 +169,11 @@
 
         } else if (selectedOption == 'B') {
             switchPanel(CodegenFrame.PANEL_FIRST_B );
-            setNextButtonEnabled(false);
         }
+        else if (selectedOption == 'C') {
+            switchPanel(CodegenFrame.PANEL_FIRST_C );
+        }
+        setNextButtonEnabled(false);
     }
 
     /**
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPlugin.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPlugin.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/CodegenPlugin.java	(working copy)
@@ -1,123 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements. See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership. The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License. You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied. See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.axis2.tools.idea;
-
-import com.intellij.openapi.components.ApplicationComponent;
-import com.intellij.openapi.options.Configurable;
-import com.intellij.openapi.options.ConfigurationException;
-import com.intellij.openapi.project.Project;
-
-import javax.swing.*;
-import javax.xml.stream.XMLInputFactory;
-
-import org.apache.axis2.tools.wizardframe.CodegenFrame;
-
-/**
- * <h3>SampleApplicationPlugin</h3>
- * <p/>
- * Application level plugin sample showing IDEA <b>OpenAPI</b> basics.<br>
- * Implements <code>ApplicationComponent</code> interface.
- */
-public class CodegenPlugin implements ApplicationComponent , Configurable {
-
-    private CodegenFrame form;
-    private ImageIcon myIcon;
-
-    /**
-     * Method is called after plugin is already created and configured. Plugin can start to communicate with
-     * other plugins only in this method.
-     */
-    public void initComponent() {
-        try {
-            XMLInputFactory.newInstance();
-        } catch (Exception e) {
-            //Fixing class loading issue
-        } catch (Throwable e) {
-            ////Fixing class loading issue
-        }
-
-        if (form == null) {
-            form = new CodegenFrame();
-            form.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-            form.setSize(500,500);
-        }
-        if (myIcon == null) {
-            java.net.URL resource = CodegenFrame.class.getResource("/icons/icon.png");
-            myIcon = new ImageIcon(resource);
-        }
-    }
-
-    /**
-     * This method is called on plugin disposal.
-     */
-    public void disposeComponent() {
-    }
-
-    /**
-     * Returns the name of component
-     *
-     * @return String representing component name. Use PluginName.ComponentName notation
-     *         to avoid conflicts.
-     */
-    public String getComponentName() {
-        return "ActionsSample.CodegenPlugin";
-    }
-
-    public String getDisplayName() {
-        return "Axis2 Codegen Plug-ins";
-    }
-
-    public Icon getIcon() {
-        return myIcon;
-    }
-
-    public String getHelpTopic() {
-        return "No help available";
-    }
-
-    public JComponent createComponent() {
-        if (form == null) {
-            form = new CodegenFrame();
-        }
-        return form.getRootComponent();
-    }
-
-    public boolean isModified() {
-        return false;
-    }
-
-    public void apply() throws ConfigurationException {
-
-    }
-
-    public void reset() {
-        //To change body of implemented methods use File | Settings | File Templates.
-    }
-
-    public void disposeUIResources() {
-        form = null;
-    }
-
-    public void showTool(Project project) {
-        form.setProject(project);
-        form.showUI();
-
-    }
-}
\ No newline at end of file
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/FirstPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/FirstPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/FirstPanel.java	(working copy)
@@ -52,7 +52,7 @@
     private CodegenBean codegenBean;
 
     public FirstPanel(WizardComponents wizardComponents,CodegenBean codegenBean) {
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents, "Axis2 Idea Plugin WSDL2Java Wizards");
         this.codegenBean=codegenBean;
         setPanelTopTitle("WSDL selection page");
         setPanelBottomTitle("please Select the WSDl file location");
@@ -157,7 +157,6 @@
             setPageComplete(false);
         }
         setBackButtonEnabled(true);
-
     }
 
     public  int getPageType() {
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ProgressBarPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ProgressBarPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/ProgressBarPanel.java	(working copy)
@@ -22,10 +22,9 @@
 import java.awt.*;
 import java.lang.reflect.InvocationTargetException;
 
-public class
-        ProgressBarPanel  extends JPanel {
+public class ProgressBarPanel  extends JPanel {
     private  volatile boolean stop = false;
-    private static int DELAY = 100;
+    private static int DELAY = 500;
     public volatile String val=null;
     private JLabel progressDescription;
     private JProgressBar progressSent;
@@ -65,7 +64,7 @@
     public void aboutToDisplayPanel() {
 
         setProgressValue(0);
-        setProgressText("Connecting to Server...");
+       // setProgressText("Connecting to Server...");
 
     }
     public void displayingPanel() {
@@ -84,7 +83,7 @@
                             int value = progressSent .getValue();
                             progressSent .setValue(value+4);
                             setProgressValue(value+4);
-                            progressDescription .setText("Genarate Code. Please wait.....");
+                          //  progressDescription .setText("Genarate Code. Please wait.....");
                         } else if(!stop){
                             progressSent .setIndeterminate(true);
 
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/SecondPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/SecondPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/SecondPanel.java	(working copy)
@@ -58,7 +58,7 @@
     private CodegenBean codegenBean;
 
     public SecondPanel(WizardComponents wizardComponents,CodegenBean codegenBean) {
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents, "Axis2 Idea Plugin WSDL2Java Wizards");
         this.codegenBean=codegenBean;
         setPanelTopTitle("Options");
         setPanelBottomTitle("Set the options for the code generator. If you wish to edit the codegen options, Select custom");
@@ -374,15 +374,15 @@
                 serviceXML.setEnabled(false);
                 serverSideInterface.setEnabled(false);
             }
-            if(!rdasync.isSelected()){
+            if(rdasync.isSelected()){
                 rdasync.setEnabled(true);
-                rdasync.setSelected(true);
+                rdasync.setSelected(false);
             }else{
                 rdasync.setEnabled(true);
             }
-            if(rdBoth.isSelected()){
+            if(!rdBoth.isSelected()){
                 rdBoth.setEnabled(true);
-                rdBoth.setSelected(false);
+                rdBoth.setSelected(true);
             }else{
                 rdBoth.setEnabled(true);
             }
@@ -492,7 +492,6 @@
                     //setComboBoxEnable(false);
                     // load the ports
                     loadPortNames();
-                    //Todo error message null
                 } else {
                     // service name list being empty means we are switching to
                     // the interface mode
@@ -501,7 +500,6 @@
                     // disable the combo's
                    // setComboBoxEnable(false);
                     //this is not an error
-                    //Todo error message null
 
                 }
 
@@ -513,12 +511,10 @@
         } catch (WSDLException e) {
             // disable the combo's
             setComboBoxEnable(false);
-            //Todo error message "Specified WSDL is invalid!, Please select a validated *.wsdl/*.xml file on previous page."
         }
         catch (Exception e) {
             // disable the combo's
             setComboBoxEnable(false);
-            //Todo error message "Specified WSDL is not found!, Please Check whether you have entered the correct path to a *.wsdl on previous page."
         }
 
     }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/WSDL2JavaOutputPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/WSDL2JavaOutputPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/idea/WSDL2JavaOutputPanel.java	(working copy)
@@ -83,10 +83,10 @@
 
 
     public WSDL2JavaOutputPanel(WizardComponents wizardComponents,CodegenBean codegenBean, Project project) {
-        super(wizardComponents, "Output");
+        super(wizardComponents, "Axis2 Idea Plugin WSDL2Java Wizards");
         this.codegenBean=codegenBean;
         this.project=project;
-        setPanelTopTitle("output");
+        setPanelTopTitle("Output");
         setPanelBottomTitle("set the out location for the generated code");
         init();
     }
@@ -128,9 +128,8 @@
         chbAddAxisCodegenJar =new JCheckBox("Add the Axis2 Codegen jars to the codegen resulted project");
         chbAddAxisLib =new JCheckBox(" Add Axis2 libraries to the codegen result project ");
         chbCreateJar=new JCheckBox(" Create a jar file of codegen result project and add to resulted project lib folder(Default :CodegenResults.jar)");
-        chbAddAxisLib.setEnabled(false);//Todo after writing include axis2 jar file it must remove
-        radCurrentProject =new JRadioButton("Browse and select a project on current idea workspace");
-        radCustomLocation =new JRadioButton("Browse and select location on local file system");
+        radCurrentProject =new JRadioButton("Browse and select a project on current idea workspace",false);
+        radCustomLocation =new JRadioButton("Browse and select location on local file system",true);
         ButtonGroup  buttonGroup= new  ButtonGroup();
         buttonGroup.add(radCurrentProject );
         buttonGroup.add(radCustomLocation);
@@ -341,7 +340,7 @@
                 new GridBagConstraints(0, 16, GridBagConstraints.REMAINDER, 1, 0.1, 1.0
                         , GridBagConstraints.NORTHWEST , GridBagConstraints.BOTH
                         , new Insets(10, 20, 0,0), 0, 0));
-
+        update();
     }
     public void back() {
         switchPanel(CodegenFrame.PANEL_OPTION_A );
@@ -352,8 +351,7 @@
     public void update(){
         setNextButtonEnabled(false);
         checkPageComlete();
-        setEnabledForAddAxisLib();
-
+        setEnabledForAddAxisLib();    
     }
     public void loadCmbCurrentProject() {
         Module modules[] = codegenBean .getModules();
@@ -571,26 +569,26 @@
     private void handleModifyEvent() {
         String text = this.txtoutput.getText();
         if ((text == null) || (text.trim().equals(""))) {
-            //Todo error message "output location needs to be specified"
+            // error message "output location needs to be specified"
 			return;
 		}
-		//Todo error message null
+		// error message null
 	}
 	private void handleAxisHomeModifyEvent() {
 		String text = this.txtaxisHome.getText();
 		if ((text == null) || (text.trim().equals(""))) {
-			//Todo error message "output location needs to be specified"
+			// error message "output location needs to be specified"
 			return;
 		}
-		//Todo error message null
+		// error message null
 	}
     private void handleJarNameModifyEvent() {
 		String text = this.txtjarFileName.getText();
 		if ((text == null) || (text.trim().equals(""))) {
-			//Todo error message "output location needs to be specified"
+			// error message "output location needs to be specified"
 			return;
 		}
-		//Todo error message null
+		// error message null
 	}
 }
 
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/bean/SrcCompiler.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/bean/SrcCompiler.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/bean/SrcCompiler.java	(working copy)
@@ -44,27 +44,28 @@
 
     public void compileSource(String tempPath) {
 
-        Path path;
-        File destDir = new File(tempPath + File.separator + "classes");
-        destDir.mkdir();
+          Path path;
+          File destDir = new File(tempPath + File.separator + "classes");
+          destDir.mkdir();
 
-        Path srcPath = new Path(project, tempPath + File.separator + "src");
-        this.setSrcdir(srcPath);
-        this.setDestdir(destDir);
-        this.setIncludes("**" + File.separator + "*.java, *.java");
-        URL url = getClass().getResource("/icons");
-        File lib = new File(url.getPath() + File.separator + ".." + File.separator + ".." + File.separator + "lib");
-        File[] files;
-        files = lib.listFiles();
+          Path srcPath = new Path(project, tempPath + File.separator + "src");
+          this.setSrcdir(srcPath);
+          this.setDestdir(destDir);
+          this.setIncludes("**" + File.separator + "*.java, *.java");
+          URL url = getClass().getResource("/icons");
+          File lib = new File(url.getPath() + File.separator + ".." + File.separator + ".." + File.separator + "lib");
+          File[] files;
+          files = lib.listFiles();
 
-        Path classpath = new Path(project);
-        for (int count = 0; count < files.length; count++) {
-            path = new Path(project, files[count].getAbsolutePath());
-            classpath.add(path);
-        }
-        this.setClasspath(classpath);
-       this.setFork(true);
-        this.perform();
+          Path classpath = new Path(project);
+          for (int count = 0; count < files.length; count++) {
+              path = new Path(project, files[count].getAbsolutePath());
+              classpath.add(path);
+          }
+          this.setClasspath(classpath);
+         this.setFork(true);
+          this.perform();
 
-    }
+      }
+
 }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java	(working copy)
@@ -24,11 +24,14 @@
 import org.apache.axis2.tools.idea.ChooserPanel;
 import org.apache.axis2.tools.idea.SecondPanel;
 import org.apache.axis2.tools.idea.WSDL2JavaOutputPanel;
+//import org.apache.axis2.tools.idea.WSDL2JavaOutputPanel;
 import org.apache.axis2.tools.component.Utilities;
 import org.apache.axis2.tools.component.WizardPanel;
 import org.apache.axis2.tools.java2wsdl.MiddlePanel;
 import org.apache.axis2.tools.java2wsdl.OptionPanel;
 import org.apache.axis2.tools.java2wsdl.OutputPanel;
+import org.apache.ideaplugin.frames.*;
+import org.apache.ideaplugin.bean.ArchiveBean;
 import com.intellij.openapi.project.Project;
 
 /**
@@ -46,19 +49,22 @@
     public static final int PANEL_OPTION_B = 4;
     public static final int PANEL_LAST_A = 5;
     public static final int PANEL_LAST_B = 6;
+    public static final int PANEL_FIRST_C=7;
+    public static final int PANEL_SECOND_C=8;
+    public static final int PANEL_THIRD_C=9;
+    public static final int PANEL_FOURTH_C=10;
+    public static final int PANEL_LOAD_C=11;
+    public static final int PANEL_OPTION_C=12;
+    public static final int PANEL_LAST_C=13;
 
     public CodegenFrame() {
         init();
     }
 
     private void init() {
-        this.setTitle("Axis2 Codegen Wizard");
-
+        this.setTitle("Axis2 Codegen Wizard"); 
         WizardPanel panel = null;
 
-        wsdlgenBean= new WsdlgenBean();
-        codegenBean = new CodegenBean();
-
         panel = new ChooserPanel(getWizardComponents());
         getWizardComponents().addWizardPanel(PANEL_CHOOSER , panel);
 
@@ -75,13 +81,31 @@
         getWizardComponents().addWizardPanel(PANEL_OPTION_B , panel);
 
         panel = new WSDL2JavaOutputPanel(getWizardComponents(),codegenBean,project);
-        getWizardComponents().addWizardPanel(PANEL_LAST_A , panel);
+        getWizardComponents().addWizardPanel(PANEL_LAST_A , panel);      
 
         panel = new OutputPanel(getWizardComponents(),wsdlgenBean,project);
         getWizardComponents().addWizardPanel(PANEL_LAST_B , panel);
 
-        setSize(getPreferredSize());
-        Utilities.centerComponentOnScreen(this);
+        panel = new ClassFileLocationPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_FIRST_C , panel);
 
+        panel = new WSDLFileSelectionPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_SECOND_C , panel);
+
+        panel = new LibraryAddingPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_THIRD_C , panel);
+
+        panel = new ServiceXMLFileSelectionPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_FOURTH_C , panel);
+
+        panel = new ServiceXMLGenerationPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_LOAD_C , panel);
+
+        panel = new ServiceXMLEditPage(getWizardComponents(),archiveBean) ;
+        getWizardComponents().addWizardPanel(PANEL_OPTION_C , panel);
+
+        panel = new ServiceArchiveOutputLocationPage(getWizardComponents(),archiveBean);
+        getWizardComponents().addWizardPanel(PANEL_LAST_C , panel);
+
     }
 }
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java	(working copy)
@@ -21,10 +21,13 @@
 import org.apache.axis2.tools.component.*;
 import org.apache.axis2.tools.bean.WsdlgenBean;
 import org.apache.axis2.tools.bean.CodegenBean;
+import org.apache.axis2.tools.bean.SrcCompiler;
 import org.apache.axis2.tools.idea.ProgressBarPanel;
 import org.apache.axis2.tools.idea.FirstPanel;
 import org.apache.axis2.tools.idea.SecondPanel;
 import org.apache.axis2.tools.idea.WSDL2JavaOutputPanel;
+import org.apache.ideaplugin.bean.ArchiveBean;
+import org.apache.ideaplugin.bean.JarFileWriter;
 
 import javax.swing.*;
 import java.awt.*;
@@ -48,11 +51,10 @@
     private JLabel panelImageLabel;
     private JLabel panelTopTitleLabel;
     private JLabel panelBottomTitleLabel;
-    private JLabel errorLabel;
-    private JPanel errorPanel;
     private WizardComponents wizardComponents;
     protected WsdlgenBean wsdlgenBean;
     protected CodegenBean codegenBean;
+    protected ArchiveBean archiveBean;
     protected Project project;
     private ProgressBarPanel progress;
 
@@ -63,7 +65,11 @@
     private void init() {
 
         wizardComponents = new DefaultWizardComponents();
+        wsdlgenBean= new WsdlgenBean();
+        codegenBean = new CodegenBean();
+        archiveBean =new ArchiveBean();
 
+
         this.getContentPane().setLayout(new GridBagLayout());
         this.getContentPane().add(createTitlePanel()
                 , new GridBagConstraints(0, 0, 1, 1, 1.0, 0.0
@@ -96,8 +102,8 @@
                         ,GridBagConstraints.EAST, GridBagConstraints.NONE,
                         new Insets(10, 10, 10, 10), 0, 0));
 
-        ImageIcon  img=new ImageIcon("icons/icon.png");
-        this.setIconImage(img.getImage());
+        java.net.URL resource = WizardPanel.class.getResource("/icons/icon.png");           
+        this.setIconImage(new ImageIcon(resource).getImage());
         this.setFont(new Font("Helvetica", Font.PLAIN, 8));
 
         wizardComponents.addPropertyChangeListener(new PropertyChangeListener() {
@@ -105,8 +111,7 @@
                 setPanelTopTitle(((WizardPanel)event.getNewValue()).getPanelTopTitle());
                 setPanelTitleImage(((WizardPanel)event.getNewValue()).getPanelImage());
                 setPanelBottomTitle(((WizardPanel)event.getNewValue()).getPanelBottomTitle());
-                setErrorVisible(false
-                        ,((WizardPanel)event.getNewValue()).getError());
+                setTitle(((WizardPanel)event.getNewValue()).getFrameTitle());
             }
         });
         wizardComponents.setFinishAction(createFinishAction());
@@ -124,14 +129,10 @@
 
     public void show() {
         wizardComponents.updateComponents();
+        this.setSize(600,600);
+        Utilities.centerComponentOnScreen(this);
         super.show();
     }
-      // set error message
-    protected void setErrorVisible(boolean flag ,String  error){
-        errorLabel.setText(error);
-        errorPanel.setVisible(flag);
-
-    }
     protected void setBottomVisible(boolean flag){
         panelBottomTitleLabel.setVisible(flag);
     }
@@ -158,22 +159,10 @@
         panelTopTitleLabel.setFont(new Font("Helvetica", Font.BOLD, 12));
 
         panelBottomTitleLabel=new JLabel();
+        panelBottomTitleLabel.setFont(new Font("Helvetica", Font.ITALIC, 10));
 
         panelImageLabel= new JLabel();
 
-        errorLabel = new JLabel();
-        errorLabel.setVisible(false);
-        errorLabel.setBackground(Color.blue);
-
-        errorPanel =new JPanel();
-        errorPanel .setLayout(new GridBagLayout());
-        errorPanel .setBorder(BorderFactory.createLineBorder(Color.black));
-
-        errorPanel.add(errorLabel,
-                new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0
-                , GridBagConstraints.CENTER, GridBagConstraints.BOTH
-                , new Insets(10, 10, 0, 10), 0, 0));
-
         panel.add(panelTopTitleLabel
                 , new GridBagConstraints(0, 0, 1, 1, 0.5, 0.0
                 , GridBagConstraints.LINE_START , GridBagConstraints.BOTH
@@ -189,12 +178,6 @@
                 , GridBagConstraints.CENTER, GridBagConstraints.BOTH
                 , new Insets(0, 0, 0, 0), 0, 0));
 
-
-        panel.add(errorPanel
-                , new GridBagConstraints(0, 1, 1, 1, 0.0, 0.0
-                , GridBagConstraints.SOUTH, GridBagConstraints.BOTH
-                , new Insets(20, 0, 0, 0), 0, 0));
-
         return panel;
 
     }
@@ -222,12 +205,17 @@
                             doFinishJava2WSDL();
                             System.out.println("FinishAction Java2WSDL performed");
                             break;
+                         case WizardPanel.SERVICE_ARCHIVE_TYPE:
+                            doFinishServiceArchive();
+                            System.out.println("FinishAction Servcie Archive performed");
+                            break;
                         case WizardPanel.UNSPECIFIED_TYPE:
                             break; //Do nothing
                         default:
                             throw new RuntimeException("Invalid state!");
                     }
                 } catch (Exception e) {
+                     wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
                      dispose();
                 }
 
@@ -238,6 +226,7 @@
     protected CancelAction createCancelAction() {
         return new CancelAction(wizardComponents) {
             public void performAction() {
+                wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
                 System.out.println("CancelAction performed");
                 dispose();
             }
@@ -245,6 +234,7 @@
     }
 
     protected void handleWindowClosing() {
+        wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
         this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
         this.addWindowListener(new WindowAdapter() {
             public void windowClosing(WindowEvent e) {
@@ -271,6 +261,7 @@
                 "Code genaration Successful !" + writer.toString(),
                 "Axis2 code generation",
                 JOptionPane.INFORMATION_MESSAGE );
+        wizardComponents.setCurrentIndex(CodegenFrame.PANEL_CHOOSER);
         dispose();
     }
 
@@ -351,8 +342,8 @@
     }
     protected void doFinishWSDL2Java(){
         handlePragress();
-        new java.util.Timer(true).schedule(new TimerTask() {
-            public void run() {
+       new java.util.Timer(true).schedule(new TimerTask() {
+           public void run() {
                 try {
                     FirstPanel  first=(FirstPanel)wizardComponents.getWizardPanel(1);
                     SecondPanel option=(SecondPanel)wizardComponents.getWizardPanel(3);
@@ -382,22 +373,64 @@
                     codegenBean.setOutput(output.getOutputLocation());
                     codegenBean.setNamespace2packageList(option.getNs2PkgMapping());
                     codegenBean.setWSDLFileName(first.getWSDLFileName());
-                    codegenBean.generate();
+                    codegenBean.generate();                      
+                     //Add the codegen libs that are coming with the plugin to the project lib that has been created
+                 if (output.getAxis2PluginLibCopyCheckBoxSelection()){
+                     java.net.URL resource = WizardPanel.class.getResource("/icons/icon.png");
+                     String path =new File(resource.getPath()).getParentFile().getParentFile().getParentFile().getPath();
+                     System.out.println(path);
+                     String pluginLibLocation = path+File.separator+"lib";
+                	 addLibsToProjectLib(pluginLibLocation, output.getOutputLocation());
+                 }
+
+                 //Add the libraries on the plugin lib directory to the created project lib
+                 if (output.getAxisLibCopyCheckBoxSelection() && output.oktoLoadLibs()){
+                	 String libDirectory = output.getAxisJarsLocation();
+                	 addLibsToProjectLib(libDirectory, output.getOutputLocation());
+                 }
+
+                 //This will Create a jar file from the codegen results and add to the output
+                 //locations lib directory
+                 if (output.getCreateJarCheckBoxSelection()){
+                     File tempClassFile=codegenBean.getTemp();
+                     tempClassFile.mkdir();
+                     File srcTemp=new File(tempClassFile.getPath()+File.separator+"src");
+                     srcTemp.mkdir();
+                     copyDirectory(new File(output.getOutputLocation()+File.separator+"src"),srcTemp);
+                     //Compile the source to another directory
+                	 SrcCompiler srcCompileTool = new SrcCompiler();
+                	 srcCompileTool.compileSource(tempClassFile.getPath());
+                     //create the jar file and add that to the lib directory
+                	 String projectLib = output.getOutputLocation()+File.separator+"lib";
+                	 JarFileWriter jarFileWriter = new JarFileWriter();
+                	 String jarFileName = "CodegenResults.jar";
+                	 if (!output.getJarFilename().equals("")){
+                		 jarFileName=output.getJarFilename();
+                	 }
+                	 output.setJarFileName(jarFileName);
+                      File tempClass = new File(tempClassFile.getPath()+File.separator+"classes");
+                     jarFileWriter.writeJarFile(new File(projectLib), jarFileName, tempClass);
+
+                	 //Delete the temp folders
+                	 deleteDir(tempClassFile );
+
+                 }
                     progress.setVisible(false);
                     handleSuccess();
                 }catch (Exception e1) {
+                    e1.printStackTrace();
                     progress.setVisible(false);
                     handleError();
                 }
             }
-        }, 1000);
+        }, 5000);
 
     }
 
     protected void doFinishJava2WSDL(){
         handlePragress();
         new java.util.Timer(true).schedule(new TimerTask() {
-            public void run() {
+           public void run() {
                 try {
                     wsdlgenBean.generate();
                     progress.setVisible(false);
@@ -407,6 +440,21 @@
                     handleError();
                 }
             }
+       }, 3100);
+    }
+     protected void doFinishServiceArchive(){
+       handlePragress();
+        new java.util.Timer(true).schedule(new TimerTask() {
+            public void run() {
+                 try {
+                    archiveBean.finsh();
+                    progress.setVisible(false);
+                    handleSuccess();
+                } catch (Exception e1) {
+                    progress.setVisible(false);
+                    handleError();
+                }
+            }
         }, 3100);
     }
     public void setProject(Project project){
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OutputPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OutputPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OutputPanel.java	(working copy)
@@ -41,10 +41,14 @@
     private JComboBox cmbModuleSrc;
     private JTextField txtLocation;
     private JTextField txtFileName;
+    private JLabel lblModule;
+    private JLabel lblDirect;
+    private JLabel lblOutput;
     private JButton btnBrowes;
     final JFileChooser DirChooser=new JFileChooser();
     private Project project;
     private WsdlgenBean wsdlgenBean;
+    private boolean flag = true;
 
     /**
      * Constructor
@@ -53,7 +57,7 @@
      * @param project
      */
     public OutputPanel(WizardComponents wizardComponents,WsdlgenBean wsdlgenBean, Project project){
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents,  "Axis2 Idea Plugin Java2WSDL Wizards");
         setPanelTopTitle("WSDl file output location");
         setPanelBottomTitle("Select the location for the generated WSDL");
         this.wsdlgenBean=wsdlgenBean;
@@ -62,57 +66,75 @@
     }
     private void init(){
 
-        rbtnAdd =new JRadioButton("Browes and Add the WSDL to a project on current Idea workspace",false);
+        rbtnAdd =new JRadioButton("Browes and Add the WSDL to a project on current Idea workspace",true);
 
-        rbtnSave =new JRadioButton("Browes and Save the WSDL file on local file system",true);
+        rbtnSave =new JRadioButton("Browes and Save the WSDL file on local file system",false);
 
         cmbCurrentProject =new JComboBox();
-        cmbCurrentProject.setEnabled(false);
+        cmbCurrentProject.setEnabled(true);
         cmbModuleSrc=new JComboBox();
-        cmbModuleSrc.setEnabled(false);
+        cmbModuleSrc.setEnabled(true);
         ButtonGroup  buttonGroup= new  ButtonGroup();
         buttonGroup.add(rbtnAdd );
         buttonGroup.add(rbtnSave );
 
-        txtFileName =new JTextField();
+        txtFileName =new JTextField("service.wsdl");
 
         txtLocation=new JTextField();
 
         btnBrowes=new JButton("Browse..");
+        lblOutput=new JLabel("OutPut Location");
+        lblModule=new JLabel("Select the Module");
+        lblModule.setEnabled(false);
+        lblDirect=new JLabel("Select the Directory");
+        lblDirect.setEnabled(false);
 
         setBackButtonEnabled(true);
         setNextButtonEnabled(false);
         setFinishButtonEnabled(false);
         this.setLayout(new GridBagLayout());
 
+        this.add(new JLabel("OutPut File Name")
+                , new GridBagConstraints(0, 0, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 10, 0, 0), 0, 0));
+
+        this.add(txtFileName
+                , new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0, 0), 0, 0));
+
+
         this.add(new JLabel("Select the location where to put the output")
-        , new GridBagConstraints(0, 0, GridBagConstraints.REMAINDER, 1,  0.0, 0.0
+                , new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1,  0.0, 0.0
         , GridBagConstraints.WEST  , GridBagConstraints.NONE
         , new Insets(5, 10, 0, 10), 0, 0));
 
         this.add(rbtnAdd
-        , new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+        , new GridBagConstraints(0, 2, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
         , GridBagConstraints.WEST , GridBagConstraints.NONE
         , new Insets(5, 10, 0,10), 0, 0));
         rbtnAdd.addActionListener(new ActionListener()  {
             public void actionPerformed(ActionEvent e) {
-                loadCmbCurrentProject();
                 cmbCurrentProject.setEnabled(true);
                 cmbModuleSrc.setEnabled(true);
-                txtLocation.setEnabled(false);
+                lblModule.setEnabled(true);
+                txtLocation .setEnabled(false);
                 btnBrowes.setEnabled(false);
-               setFinishButtonEnabled(true);
+                loadCmbCurrentProject();
+                loadcmbModuleSrcProject();
+                setFinishButtonEnabled(true);
                 update();
             }
         });
 
-         this.add(new JLabel("Select the Module")
-        , new GridBagConstraints(0, 2, 1, 1,  0.1, 0.0
+         this.add(lblModule
+        , new GridBagConstraints(0, 3, 1, 1,  0.1, 0.0
         , GridBagConstraints.WEST  , GridBagConstraints.NONE
         , new Insets(5, 10, 0, 0), 0, 0));
 
         this.add(cmbCurrentProject
-        , new GridBagConstraints(1, 2, GridBagConstraints.RELATIVE, 1, 1.0, 0.0
+        , new GridBagConstraints(1, 3, GridBagConstraints.RELATIVE, 1, 1.0, 0.0
         , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
         , new Insets(5, 10, 0,0), 0, 0));
         cmbCurrentProject.addActionListener(new ActionListener()  {
@@ -121,47 +143,48 @@
                 update();
             }
         });
-         this.add(new JLabel("Select the Directory")
-        , new GridBagConstraints(0, 3, 1, 1,  0.1, 0.0
+         this.add(lblDirect
+        , new GridBagConstraints(0, 4, 1, 1,  0.1, 0.0
         , GridBagConstraints.WEST  , GridBagConstraints.NONE
         , new Insets(5, 10, 0, 0), 0, 0));
 
         this.add(cmbModuleSrc
-        , new GridBagConstraints(1, 3, GridBagConstraints.RELATIVE, 1, 1.0, 0.0
+        , new GridBagConstraints(1, 4, GridBagConstraints.RELATIVE, 1, 1.0, 0.0
         , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
         , new Insets(5, 10, 0,0), 0, 0));
         cmbModuleSrc.addActionListener(new ActionListener()  {
-            public void actionPerformed(ActionEvent e) {
+            public void actionPerformed(ActionEvent e) {                  
                 update();
             }
         });
 
         this.add(rbtnSave
-        , new GridBagConstraints(0, 4, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+        , new GridBagConstraints(0, 5, GridBagConstraints.REMAINDER, 1, 1.0, 0.0
         , GridBagConstraints.WEST  , GridBagConstraints.NONE
         , new Insets(5, 10, 0,0), 0, 0));
         rbtnSave.addActionListener(new ActionListener()  {
             public void actionPerformed(ActionEvent e) {
                 cmbCurrentProject.setEnabled(false);
                 cmbModuleSrc.setEnabled(false);
-                txtLocation.setEnabled(true);
+                txtLocation .setEnabled(true);
                 btnBrowes.setEnabled(true);
+                setEnabledForCustomProject();
                 update();
             }
         });
-        this.add(new JLabel("OutPut Location")
-        , new GridBagConstraints(0, 5, 1, 1, 0.1, 0.0
-        , GridBagConstraints.WEST  , GridBagConstraints.NONE
+        this.add(lblOutput
+        , new GridBagConstraints(0, 6, 1, 1, 0.1, 1.0
+        , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
         , new Insets(5, 10, 0,0), 0, 0));
 
          this.add(txtLocation
-        , new GridBagConstraints(1, 5, 1, 1, 1.0, 0.0
-        , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+        , new GridBagConstraints(1, 6, 1, 1, 1.0, 1.0
+        , GridBagConstraints.NORTHWEST , GridBagConstraints.HORIZONTAL
         , new Insets(5, 10, 0, 0), 0, 0));
 
          this.add(btnBrowes
-        , new GridBagConstraints(2, 5, 1, 1, 0.1, 0.0
-        , GridBagConstraints.CENTER  , GridBagConstraints.NONE
+        , new GridBagConstraints(2, 6, 1, 1, 0.1, 1.0
+        , GridBagConstraints.NORTHWEST , GridBagConstraints.NONE
         , new Insets(5, 10, 0, 10), 0, 0));
 
         btnBrowes.addActionListener(new ActionListener()  {
@@ -177,16 +200,6 @@
             }
         });
 
-         this.add(new JLabel("OutPut File Name")
-        , new GridBagConstraints(0, 6, 1, 1, 0.1, 1.0
-        , GridBagConstraints.NORTHWEST  , GridBagConstraints.NONE
-        , new Insets(5, 10, 0, 0), 0, 0));
-
-         this.add(txtFileName
-        , new GridBagConstraints(1, 6, 1, 1, 1.0, 1.0
-        , GridBagConstraints.NORTHWEST  , GridBagConstraints.HORIZONTAL
-        , new Insets(5, 10, 0, 0), 0, 0));
-
         wsdlgenBean.setProject(project);
     }
 
@@ -198,6 +211,7 @@
                 cmbCurrentProject.addItem(modules[count].getName());
             }
         }else{
+            rbtnSave.setSelected(true);
             rbtnAdd.setEnabled(false);
       }
     }
@@ -212,14 +226,19 @@
                 cmbModuleSrc.addItem(src[count]);
             }
             count = src.length;
-        }else{
-            rbtnAdd.setEnabled(false);
-            cmbCurrentProject.setEnabled(false);
-            cmbModuleSrc.setEnabled(false);
         }
+         if (flag)
+        {
+            if (count == 0) {
+                flag =false;
+                setEnabledForCustomProject();
+            }
+            else{
+                setEnabledForCurrentProject();
+            }
+        }
+    }
 
-
-    }
      public void back() {
           switchPanel(CodegenFrame.PANEL_OPTION_B );
     }
@@ -260,5 +279,33 @@
      public  int getPageType() {
         return  WizardPanel.JAVA_2_WSDL_TYPE;
     }
+     private void setEnabledForCurrentProject(){
+        rbtnAdd.setSelected(true);
+        rbtnAdd.setEnabled(true);
+        cmbCurrentProject.setEnabled(true);
+        cmbModuleSrc.setEnabled(true);
+        lblDirect.setEnabled(true);
+        lblModule .setEnabled(true);
+        rbtnSave.setSelected(false);
+        txtLocation.setEnabled(false);
+        lblOutput .setEnabled(false);
+        btnBrowes.setEnabled(false);
+    }
+    private void setEnabledForCustomProject(){
+        if(flag){
+            rbtnAdd.setEnabled(false);
+            rbtnAdd.setSelected(false);
+        }else{
+            rbtnSave .setEnabled(true);
+            rbtnSave .setSelected(true);
+        }
+        cmbCurrentProject.setEnabled(false);
+        cmbModuleSrc.setEnabled(false);
+        lblDirect.setEnabled(false);
+        lblModule .setEnabled(false);
+        txtLocation .setEnabled(true);
+        lblOutput .setEnabled(true);
+        btnBrowes .setEnabled(true);
+    }
 }
- 
\ No newline at end of file
+ 
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java	(working copy)
@@ -30,8 +30,7 @@
 /**
  * this is the first panel of java2wsdl wizard
  */
-public class
-        OptionPanel extends WizardPanel{
+public class OptionPanel extends WizardPanel{
     /**
      * variable
      */
@@ -48,7 +47,7 @@
      * @param wsdlgenBean
      */
     public OptionPanel(WizardComponents wizardComponents,WsdlgenBean wsdlgenBean){
-        super(wizardComponents, "Option  was choosed");
+        super(wizardComponents,  "Axis2 Idea Plugin Java2WSDL Wizards");
         setPanelTopTitle("Java to WSDL Options");
         setPanelBottomTitle("Set the Option for the generation");
         this.wsdlgenBean=wsdlgenBean;
@@ -143,6 +142,8 @@
             txtSchemaTargetNspPrefix.setText(wsdlgenBean.getSchemaTargetNamespacePrefix());
         if(wsdlgenBean.getServiceName()!=null )
             txtService.setText(wsdlgenBean.getServiceName());
+        ((OutputPanel)getWizardComponents().getWizardPanel(CodegenFrame.PANEL_LAST_B)).loadCmbCurrentProject();
+        ((OutputPanel)getWizardComponents().getWizardPanel(CodegenFrame.PANEL_LAST_B)).loadcmbModuleSrcProject();        
         setBackButtonEnabled(true);
         setNextButtonEnabled(true);
         setFinishButtonEnabled(false);
Index: modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java
===================================================================
--- modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java	(revision 559693)
+++ modules/tool/axis2-idea-plugin/src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java	(working copy)
@@ -69,7 +69,7 @@
      * @param wsdlgenBean
      */
     public MiddlePanel(WizardComponents wizardComponents ,WsdlgenBean wsdlgenBean) {
-        super(wizardComponents, "Java source / classpath selection");
+        super(wizardComponents, "Axis2 Idea Plugin Java2WSDL Wizards");
         setPanelTopTitle("Java source / classpath selection");
         setPanelBottomTitle("Select the classes and the libraries");
         this.wsdlgenBean=wsdlgenBean;
@@ -245,8 +245,10 @@
     public void next() {
         if(txtClass.getText()!=null && isPageComplete()){
             switchPanel(CodegenFrame.PANEL_OPTION_B );
-        } else
+        } else{
             switchPanel(CodegenFrame.PANEL_FIRST_B );
+            setNextButtonEnabled(false);
+        }
     }
     //back
     public void back() {
Index: modules/tool/axis2-idea-plugin/plugin/resources/service.xsd
===================================================================
--- modules/tool/axis2-idea-plugin/plugin/resources/service.xsd	(revision 0)
+++ modules/tool/axis2-idea-plugin/plugin/resources/service.xsd	(revision 0)
@@ -0,0 +1,145 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
+    <xs:element name="serviceGroup">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" ref="service"/>
+                <xs:element minOccurs="0" ref="parameter"/>
+                <xs:element minOccurs="0" ref="module"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="service">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:choice maxOccurs="unbounded">
+                    <xs:element ref="module"/>
+                    <xs:element ref="operation"/>
+                    <xs:element ref="parameter"/>
+                    <xs:element ref="description"/>
+                    <xs:element ref="excludeOperations"/>
+                    <xs:element ref="messageReceivers"/>
+                    <xs:element ref="schema"/>
+                    <xs:element ref="transports"/>
+                </xs:choice>
+                <xs:element minOccurs="0" ref="dataLocator"/>
+            </xs:sequence>
+            <xs:attribute name="class"/>
+            <xs:attribute name="name"/>
+            <xs:attribute name="scope" type="xs:NCName"/>
+            <xs:attribute name="targetNamespace" type="xs:anyURI"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="description" type="xs:string"/>
+    <xs:element name="excludeOperations">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element ref="operation"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="messageReceivers">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" ref="messageReceiver"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="schema">
+        <xs:complexType>
+            <xs:attribute name="schemaNamespace" use="required" type="xs:anyURI"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="transports">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element ref="transport"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="transport" type="xs:NCName"/>
+    <xs:element name="dataLocator">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element minOccurs="0" ref="dialectLocator"/>
+            </xs:sequence>
+            <xs:attribute name="class"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="dialectLocator">
+        <xs:complexType>
+            <xs:attribute name="class" use="required"/>
+            <xs:attribute name="dialect" use="required" type="xs:anyURI"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="parameter">
+        <xs:complexType mixed="true">
+            <xs:attribute name="locked" type="xs:NMTOKEN"/>
+            <xs:attribute name="name" use="required" type="xs:NCName"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="module">
+        <xs:complexType>
+            <xs:attribute name="ref" use="required" type="xs:NCName"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="operation">
+        <xs:complexType mixed="true">
+            <xs:choice minOccurs="0" maxOccurs="unbounded">
+                <xs:element ref="messageReceiver"/>
+                <xs:element ref="module"/>
+                <xs:element ref="parameter"/>
+                <xs:element ref="actionMapping"/>
+                <xs:element ref="faultActionMapping"/>
+                <xs:element ref="message"/>
+                <xs:element ref="outputActionMapping"/>
+            </xs:choice>
+            <xs:attribute name="mep" type="xs:anyURI"/>
+            <xs:attribute name="name" type="xs:NCName"/>
+            <xs:attribute name="qname" type="xs:NCName"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="actionMapping" type="xs:anyURI"/>
+    <xs:element name="faultActionMapping">
+        <xs:complexType>
+            <xs:simpleContent>
+                <xs:extension base="xs:anyURI">
+                    <xs:attribute name="faultName" use="required" type="xs:NCName"/>
+                </xs:extension>
+            </xs:simpleContent>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="message">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element ref="parameter"/>
+            </xs:sequence>
+            <xs:attribute name="label" use="required" type="xs:NCName"/>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="outputActionMapping" type="xs:anyURI"/>
+    <xs:element name="messageReceiver">
+        <xs:complexType>
+            <xs:attribute name="class" use="required" type="xs:NCName"/>
+            <xs:attribute name="mep" type="xs:anyURI"/>
+        </xs:complexType>
+    </xs:element>
+</xs:schema>
