Index: modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportSender.java
===================================================================
--- modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportSender.java	(revision 1075203)
+++ modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportSender.java	(working copy)
@@ -113,6 +113,9 @@
     }
 
     protected boolean isNonBlocking() {
+        if (log.isDebugEnabled()) {
+            log.debug("Local Transport Sender Selected");
+        }
         return false;
     }
 }
Index: modules/transport/local/src/org/apache/axis2/transport/local/LocalResponder.java
===================================================================
--- modules/transport/local/src/org/apache/axis2/transport/local/LocalResponder.java	(revision 1075203)
+++ modules/transport/local/src/org/apache/axis2/transport/local/LocalResponder.java	(working copy)
@@ -175,6 +175,27 @@
         inMessageContext.setTransportIn(initialMessageContext.getTransportIn());
         inMessageContext.setTransportOut(initialMessageContext.getTransportOut());
 
+        if (log.isDebugEnabled()) {
+            log.debug("Setting AxisServiceGroup - " + initialMessageContext.getAxisServiceGroup());
+            log.debug("Setting AxisService - " + initialMessageContext.getAxisService());
+            log.debug("Setting AxisOperation - " + initialMessageContext.getAxisOperation());
+            log.debug("Setting AxisMessage - " + initialMessageContext.getAxisOperation().
+                    getMessage(WSDLConstants.MESSAGE_LABEL_OUT_VALUE));
+            log.debug("Setting Incoming Transport name - " + Constants.TRANSPORT_LOCAL);
+            log.debug("Setting Service Context " + initialMessageContext.getServiceGroupContext().toString());
+
+            log.debug("Setting ServerSide to true");
+            log.debug("Setting " + MessageContext.TRANSPORT_OUT + " property to " +
+                    initialMessageContext.getProperty(MessageContext.TRANSPORT_OUT));
+            log.debug("Setting " + Constants.OUT_TRANSPORT_INFO + " property to " +
+                    initialMessageContext.getProperty(Constants.OUT_TRANSPORT_INFO));
+            log.debug("Setting TransportIn - " + initialMessageContext.getTransportIn());
+            log.debug("Setting TransportOut - " + initialMessageContext.getTransportOut());
+
+            log.debug("Setting ReplyTo - " + initialMessageContext.getReplyTo());
+            log.debug("Setting FaultTo - " + initialMessageContext.getFaultTo());
+        }
+
         // copy the message type property that is used by the out message to the response message
         inMessageContext.setProperty(Constants.Configuration.MESSAGE_TYPE,
                 initialMessageContext.getProperty(Constants.Configuration.MESSAGE_TYPE));
Index: modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportReceiver.java
===================================================================
--- modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportReceiver.java	(revision 1075203)
+++ modules/transport/local/src/org/apache/axis2/transport/local/LocalTransportReceiver.java	(working copy)
@@ -33,6 +33,8 @@
 import org.apache.axis2.engine.AxisEngine;
 import org.apache.axis2.transport.http.HTTPConstants;
 import org.apache.axis2.util.MessageContextBuilder;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 
 import javax.xml.stream.XMLStreamException;
 import java.io.InputStream;
@@ -40,6 +42,7 @@
 import java.io.OutputStream;
 
 public class LocalTransportReceiver {
+    protected static final Log log = LogFactory.getLog(LocalTransportReceiver.class);
     public static ConfigurationContext CONFIG_CONTEXT;
     private ConfigurationContext confContext;
     private MessageContext inMessageContext;
@@ -90,16 +93,25 @@
         MessageContext msgCtx = confContext.createMessageContext();
 
         if (this.nonBlocking) {
+            if (log.isDebugEnabled()) {
+                log.debug("Setting the in-message context as a property(" + IN_MESSAGE_CONTEXT +
+                        ") to the current message context");
+            }
             // Set the in-message context as a property to the  current message context.
             msgCtx.setProperty(IN_MESSAGE_CONTEXT, inMessageContext);
         }
 
         if (inMessageContext != null) {
+            if (log.isDebugEnabled()) {
+                log.debug("Setting the property " + HTTPConstants.MC_HTTP_SERVLETREQUEST + " to " +
+                        inMessageContext.getProperty(HTTPConstants.MC_HTTP_SERVLETREQUEST));
+                log.debug("Setting the property " + MessageContext.REMOTE_ADDR + " to " +
+                        inMessageContext.getProperty(MessageContext.REMOTE_ADDR));
+            }
             msgCtx.setProperty(HTTPConstants.MC_HTTP_SERVLETREQUEST,
                                inMessageContext.getProperty(HTTPConstants.MC_HTTP_SERVLETREQUEST));
             msgCtx.setProperty(MessageContext.REMOTE_ADDR,
                                inMessageContext.getProperty(MessageContext.REMOTE_ADDR));
-
         }
 
         TransportInDescription tIn = confContext.getAxisConfiguration().getTransportIn(
@@ -134,6 +146,15 @@
 
             msgCtx.setEnvelope(envelope);
 
+             if (log.isDebugEnabled()) {
+                log.debug("Setting incoming Transport name - " + Constants.TRANSPORT_LOCAL);
+                log.debug("Setting TransportIn - " + tIn);
+                log.debug("Setting TransportOut - " + localTransportResOut);
+                log.debug("Setting To address - " + to);
+                log.debug("Setting WSAction - " + action);
+                log.debug("Setting Envelope - " + envelope.toString());
+            }
+
             AxisEngine.receive(msgCtx);
         } catch (AxisFault e) {
             // write the fault back.
@@ -143,6 +164,10 @@
                 faultContext.setTransportOut(localTransportResOut);
                 faultContext.setProperty(MessageContext.TRANSPORT_OUT, response);
 
+                if(log.isDebugEnabled()) {
+                    log.debug("Setting FaultContext's TransportOut - " + localTransportResOut);
+                }
+
                 AxisEngine.sendFault(faultContext);
             } catch (AxisFault axisFault) {
                 // can't handle this, so just throw it
