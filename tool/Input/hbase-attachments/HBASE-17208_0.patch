From 6f8a8a40a2c2d77a2b91a7bf36d067fca0ed3713 Mon Sep 17 00:00:00 2001
From: John Leach <jleach@splicemachine.com>
Date: Wed, 30 Nov 2016 08:35:12 -0600
Subject: [PATCH] HBASE-17208 Manual Array Copy Cleanup: Automated Script

---
 .../src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java  | 4 +---
 .../apache/hadoop/hbase/client/replication/ReplicationAdmin.java  | 4 +---
 .../src/main/java/org/apache/hadoop/hbase/util/Bytes.java         | 8 ++------
 .../hadoop/hbase/master/balancer/StochasticLoadBalancer.java      | 8 ++------
 4 files changed, 6 insertions(+), 18 deletions(-)

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
index 00463f38..8e8754d 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HBaseAdmin.java
@@ -671,9 +671,7 @@ public class HBaseAdmin implements Admin {
         return splits;
       }
       splits = new byte[startKeys.length - 1][];
-      for (int i = 1; i < startKeys.length; i++) {
-        splits[i - 1] = startKeys[i];
-      }
+      System.arraycopy(startKeys, 1, splits, 0, startKeys.length - 1);
     }
     return splits;
   }
diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java
index dc1a7ad..39bceef 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/replication/ReplicationAdmin.java
@@ -500,9 +500,7 @@ public class ReplicationAdmin implements Closeable {
         return null;
       }
       byte[][] splits = new byte[startKeys.length - 1][];
-      for (int i = 1; i < startKeys.length; i++) {
-        splits[i - 1] = startKeys[i];
-      }
+      System.arraycopy(startKeys, 1, splits, 0, startKeys.length - 1);
       return splits;
     }
   }
diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java
index 626132b..c0b8565 100644
--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java
+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java
@@ -1926,12 +1926,8 @@ public class Bytes implements Comparable<Bytes> {
     if(diffBI.compareTo(splitsBI) < 0) {
       byte[] aPaddedAdditional = new byte[aPadded.length+1];
       byte[] bPaddedAdditional = new byte[bPadded.length+1];
-      for (int i = 0; i < aPadded.length; i++){
-        aPaddedAdditional[i] = aPadded[i];
-      }
-      for (int j = 0; j < bPadded.length; j++){
-        bPaddedAdditional[j] = bPadded[j];
-      }
+      System.arraycopy(aPadded, 0, aPaddedAdditional, 0, aPadded.length);
+      System.arraycopy(bPadded, 0, bPaddedAdditional, 0, bPadded.length);
       aPaddedAdditional[aPadded.length] = 0;
       bPaddedAdditional[bPadded.length] = 0;
       return iterateOnSplits(aPaddedAdditional, bPaddedAdditional, inclusive,  num);
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java
index b02aac1..e6a4341 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java
@@ -349,9 +349,7 @@ public class StochasticLoadBalancer extends BaseLoadBalancer {
 
     double currentCost = computeCost(cluster, Double.MAX_VALUE);
     curOverallCost = currentCost;
-    for (int i = 0; i < this.curFunctionCosts.length; i++) {
-      curFunctionCosts[i] = tempFunctionCosts[i];
-    }
+    System.arraycopy(tempFunctionCosts, 0, curFunctionCosts, 0, this.curFunctionCosts.length);
     LOG.info("start StochasticLoadBalancer.balancer, initCost=" + currentCost + ", functionCost="
         + functionCost());
 
@@ -383,9 +381,7 @@ public class StochasticLoadBalancer extends BaseLoadBalancer {
 
         // save for JMX
         curOverallCost = currentCost;
-        for (int i = 0; i < this.curFunctionCosts.length; i++) {
-          curFunctionCosts[i] = tempFunctionCosts[i];
-        }
+        System.arraycopy(tempFunctionCosts, 0, curFunctionCosts, 0, this.curFunctionCosts.length);
       } else {
         // Put things back the way they were before.
         // TODO: undo by remembering old values
-- 
2.9.3 (Apple Git-75)

