diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Driver.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Driver.java
index 01db92e..352d25e 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Driver.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/Driver.java
@@ -21,6 +21,7 @@ package org.apache.hadoop.hbase.mapreduce;
 import org.apache.hadoop.hbase.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.classification.InterfaceStability;
 import org.apache.hadoop.hbase.mapreduce.replication.VerifyReplication;
+import org.apache.hadoop.hbase.snapshot.ExportSnapshot;
 import org.apache.hadoop.util.ProgramDriver;
 
 /**
@@ -36,21 +37,26 @@ public class Driver {
    */
   public static void main(String[] args) throws Throwable {
     ProgramDriver pgd = new ProgramDriver();
+
     pgd.addClass(RowCounter.NAME, RowCounter.class,
-      "Count rows in HBase table");
+      "Count rows in HBase table.");
     pgd.addClass(CellCounter.NAME, CellCounter.class,
-      "Count cells in HBase table");
+      "Count cells in HBase table.");
     pgd.addClass(Export.NAME, Export.class, "Write table data to HDFS.");
     pgd.addClass(Import.NAME, Import.class, "Import data written by Export.");
     pgd.addClass(ImportTsv.NAME, ImportTsv.class, "Import data in TSV format.");
     pgd.addClass(LoadIncrementalHFiles.NAME, LoadIncrementalHFiles.class,
                  "Complete a bulk data load.");
     pgd.addClass(CopyTable.NAME, CopyTable.class,
-        "Export a table from local cluster to peer cluster");
+        "Export a table from local cluster to peer cluster.");
     pgd.addClass(VerifyReplication.NAME, VerifyReplication.class, "Compare" +
         " the data from tables in two different clusters. WARNING: It" +
         " doesn't work for incrementColumnValues'd cells since the" +
         " timestamp is changed after being appended to the log.");
+    pgd.addClass(WALPlayer.NAME, WALPlayer.class, "Replay WAL files.");
+    pgd.addClass(ExportSnapshot.NAME, ExportSnapshot.class, "Export" +
+        " the specific snapshot to a given FileSystem.");
+
     ProgramDriver.class.getMethod("driver", new Class [] {String[].class}).
       invoke(pgd, new Object[]{args});
   }
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java
index ad181f7..f71b963 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/ExportSnapshot.java
@@ -85,6 +85,8 @@ import org.apache.hadoop.util.ToolRunner;
 @InterfaceAudience.Public
 @InterfaceStability.Evolving
 public class ExportSnapshot extends Configured implements Tool {
+  public static final String NAME = "exportsnapshot";
+
   private static final Log LOG = LogFactory.getLog(ExportSnapshot.class);
 
   protected static final String MR_NUM_MAPS = "mapreduce.job.maps";
