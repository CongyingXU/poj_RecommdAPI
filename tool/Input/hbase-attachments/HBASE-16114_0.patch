commit d247c4f2bf5dece13f0fc100e82a750bcb046a72
Author: thiruvel <thiruvel@yahoo-inc.com>
Date:   Fri Jul 1 00:03:16 2016 -0700

    HBASE-16114 Get regionLocation of required regions only for MR jobs

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java
index 8d59016..148f367 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/mapreduce/TableInputFormatBase.java
@@ -276,20 +276,6 @@ extends InputFormat<ImmutableBytesWritable, Result> {
       if ( !includeRegionInSplit(keys.getFirst()[i], keys.getSecond()[i])) {
         continue;
       }
-      HRegionLocation location = regionLocator.getRegionLocation(keys.getFirst()[i], false);
-      // The below InetSocketAddress creation does a name resolution.
-      InetSocketAddress isa = new InetSocketAddress(location.getHostname(), location.getPort());
-      if (isa.isUnresolved()) {
-        LOG.warn("Failed resolve " + isa);
-      }
-      InetAddress regionAddress = isa.getAddress();
-      String regionLocation;
-      try {
-        regionLocation = reverseDNS(regionAddress);
-      } catch (NamingException e) {
-        LOG.warn("Cannot resolve the host name for " + regionAddress + " because of " + e);
-        regionLocation = location.getHostname();
-      }
 
       byte[] startRow = scan.getStartRow();
       byte[] stopRow = scan.getStopRow();
@@ -306,6 +292,21 @@ extends InputFormat<ImmutableBytesWritable, Result> {
           keys.getSecond()[i].length > 0 ?
             keys.getSecond()[i] : stopRow;
 
+        HRegionLocation location = regionLocator.getRegionLocation(keys.getFirst()[i], false);
+        // The below InetSocketAddress creation does a name resolution.
+        InetSocketAddress isa = new InetSocketAddress(location.getHostname(), location.getPort());
+        if (isa.isUnresolved()) {
+          LOG.warn("Failed resolve " + isa);
+        }
+        InetAddress regionAddress = isa.getAddress();
+        String regionLocation;
+        try {
+          regionLocation = reverseDNS(regionAddress);
+        } catch (NamingException e) {
+          LOG.warn("Cannot resolve the host name for " + regionAddress + " because of " + e);
+          regionLocation = location.getHostname();
+        }
+
         byte[] regionName = location.getRegionInfo().getRegionName();
         String encodedRegionName = location.getRegionInfo().getEncodedName();
         long regionSize = sizeCalculator.getRegionSize(regionName);
