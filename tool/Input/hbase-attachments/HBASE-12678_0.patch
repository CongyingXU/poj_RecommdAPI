diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
index 08dd0ec..bcda25c 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/util/HBaseFsck.java
@@ -49,6 +49,7 @@ import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicInteger;
 
 
+import org.apache.commons.lang.StringUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.hbase.classification.InterfaceAudience;
@@ -4225,6 +4226,8 @@ public class HBaseFsck extends Configured {
       }
     }
 
+    errors.print("HBaseFsck command line options: " + StringUtils.join(args, " "));
+
     // pre-check current user has FS write permission or not
     try {
       preCheckPermission();
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRepair.java hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRepair.java
index 14c4123..343be0d 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRepair.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/util/hbck/OfflineMetaRepair.java
@@ -19,6 +19,7 @@ package org.apache.hadoop.hbase.util.hbck;
 
 import java.io.IOException;
 
+import org.apache.commons.lang.StringUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.hbase.classification.InterfaceAudience;
@@ -110,6 +111,8 @@ public class OfflineMetaRepair {
       }
     }
 
+    System.out.println("OfflineMetaRepair command line options: " + StringUtils.join(args, " "));
+
     // Fsck doesn't shutdown and and doesn't provide a way to shutdown its
     // threads cleanly, so we do a System.exit.
     boolean success = false;
