diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java
index 51a95e4..bf98980 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java
@@ -37,6 +37,7 @@ import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.Cell;
+import org.apache.hadoop.hbase.CellUtil;
 import org.apache.hadoop.hbase.HConstants;
 import org.apache.hadoop.hbase.HRegionLocation;
 import org.apache.hadoop.hbase.HTableDescriptor;
@@ -55,6 +56,7 @@ import org.apache.hadoop.hbase.ipc.RegionCoprocessorRpcChannel;
 import org.apache.hadoop.hbase.ipc.RpcControllerFactory;
 import org.apache.hadoop.hbase.protobuf.ProtobufUtil;
 import org.apache.hadoop.hbase.protobuf.RequestConverter;
+import org.apache.hadoop.hbase.protobuf.ResponseConverter;
 import org.apache.hadoop.hbase.protobuf.generated.ClientProtos;
 import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MultiRequest;
 import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutateRequest;
@@ -586,10 +588,10 @@ public class HTable implements HTableInterface {
    */
   @Override
   public void mutateRow(final RowMutations rm) throws IOException {
-    RegionServerCallable<Void> callable =
-        new RegionServerCallable<Void>(connection, getName(), rm.getRow()) {
+    RegionServerCallable<Result> callable =
+        new RegionServerCallable<Result>(connection, getName(), rm.getRow()) {
       @Override
-      public Void call(int callTimeout) throws IOException {
+      public Result call(int callTimeout) throws IOException {
         PayloadCarryingRpcController controller = rpcControllerFactory.newController();
         controller.setPriority(tableName);
         controller.setCallTimeout(callTimeout);
@@ -608,13 +610,16 @@ public class HTable implements HTableInterface {
             }
             throw new IOException("Failed to mutate row: "+Bytes.toStringBinary(rm.getRow()), ex);
           }
+
+          return ProtobufUtil.toResult(
+            res.getResultOrExceptionList().get(0).getResult(),
+            CellUtil.createCellScanner(new Cell[0]));
         } catch (ServiceException se) {
           throw ProtobufUtil.getRemoteException(se);
         }
-        return null;
       }
     };
-    rpcCallerFactory.<Void> newCaller().callWithRetries(callable, this.operationTimeout);
+    rpcCallerFactory.<Result> newCaller().callWithRetries(callable, this.operationTimeout);
   }
 
   /**
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientPushback.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientPushback.java
index 995e3e5..3880960 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientPushback.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestClientPushback.java
@@ -99,6 +99,12 @@ public class TestClientPushback {
     p.addColumn(family, qualifier, Bytes.toBytes("value1"));
     table.put(p);
 
+    RowMutations mutations = new RowMutations(Bytes.toBytes("row"));
+    p = new Put(Bytes.toBytes("row"));
+    p.addColumn(family, qualifier, Bytes.toBytes("value2"));
+    mutations.add(p);
+    table.mutateRow(mutations);
+
     // get the current load on RS. Hopefully memstore isn't flushed since we wrote the the data
     int load = (int)((((HRegion)region).addAndGetGlobalMemstoreSize(0) * 100) / flushSizeBytes);
     LOG.debug("Done writing some data to "+tableName);
