From cadffe08300cacd73d952a7cd8d2cad9cfd2098d Mon Sep 17 00:00:00 2001
From: Elliott Clark <eclark@apache.org>
Date: Mon, 23 Nov 2015 16:48:45 -0800
Subject: [PATCH] HBASE-14871 Allow specifying the base branch for make_patch

---
 dev-support/make_patch.sh | 31 +++++++++++++++++++------------
 1 file changed, 19 insertions(+), 12 deletions(-)

diff --git a/dev-support/make_patch.sh b/dev-support/make_patch.sh
index ec2bbb9..c5e1846 100755
--- a/dev-support/make_patch.sh
+++ b/dev-support/make_patch.sh
@@ -20,18 +20,22 @@
 # Make a patch for the current branch based on its tracking branch
 
 # Process args
-while getopts "ahd:" opt; do
+while getopts "ahd:b:" opt; do
     case "$opt" in
         a)  addendum='-addendum'
             ;;
         d)  
             patch_dir=$OPTARG
             ;;
+        b)
+            tracking_branch=$OPTARG
+            ;;
         *)
             echo -e "Usage: $0 [-h] [-a] [-d] <directory> \n\
         Must be run from within the git branch to make the patch against.\n\
         -h - display these instructions.\n\
         -a - Add an 'addendum' prefix to the patch name.\n\
+        -b - Specify the base branch to diff from.\n\
         -d - specify a patch directory (defaults to ~/patches/)"
             exit 0
             ;;
@@ -54,19 +58,22 @@ if [ "$git_dirty" -ne 0 ]; then
 fi
 
 # Determine the tracking branch
-git log -n 1 origin/$branch > /dev/null 2>&1
-status=$?
-if [ "$status" -eq 128 ]; then
-    # Status 128 means there is no remote branch
-    tracking_branch='origin/master'
-elif [ "$status" -eq 0 ]; then
-    # Status 0 means there is a remote branch
-    tracking_branch="origin/$branch"
-else
-    echo "Unknown error: $?" >&2
-    exit 1
+if [ ! "$tracking_branch" ]; then
+  git log -n 1 origin/$branch > /dev/null 2>&1
+  status=$?
+  if [ "$status" -eq 128 ]; then
+      # Status 128 means there is no remote branch
+      tracking_branch='origin/master'
+  elif [ "$status" -eq 0 ]; then
+      # Status 0 means there is a remote branch
+      tracking_branch="origin/$branch"
+  else
+      echo "Unknown error: $?" >&2
+      exit 1
+  fi
 fi
 
+
 # Deal with invalid or missing $patch_dir
 if [ ! "$patch_dir" ]; then
     echo -e "Patch directory not specified. Falling back to ~/patches/."
-- 
2.6.1

