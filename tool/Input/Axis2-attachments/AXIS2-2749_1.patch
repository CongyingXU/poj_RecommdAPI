Index: modules/codegen/src/org/apache/axis2/wsdl/util/XSLTIncludeResolver.java
===================================================================
--- modules/codegen/src/org/apache/axis2/wsdl/util/XSLTIncludeResolver.java	(revision 549141)
+++ modules/codegen/src/org/apache/axis2/wsdl/util/XSLTIncludeResolver.java	(working copy)
@@ -31,8 +31,8 @@
 
     private CodeGenConfiguration configuration;
 
-    public XSLTIncludeResolver() {
-    }
+    static final String EMPTY_TEMPLATE = 
+    	"<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"/>";
 
     /** @param config  */
     public XSLTIncludeResolver(CodeGenConfiguration config) {
@@ -70,12 +70,13 @@
             return getSourceFromTemplateName(ConfigPropertyFileLoader.getTestObjectTemplateName());
         }
 
-        if (externalPropertyMap.get(href) != null) {
-            templateName = externalPropertyMap.get(href).toString();
-            if (templateName != null) {
-                supporterTemplateStream = getClass().getResourceAsStream(templateName);
-                return new StreamSource(supporterTemplateStream);
-            }
+        try {
+        	// href might be a property for a template name or it might be a template name itself
+        	Object hrefMapValue = externalPropertyMap.get(href);
+        	templateName = hrefMapValue != null ? hrefMapValue.toString() : href;
+        	return getSourceFromTemplateName(templateName);
+        } catch (TransformerException e) {
+        	// TODO: ignore?
         }
         //if nothing could be found return an empty source
         return getEmptySource();
@@ -92,11 +93,12 @@
         InputStream supporterTemplateStream;
         if (templateName != null) {
             supporterTemplateStream = getClass().getResourceAsStream(templateName);
-            return new StreamSource(supporterTemplateStream);
-        } else {
-            throw new TransformerException(
-                    CodegenMessages.getMessage("resolver.templateNotFound", templateName));
-        }
+            if (supporterTemplateStream != null) {
+            	return new StreamSource(supporterTemplateStream);
+            }
+        } 
+        throw new TransformerException(
+                CodegenMessages.getMessage("resolver.templateNotFound", templateName));
     }
 
     /**
@@ -106,6 +108,6 @@
      */
     private Source getEmptySource() {
         return new StreamSource(new ByteArrayInputStream(
-                "<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"/>".getBytes()));
+                EMPTY_TEMPLATE.getBytes()));
     }
 }
