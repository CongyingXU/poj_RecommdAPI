Index: Idea_plug-in_userguide.html
===================================================================
--- Idea_plug-in_userguide.html	(revision 446523)
+++ Idea_plug-in_userguide.html	(working copy)
@@ -1,321 +1,323 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
-      "http://www.w3.org/TR/html4/loose.dtd">
-<html>
-<head>
-  <meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
-  <meta content="text/html; charset=iso-8859-1">
-  <title>How to use IDEA plug-in</title>
-  <meta name="generator" content="amaya 9.2.1, see http://www.w3.org/Amaya/">
-</head>
-
-<body lang="en">
-<h1>Code Generator Wizard- IntelliJ IDEA Plug-in</h1>
-
-<p>This document explains installation and usage of IDEA code generation
-plug-in to create service archives and generate java class files from WSDL
-files.</p>
-
-<p><a href="http://ws.apache.org/axis2/tools/index.html">[Download
-Plug-in]</a></p>
-
-<h2>Content</h2>
-<ul>
-  <li><a href="#intro">Introduction</a></li>
-  <li><a href="#installation">Installation</a></li>
-  <li><a href="#WSDL2Java_Code_Generation">WSDL2Java Code Generation</a></li>
-  <li><a href="#Create_Service_Archive">Create a Service Archive</a>
-    <ul>
-      <li><a href="#sub12">Sub Wizard 1 &amp; Sub Wizard 2</a></li>
-      <li><a href="#sub3">Sub Wizard 3</a></li>
-    </ul>
-  </li>
-</ul>
-<a name="intro"></a>
-
-<h2>Introduction</h2>
-
-<p>Using this IntelliJ IDEA plug-in you can either create a service archive
-that can be deployed as a Web services to the Axis2 or generate a java class
-file from a WSDL file. Installation process is described first here followed
-by the above mentioned operations.</p>
-<a name="installation"></a>
-
-<h2>Installation</h2>
-
-<p>First <a href="http://ws.apache.org/axis2/tools/index.html">download</a>
-the plug-in which is a zipped file, and extract it into plugins directory in
-IDEA installation directory or plugins directory in user directory
-(user/idea/conf/plugins). If you have correctly extracted the file you would
-see a directory called Axis2 in which there should be only one directory
-called lib containing a few .jar files.</p>
-
-<p>Next step is to restart IDEA so that the changes can take place. If the
-plug-in has been installed correctly, when you restart IDEA you will see
-following icons in IDEA .</p>
-
-<p><img alt="Figure 1" src="images/idea-icons.jpg"></p>
-
-<p>Also if you right-click on editor page of IDEA you would see a link to the
-same plug-in.</p>
-
-<p><img alt="Figure2" src="images/idea-popup.jpg"></p>
-
-<p>When you click on either one of them a window (Page 1) will appear asking
-you to select one of the following two options.</p>
-<ol>
-  <li><a href="#Create_Service_Archive">Create a service archive</a></li>
-  <li><a href="#WSDL2Java_Code_Generation">WSDL2Java code generation</a></li>
-</ol>
-
-<p><strong>Page 1:</strong></p>
-
-<p><img alt="Figure3" src="images/fig1.jpg"></p>
-
-<p>If you want to create a service archive obviously you must select 'Create
-a service archive' option. Like wise, if u want to generate java class file
-from a WSDL file you must select 'WSDL2Java codegeneration'.</p>
-
-<h2><a name="WSDL2Java_Code_Generation">WSDL2Java Code Generation</a></h2>
-
-<p>Select 'WSDL2Java codegeneration' and click OK to generate code from a
-WSDL file. Then the following window will appear.</p>
-
-<p><strong>WSDL2Java Page 2:</strong></p>
-
-<p><img alt="Figure4" src="images/fig2.jpg"></p>
-
-<p>To move on to the next page the WSDL file location must be given. The
-Browse button can be used to easily browse for a file rather than having to
-type the whole path.</p>
-
-<p>Once the WSDL file is selected, click on Next button which will take you
-to the page below.</p>
-
-<p><strong>WSDL2Java Page 3:</strong></p>
-
-<p><strong>Codegen options</strong> are to be selected here. By far this is
-the most important page in this wizard, which determines the characteristics
-of the code being generated.</p>
-
-<p>Novices need not worry about these options since the most common options
-are defaulted. Advanced users will find it very easy to "turn the knobs"
-using these options.</p>
-
-<p><img alt="Figure5" src="images/fig18.jpg"></p>
-
-<p><strong>Here's some information on the options for selection:</strong></p>
-<ul>
-  <li>Output language can be Java, C#. But we have not fully tested C#
-    codegeneration, therefore, it is better to select Java as output
-  language.</li>
-  <li>Since Axis2 supports both synchronous and asynchronous client
-    programming model, the tool has provided a way to select one of the two
-    from this page.</li>
-  <li>The default data binding type is adb (Axis2 data binding). Although the
-    tool is capable of providing XML beans, due to class loading issues in
-    XML beans, current implementation only generate code with OM and adb.</li>
-  <li>As for the package name of the generated code, you can set the name as
-    you wish.</li>
-</ul>
-
-<p><strong>WSDL2Java Page 4:</strong></p>
-
-<p><img alt="Figure6" src="images/fig3.jpg"></p>
-
-<p>You can simply browse and select the output location/path (the location at
-which the code is to be generated) using the Browse button. Because of the
-Browse button you do not need to type in the output file path.</p>
-
-<p><img alt="Fig4" src="images/fig4.jpg"></p>
-
-<p>Once an output location is selected you can click on Finish button which
-will generate the java class file. If code generation is successful then a
-message box will appear acknowledging this fact a shown above.</p>
-
-<p><a name="Create_Service_Archive" id="Create_Service_Archive"></a></p>
-
-<h2>Create a Service Archive</h2>
-
-<p>Select 'create a service archive' radio button on Page 1 of Axis2 IDEA
-plug-in wizard.</p>
-
-<p><strong>Page 1:</strong></p>
-
-<p><img alt="Fig5" src="images/fig5.jpg"></p>
-
-<p><strong>Service Archive Page 2:</strong></p>
-
-<p>Page below will appear asking to select archive type</p>
-
-<p><img alt="fig6" src="images/fig6.jpg"></p>
-
-<p>In Axis2 user can deploy single service or service group. Therefore, you
-can select either single service archive or service group archive for archive
-type you want to create.</p>
-
-<p>If you already have services.xml you can skip some of the steps in the
-wizard by selecting 'I already have services.xml' and clicking on Next
-button. If you do not have services.xml, select radio button 'Generate
-services.xml' and click on Next button, in which case the tool will create
-services.xml for you.</p>
-
-<p>Depending on the options you selected on this page there can be three sub
-wizards:</p>
-<ol>
-  <li><a href="sub12">Sub wizard 1</a> (Generate single service and its
-    services.xml)</li>
-  <li><a href="sub12">Sub wizard 2</a> (Generate service group and its
-    services.xml)</li>
-  <li><a href="sub3">Sub wizard 3</a> (Generate service/service group using
-    already existing services.xml)</li>
-</ol>
-
-<p>1 &amp; 2 follow the same set of steps except for some looping mechanism
-in the middle of the wizard.</p>
-<a name="sub12"></a>
-
-<h3>Sub Wizard 1 and Sub Wizard 2</h3>
-
-<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 3:</strong></p>
-
-<p>From this page you have to select the location of the service classes
-directory, from where you compile output location. You do not need to type
-path, simply browse and select.</p>
-
-<p><img alt="fig7" src="images/fig7.jpg"></p>
-
-<p>When you click on Next button, wizard will move to the page below</p>
-
-<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 4:</strong></p>
-
-<p>Here you select service specific external libraries and service WSDL
-files. In the case of a service group you can add any number of WSDL files
-depending on the services in the service group. If you want to add multiple
-WSDL files to a single service type you can do that as well.</p>
-
-<p><img alt="fig8" src="images/fig8.jpg"></p>
-
-<p>To Add libraries first click on small (...) button to browse for library
-file and then click on Add button. Once added the selected file will appear
-in the list box.</p>
-
-<p>To add WSDLs first click on small (...) button to browse for WSDL file and
-then click Add button to add the file to the list.</p>
-
-<p>See page below:</p>
-
-<p><img alt="fig9" src="images/fig9.jpg"></p>
-
-<p>After adding external libraries and service WSDL files click on Done
-button and then Next button to move to next page.</p>
-
-<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 5:</strong></p>
-
-<p>This page allows you to select service implementation class. In the case
-of service group, same page will be looped to select multiple service
-implementation classes. This process is explained in detail below.</p>
-
-<p>Select a service implementation class by browsing and click on Load button
-to load all the public methods in that class, after which you can select the
-methods that you want to publish using the check boxes.</p>
-
-<p><img alt="fig10" src="images/fig10.jpg"></p>
-
-<p>In Service Name text box you can type the name of the service you want,
-but remember that service name should be unique through out<em></em> the
-system.</p>
-
-<p>When you have completed this particular service click Done. In the case of
-a service group when you click Done button for that particular service the
-following dialog will appear with option to add more service(s) to a service
-group.</p>
-
-<p><img alt="fig11" src="images/fig11.jpg"></p>
-
-<p>If you click Yes , you have to follow the same procedure to add some other
-service(s) to service group.</p>
-
-<p>If you click No, Next button will enable and you can go to next page.</p>
-
-<p><a name="Note"><strong><em>Note: From this point onwards the steps are
-similar to all the sub wizards.</em></strong></a></p>
-
-<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 6:</strong></p>
-
-<p>This page displays the services.xml file, either the one given by you (in
-the case of &#x201c;I already have services.xml&#x201d;) or the one generated
-by the system (in the case of "generate services.xml")</p>
-
-<p><img alt="fig12" src="images/fig12.jpg"></p>
-
-<p>This page is editable and provide a way to add parameters and module
-references to any level.</p>
-
-<p>Note : When you click on either +Parameter or +ModuleRef buttons remember
-that corresponding text will be added to the current mouse position.
-Therefore click on the location you want to add the parameter<em> </em>or<em>
-</em>module references and then click relevant button (+Parameter or
-+ModuleRef).</p>
-
-<p><strong>+Parameter button:</strong></p>
-
-<p>If you click on the +Parameter button a window will appear asking to give
-parameter name and parameter value.</p>
-
-<p><img alt="fig13" src="images/fig13.jpg"></p>
-
-<p>Note that you can also manually add parameters (without clicking on
-+Parameter button ) to any where in the document as you wish.</p>
-
-<p><strong>+ModuleRef button:</strong></p>
-
-<p>Like wise, adding module references can be done by clicking on +ModuleRef
-button in the page. You have to type the name of the module to be engaged as
-shown in the following figure.</p>
-
-<p><img alt="fig14" src="images/fig14.jpg"></p>
-
-<p>When you complete this page press the Next button to go to final page.</p>
-
-<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 7:</strong></p>
-
-<p><img alt="fig15" src="images/fig15.jpg"></p>
-
-<p>Next step is to select output file location, the location in which archive
-file should be created.</p>
-
-<p>In the Archive Name textbox, type the name of the archive file you want to
-place. This name will finally become the service group name.</p>
-
-<p>Note : Do not include file extension when you type archive name. System
-will generate that for you.</p>
-
-<p>When you are done, click the Finish button. If everything has been done
-successfully you will see following message.</p>
-
-<p><img alt="fig16" src="images/fig16.jpg"></p>
-
-<p>Note: Pages 6 &amp; 7 of sub wizards 1 &amp; 2 are common to sub wizard 3
-from its page 3 onwards.</p>
-<a name="sub3"></a>
-
-<h3>Sub Wizard 3</h3>
-
-<p>In the case where services.xml is already available, the steps are as
-follows.</p>
-
-<p><strong>Service Archive (sub wizard 3) Page 3:</strong></p>
-
-<p><img alt="fig17" src="images/fig17.jpg"></p>
-
-<p>This page allows you to select both location of services.xml and the
-location of service classes directory. Click Select buttons and browse the
-file system to find required document and location.</p>
-
-<p>Click on Next button which will take you to a page which allows you to
-edit services.xml in the same manner as 'Sub Wizard 1 &amp; Sub Wizard 2'
-section's <a href="#Note">Page 6 - edit service descriptors</a>. Note that
-Sub Wizard 3 from this point takes the same pages as 6 to 7 of Sub Wizards 1
-&amp; 2.</p>
-</body>
-</html>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
+      "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+  <meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
+  <meta content="text/html; charset=iso-8859-1">
+  <title>How to use the IDEA plug-in</title>
+  <meta name="generator" content="amaya 9.2.1, see http://www.w3.org/Amaya/">
+</head>
+
+<body lang="en">
+<h1>Code Generator Wizard- IntelliJ IDEA Plug-in</h1>
+
+<p>This document explains installation and usage of IDEA code generation
+plug-in to create service archives and generate java class files from WSDL
+files.</p>
+
+<p><a href="http://ws.apache.org/axis2/tools/index.html">[Download
+Plug-in]</a></p>
+
+<h2>Content</h2>
+<ul>
+  <li><a href="#intro">Introduction</a></li>
+  <li><a href="#installation">Installation</a></li>
+  <li><a href="#WSDL2Java_Code_Generation">WSDL2Java Code Generation</a></li>
+  <li><a href="#Create_Service_Archive">Create a Service Archive</a>
+    <ul>
+      <li><a href="#sub12">Sub Wizard 1 &amp; Sub Wizard 2</a></li>
+      <li><a href="#sub3">Sub Wizard 3</a></li>
+    </ul>
+  </li>
+</ul>
+<a name="intro"></a>
+
+<h2>Introduction</h2>
+
+<p>Using this IntelliJ IDEA plug-in you can either create a service archive
+that can be deployed as a web services to Axis2 or generate a java class
+file from a WSDL file. Installation process is described first here followed
+by the above mentioned operations.</p>
+<a name="installation"></a>
+
+<h2>Installation</h2>
+
+<p>First <a href="http://ws.apache.org/axis2/tools/index.html">download</a>
+the plug-in which is a zipped file, and extract it into plugins directory in
+IDEA installation directory or plugins directory in user directory
+(user/idea/conf/plugins). If you have correctly extracted the file you would
+see a directory called Axis2 in which there should be only one directory
+called lib containing a few .jar files.</p>
+
+<p>Next step is to restart IDEA so that the changes can take place. If the
+plug-in has been installed correctly, when you restart IDEA you will see
+following icons in IDEA .</p>
+
+<p><img alt="Figure 1" src="images/idea-icons.jpg"></p>
+
+<p>Also if you right-click on editor page of IDEA you would see a link to the
+same plug-in.</p>
+
+<p><img alt="Figure2" src="images/idea-popup.jpg"></p>
+
+<p>When you click on either one of them, a window (Page 1) will appear asking
+you to select one of the following two options.</p>
+<ol>
+  <li><a href="#Create_Service_Archive">Create a service archive</a></li>
+  <li><a href="#WSDL2Java_Code_Generation">WSDL2Java code generation</a></li>
+</ol>
+
+<p><strong>WSDL2Java Page 1:</strong></p>
+
+<p><img alt="Figure3" src="images/fig1.jpg"></p>
+
+<p>If you want to create a service archive obviously you must select "Create
+a service archive" option. Like wise, if u want to generate java class file
+from a WSDL file you must select the radio button option "WSDL2Java codegeneration".</p>
+
+<h2><a name="WSDL2Java_Code_Generation">WSDL2Java Code Generation</a></h2>
+
+<p>Select "WSDL2Java codegeneration" and click on the button "OK" to generate code from a
+WSDL file. Then the following window will appear.</p>
+
+<p><strong>WSDL2Java Page 2:</strong></p>
+
+<p><img alt="Figure4" src="images/fig2.jpg"></p>
+
+<p>To move on to the next page the WSDL file location must be given. The
+"Browse" button can be used to easily browse for a file rather than having to
+type the whole path.</p>
+
+<p>Once the WSDL file is selected, click on the "Next" button which will take you
+to the page below.</p>
+
+<p><strong>WSDL2Java Page 3:</strong></p>
+
+<p><strong>Codegen options</strong> are to be selected here. By far this is
+the most important page in this wizard, which determines the characteristics
+of the code being generated.</p>
+
+<p>Novices need not worry about these options since the most common options
+are defaulted. Advanced users will find it very easy to "turn the knobs"
+using these options.</p>
+
+<p><img alt="Figure5" src="images/fig18.jpg"></p>
+
+<p><strong>Here's some information on the options for selection:</strong></p>
+<ul>
+  <li>Output language can be Java, C#. But we have not fully tested C#
+    codegeneration, therefore, it is better to select Java as output
+  language.</li>
+  <li>Since Axis2 supports both synchronous and asynchronous client
+    programming model, the tool has provided a way to select one of the two
+    from this page.</li>
+  <li>The default data binding type is adb (Axis2 data binding). Although the
+    tool is capable of providing XML beans, due to class loading issues in
+    XML beans, current implementation only generate code with OM and adb.</li>
+  <li>As for the package name of the generated code, you can set the name as
+    you wish.</li>
+</ul>
+
+<p><strong>WSDL2Java Page 4:</strong></p>
+
+<p><img alt="Figure6" src="images/fig3.jpg"></p>
+
+<p>You can simply browse and select the output location/path (the location at
+which the code is to be generated) using the "Browse" button. Because of the
+"Browse" button you do not need to type in the output file path.</p>
+
+<p><img alt="Fig4" src="images/fig4.jpg"></p>
+
+<p>Once an output location is selected you can click on "Finish" button which
+will generate the java class file. If code generation is successful then a
+message box will appear acknowledging this fact a shown above.</p>
+
+<p><a name="Create_Service_Archive" id="Create_Service_Archive"></a></p>
+
+<h2>Create a Service Archive</h2>
+
+<p>Select the "Create a service archive" radio button on Page 1 of Axis2 IDEA
+plug-in wizard.</p>
+
+<p><strong>Service Archive Page 1:</strong></p>
+
+<p><img alt="Fig5" src="images/fig5.jpg"></p>
+
+<p><strong>Service Archive Page 2:</strong></p>
+
+<p>The page below will appear asking the user to select the archive type</p>
+
+<p><img alt="fig6" src="images/fig6.jpg"></p>
+
+<p>In Axis2, the user can deploy a single service or a service group. Therefore, you
+can select either "Single service archive" or "Service group archive" for the archive
+type you want to create.</p>
+
+<p>If you already have a services.xml you can skip some of the steps in the
+wizard by selecting the radio button option "I already have services.xml" and clicking on "Next"
+button. If you do not have the services.xml, select the radio button option "Generate
+services.xml" and click on the "Next" button, in which case the tool will create the 
+services.xml for you.</p>
+
+<p>Depending on the options you selected on this page there can be three sub
+wizards:</p>
+<ol>
+  <li><a href="#subwizard_1_subwizard_2">Sub wizard 1</a> (Generates a single service and its
+    services.xml)</li>
+  <li><a href="#subwizard_1_subwizard_2">Sub wizard 2</a> (Generates a service group and its
+    services.xml)</li>
+  <li><a href="#subwizard_3">Sub wizard 3</a> (Generates a service/service group using
+    already existing services.xml)</li>
+</ol>
+
+<p>1 &amp; 2 follow the same set of steps except for some looping mechanism
+in the middle of the wizard.</p>
+<a name="sub12"></a>
+
+<h3><a name=subwizard_1_subwizard_2>Sub Wizard 1 and Sub Wizard 2</a></h3>
+
+<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 3:</strong></p>
+
+<p>From this page you have to select the location of the service classes, from where you compile the output location. You do not need to type
+path, simply browse and select.</p>
+
+<p><img alt="fig7" src="images/fig7.jpg"></p>
+
+<p>When you click on "Next" button, wizard will move to the page below</p>
+
+<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 4:</strong></p>
+
+<p>Here you select service specific external libraries and service WSDL
+files. In the case of a service group you can add any number of WSDL files
+depending on the services in the service group. If you want to add multiple
+WSDL files to a single service type you can do that as well.</p>
+
+<p><img alt="fig8" src="images/fig8.jpg"></p>
+
+<p>To add libraries first click on the small (...) button to browse for library
+files and then click on the "Add" button. Once added the selected file will appear
+in the list box.</p>
+
+<p>To add WSDLs first click on the small (...) button to browse for WSDL file and
+then click the "Add" button to add the file to the list.</p>
+
+<p>See page below:</p>
+
+<p><img alt="fig9" src="images/fig9.jpg"></p>
+
+<p>After adding external libraries and service WSDL files click on the "Done"
+button and then on the "Next" button to move to next page.</p>
+
+<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 5:</strong></p>
+
+<p>This page allows you to select service implementation class. In the case
+of service group, same page will be looped to select multiple service
+implementation classes. This process is explained in detail below.</p>
+
+<p>Select a service implementation class by browsing and clicking on the "Load" button
+to load all the public methods in that class, after which you can select the
+methods that you want to publish using the check boxes.</p>
+
+<p><strong>Note : </strong>If you do not select the correct class path<em></em> from 
+the "Class location selection" window, the public methods which are available in the selected<em></em> class
+file will not be loaded.</p>
+
+<p><img alt="fig10" src="images/fig10.jpg"></p>
+
+<p>In "Service Name" text box you can type the name of the service you want,
+but remember that the service name should be unique throughout<em></em> the
+system.</p>
+
+<p>When you have completed this particular service click on the button "Done". In the case of
+a service group when you click on the "Done" button for that particular service the
+following dialog will appear with option to add more service(s) to a service
+group.</p>
+
+<p><img alt="fig11" src="images/fig11.jpg"></p>
+
+<p>If you click on "Yes", you have to follow the same procedure to add some other
+service(s) to service group.</p>
+
+<p>If you click on "No", the button "Next" will be enabled and you can go to next page.</p>
+
+<p><a name="Note"><strong><em>Note: From this point onwards the steps are
+similar to all the sub wizards.</em></strong></a></p>
+
+<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 6:</strong></p>
+
+<p>This page displays the services.xml file, either the one given by you (in
+the case of &#x201c;I already have services.xml&#x201d;) or the one generated
+by the system (in the case of "generate services.xml")</p>
+
+<p><img alt="fig12" src="images/fig12.jpg"></p>
+
+<p>This page is editable and provide a way to add parameters and module
+references to any level.</p>
+
+<p><strong>Note : </strong>When you click on either the "+Parameter" or the "+ModuleRef" buttons remember
+that corresponding text will be added to the current mouse position.
+Therefore click on the location you want to add the parameter<em> </em>or<em>
+</em>module references and then click relevant button (+Parameter or
++ModuleRef).</p>
+
+<p><strong>+Parameter button:</strong></p>
+
+<p>If you click on the "+Parameter" button a window will appear asking to give
+parameter name and parameter value.</p>
+
+<p><img alt="fig13" src="images/fig13.jpg"></p>
+
+<p>Note that you can also manually add parameters (without clicking on the "+Parameter" button ) to any where in the document as you wish.</p>
+
+<p><strong>+ModuleRef button:</strong></p>
+
+<p>Like wise, adding module references can be done by clicking on the "+ModuleRef"
+button in the page. You have to type the name of the module to be engaged as
+shown in the following figure.</p>
+
+<p><img alt="fig14" src="images/fig14.jpg"></p>
+
+<p>When you complete this page press the "Next" button to go to final page.</p>
+
+<p><strong>Service Archive (sub wizards 1 &amp; 2) Page 7:</strong></p>
+
+<p><img alt="fig15" src="images/fig15.jpg"></p>
+
+<p>Next step is to select output file location, the location in which archive
+file should be created.</p>
+
+<p>In the "Archive Name" text box, type the name of the archive file you want to
+place. This name will finally become the service group name.</p>
+
+<p><strong>Note : Do not include file extension when you type archive name. System
+will generate that for you.</strong></p>
+
+<p>When you are done, click the Finish button. If everything has been done
+successfully you will see following message.</p>
+
+<p><img alt="fig16" src="images/fig16.jpg"></p>
+
+<p><strong>Note: Pages 6 &amp; 7 of sub wizards 1 &amp; 2 are common to sub wizard 3
+from its page 3 onwards.</strong></p>
+<a name="sub3"></a>
+
+<h3><a name="subwizard_3">Sub Wizard 3</a></h3>
+
+<p>In the case where services.xml is already available, the steps are as
+follows.</p>
+
+<p><strong>Service Archive (sub wizard 3) Page 3:</strong></p>
+
+<p><img alt="fig17" src="images/fig17.jpg"></p>
+
+<p>This page allows you to select both location of services.xml and the
+location of service classes directory. Click on the "Select" buttons and browse the
+file system to find required document and location.</p>
+
+<p>Click on the "Next" button which will take you to a page which allows you to
+edit the services.xml in the same manner as "Sub Wizard 1 &amp; Sub Wizard 2"
+section's <a href="#Note">Page 6 - Edit service descriptors</a>. Note that
+Sub Wizard 3 from this point takes the same pages as 6 to 7 of Sub Wizards 1
+&amp; 2.</p>
+</body>
+</html>
