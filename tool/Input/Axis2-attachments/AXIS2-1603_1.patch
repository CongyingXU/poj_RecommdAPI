Index: C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/factory/MethodMarshallerFactory.java
===================================================================
--- C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/factory/MethodMarshallerFactory.java	(revision 473726)
+++ C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/marshaller/factory/MethodMarshallerFactory.java	(working copy)
@@ -24,27 +24,62 @@
 import org.apache.axis2.jaxws.marshaller.MethodMarshaller;
 import org.apache.axis2.jaxws.marshaller.impl.DocLitBareMethodMarshallerImpl;
 import org.apache.axis2.jaxws.marshaller.impl.DocLitWrappedMethodMarshallerImpl;
+import org.apache.axis2.jaxws.marshaller.impl.RPCLitMethodMarshallerImpl;
+import org.apache.axis2.jaxws.marshaller.impl.alt.DocLitBareMethodMarshaller;
+import org.apache.axis2.jaxws.marshaller.impl.alt.DocLitWrappedMethodMarshaller;
+import org.apache.axis2.jaxws.marshaller.impl.alt.RPCLitMethodMarshaller;
 import org.apache.axis2.jaxws.message.Protocol;
 
 
+/**
+ * The MethodMarshallerFactory creates a Doc/Lit Wrapped, Doc/Lit Bare or RPC Marshaller using SOAPBinding information
+ */
 public class MethodMarshallerFactory {
 
-	public MethodMarshallerFactory() {
-		super();
-		
-	}
-	
-	public MethodMarshaller createDocLitMethodMarshaller(SOAPBinding.ParameterStyle style, ServiceDescription serviceDesc, EndpointDescription endpointDesc, OperationDescription operationDesc, Protocol protocol){
-		if(style == SOAPBinding.ParameterStyle.WRAPPED){
-			return new DocLitWrappedMethodMarshallerImpl(serviceDesc, endpointDesc, operationDesc, protocol);
+    private static final boolean ALT_RPCLIT = false;
+    private static final boolean ALT_DOCLIT_WRAPPED = false;
+    private static final boolean ALT_DOCLIT_BARE = false;
+    
+	/**
+	 * Intentionally private
+	 */
+	private MethodMarshallerFactory() {	
+    }
+   
+    /**
+     * Create Marshaller usining the Binding information
+     * @param binding
+     * @param serviceDesc
+     * @param endpointDesc
+     * @param operationDesc
+     * @param protocol
+     * @return
+     */
+    public static MethodMarshaller createMethodMarshaller(SOAPBinding.Style style, 
+            SOAPBinding.ParameterStyle paramStyle,
+            ServiceDescription serviceDesc, 
+            EndpointDescription endpointDesc, 
+            OperationDescription operationDesc, 
+            Protocol protocol){
+		if (style == SOAPBinding.Style.RPC) {
+            if (ALT_RPCLIT) {
+                return new RPCLitMethodMarshaller(serviceDesc, endpointDesc, operationDesc, protocol);  
+            } else {
+                return new RPCLitMethodMarshallerImpl(serviceDesc, endpointDesc, operationDesc, protocol);
+            }
+        } else if (paramStyle == SOAPBinding.ParameterStyle.WRAPPED){
+            if (ALT_DOCLIT_WRAPPED) {
+                return new DocLitWrappedMethodMarshaller(serviceDesc, endpointDesc, operationDesc, protocol);
+            } else {
+                return new DocLitWrappedMethodMarshallerImpl(serviceDesc, endpointDesc, operationDesc, protocol);
+            }
+		} else if (paramStyle == SOAPBinding.ParameterStyle.BARE){
+            if (ALT_DOCLIT_BARE) {
+                return new DocLitBareMethodMarshaller(serviceDesc, endpointDesc, operationDesc, protocol);
+            } else {
+                return new DocLitBareMethodMarshallerImpl(serviceDesc, endpointDesc, operationDesc, protocol);
+            }
 		}
-		if(style == SOAPBinding.ParameterStyle.BARE){
-			return new DocLitBareMethodMarshallerImpl(serviceDesc, endpointDesc, operationDesc, protocol);
-		}
 		return null;
 	}
-	
-	public MethodMarshaller createRPCLitMethodMarshaller(SOAPBinding.ParameterStyle style, ServiceDescription serviceDesc, EndpointDescription endpointDesc, OperationDescription operationDesc, Protocol protocol){
-		throw new UnsupportedOperationException("RPC/LIT not supported");
-	}
 }
Index: C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/server/dispatcher/JavaBeanDispatcher.java
===================================================================
--- C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/server/dispatcher/JavaBeanDispatcher.java	(revision 473726)
+++ C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/server/dispatcher/JavaBeanDispatcher.java	(working copy)
@@ -19,6 +19,7 @@
 import java.lang.reflect.Method;
 
 import javax.jws.soap.SOAPBinding.ParameterStyle;
+import javax.jws.soap.SOAPBinding.Style;
 import javax.xml.namespace.QName;
 import javax.xml.ws.soap.SOAPBinding;
 
@@ -201,11 +202,13 @@
 		if(isDocLitWrapped(endpointDesc, operationDesc)){
 			parameterStyle = javax.jws.soap.SOAPBinding.ParameterStyle.WRAPPED;
 		}
-		return cf.createDocLitMethodMarshaller(parameterStyle, serviceDesc, endpointDesc, operationDesc, protocol);
+        return cf.createMethodMarshaller(Style.DOCUMENT, parameterStyle, 
+                serviceDesc, endpointDesc, operationDesc, protocol);
 	}
 	
 	private MethodMarshaller createRPCLitMessageConvertor(MethodMarshallerFactory cf, Protocol protocol){
-		return cf.createDocLitMethodMarshaller(null, serviceDesc, endpointDesc, operationDesc, protocol);
+        return cf.createMethodMarshaller(Style.RPC, ParameterStyle.WRAPPED, 
+                serviceDesc, endpointDesc, operationDesc, protocol);
 	}
 	
     
Index: C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/registry/FactoryRegistry.java
===================================================================
--- C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/registry/FactoryRegistry.java	(revision 473726)
+++ C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/registry/FactoryRegistry.java	(working copy)
@@ -56,8 +56,7 @@
 		table.put(MessageFactory.class, new MessageFactoryImpl());
 		table.put(XMLPartFactory.class, new XMLPartFactoryImpl());
 		table.put(SAAJConverterFactory.class, new SAAJConverterFactoryImpl());
-		table.put(MethodMarshallerFactory.class, new MethodMarshallerFactory());
-		table.put(EndpointLifecycleManagerFactory.class, new EndpointLifecycleManagerFactory());
+	    table.put(EndpointLifecycleManagerFactory.class, new EndpointLifecycleManagerFactory());
 	}
 	/**
 	 * FactoryRegistry is currently a static singleton
Index: C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/client/proxy/JAXWSProxyHandler.java
===================================================================
--- C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/client/proxy/JAXWSProxyHandler.java	(revision 473726)
+++ C:/workspace/live/axis2/modules/jaxws/src/org/apache/axis2/jaxws/client/proxy/JAXWSProxyHandler.java	(working copy)
@@ -408,11 +408,13 @@
 		}
 		//FIXME: The protocol should actually come from the binding information included in
 	    // either the WSDL or an annotation.
-		return cf.createDocLitMethodMarshaller(parameterStyle, serviceDesc, endpointDesc, operationDesc, Protocol.soap11);
+		return cf.createMethodMarshaller(SOAPBinding.Style.DOCUMENT, parameterStyle, 
+                serviceDesc, endpointDesc, operationDesc, Protocol.soap11);
 	}
 	
 	private MethodMarshaller createRPCLitMethodMarshaller(MethodMarshallerFactory cf){
-		return cf.createDocLitMethodMarshaller(null, serviceDesc, endpointDesc, operationDesc, Protocol.soap11);
+		return cf.createMethodMarshaller(SOAPBinding.Style.DOCUMENT, SOAPBinding.ParameterStyle.WRAPPED,
+                serviceDesc, endpointDesc, operationDesc, Protocol.soap11);
 	}
 	protected boolean isDocLitBare(){
 		SOAPBinding.ParameterStyle methodParamStyle = operationDesc.getSoapBindingParameterStyle();
