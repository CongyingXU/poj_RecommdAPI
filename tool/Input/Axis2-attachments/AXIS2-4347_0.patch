Index: modules/kernel/src/org/apache/axis2/description/AxisServiceGroup.java
===================================================================
--- modules/kernel/src/org/apache/axis2/description/AxisServiceGroup.java	(revision 774182)
+++ modules/kernel/src/org/apache/axis2/description/AxisServiceGroup.java	(working copy)
@@ -146,7 +146,8 @@
         AxisService service = getService(name);
 
         if (service != null) {
-            getAxisConfiguration().notifyObservers(AxisEvent.SERVICE_REMOVE, service);
+            getAxisConfiguration().notifyObservers(new AxisEvent(AxisEvent.SERVICE_REMOVE,service),
+                    service);
         }
 
         removeChild(name);
Index: modules/kernel/src/org/apache/axis2/description/AxisDescription.java
===================================================================
--- modules/kernel/src/org/apache/axis2/description/AxisDescription.java	(revision 774182)
+++ modules/kernel/src/org/apache/axis2/description/AxisDescription.java	(working copy)
@@ -26,6 +26,7 @@
 import org.apache.axiom.om.OMText;
 import org.apache.axis2.AxisFault;
 import org.apache.axis2.engine.AxisConfiguration;
+import org.apache.axis2.engine.AxisEvent;
 import org.apache.axis2.i18n.Messages;
 import org.apache.axis2.modules.Module;
 import org.apache.axis2.util.JavaUtils;
@@ -431,6 +432,8 @@
      */
     public void engageModule(AxisModule axisModule) throws AxisFault {
         engageModule(axisModule, this);
+        AxisConfiguration config = getAxisConfiguration();
+        config.notifyObservers(new AxisEvent(AxisEvent.MODULE_ENGAGED , this) , axisModule);
     }
 
     /**
@@ -511,6 +514,12 @@
             onDisengage(module);
             engagedModules.remove(Utils.getModuleName(module.getName(), module
                     .getVersion()));
+            /**
+             * if a Disengaged module belogs to an AxisService or an Operation
+             * notify with a serviceUpdate
+             */
+           getAxisConfiguration().notifyObservers(new AxisEvent(AxisEvent.MODULE_DISENGAGED , this)
+                   ,module);
         }
     }
 
Index: modules/kernel/src/org/apache/axis2/engine/AxisEvent.java
===================================================================
--- modules/kernel/src/org/apache/axis2/engine/AxisEvent.java	(revision 774182)
+++ modules/kernel/src/org/apache/axis2/engine/AxisEvent.java	(working copy)
@@ -20,6 +20,8 @@
 
 package org.apache.axis2.engine;
 
+import org.apache.axis2.description.AxisDescription;
+
 public class AxisEvent {
 
     /**
@@ -32,14 +34,32 @@
     public static final int SERVICE_START = 3;
     public static final int MODULE_DEPLOY = 4;
     public static final int MODULE_REMOVE = 5;
+    public static final int MODULE_ENGAGED = 6;
+    public static final int MODULE_DISENGAGED = 7;
     private int EVENT_TYPE;
-
-    public AxisEvent(int EVENT_TYPE) {
+    /**
+     * hold a reference to the AxisDiscription
+     * that the AxisEvent must carry ot the Observer
+     * this referrece can be null of not needed
+     */
+    private AxisDescription axisDiscription;
+    /**
+     * Axis event is an immutable Object Which reprecent a Events
+     * like SERVICE DEPLOY, UNDEPOLY etc
+     * @param EVENT_TYPE
+     * @param axisDescription carries the information about the axis discription that the observer
+     * must know with the current event , may be null
+     */
+    public AxisEvent(int EVENT_TYPE , AxisDescription axisDescription) {
         this.EVENT_TYPE = EVENT_TYPE;
+        this.axisDiscription = axisDescription;
     }
 
     public int getEventType() {
         return EVENT_TYPE;
     }
 
+    public AxisDescription getAxisDiscription() {
+        return axisDiscription;
+    }
 }
Index: modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java
===================================================================
--- modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java	(revision 774182)
+++ modules/kernel/src/org/apache/axis2/engine/AxisConfiguration.java	(working copy)
@@ -250,7 +250,7 @@
         } else { // Calculate the module version from the name
             allModules.put(Utils.getModuleName(module.getName(), module.getVersion()), module);
         }
-        notifyObservers(AxisEvent.MODULE_DEPLOY, module);
+        notifyObservers(new AxisEvent(AxisEvent.MODULE_DEPLOY,null), module);
 
         // Registering the policy namespaces that the module understand
         registerModulePolicySupport(module);
@@ -322,7 +322,7 @@
     public synchronized void addServiceGroup(AxisServiceGroup axisServiceGroup)
             throws AxisFault {
         axisServiceGroup.setParent(this);
-        notifyObservers(AxisEvent.SERVICE_DEPLOY, axisServiceGroup);
+        notifyObservers(new AxisEvent(AxisEvent.SERVICE_DEPLOY , axisServiceGroup), axisServiceGroup);
         AxisService axisService;
 
         Iterator<AxisService> services = axisServiceGroup.getServices();
@@ -386,7 +386,7 @@
             }
 
             if (!axisService.isClientSide()) {
-                notifyObservers(AxisEvent.SERVICE_DEPLOY, axisService);
+                notifyObservers(new AxisEvent(AxisEvent.SERVICE_DEPLOY ,axisService), axisService);
             }
         }
         // serviceGroups.put(axisServiceGroup.getServiceGroupName(),
@@ -430,7 +430,7 @@
             AxisService axisService = (AxisService) services.next();
             allServices.remove(axisService.getName());
             if (!axisService.isClientSide()) {
-                notifyObservers(AxisEvent.SERVICE_REMOVE, axisService);
+                notifyObservers(new AxisEvent(AxisEvent.SERVICE_REMOVE , axisService), axisService);
             } else {
                 isClientSide = true;
             }
@@ -447,7 +447,8 @@
         }
         removeChild(serviceGroupName);
         if (!isClientSide) {
-            notifyObservers(AxisEvent.SERVICE_REMOVE, axisServiceGroup);
+            notifyObservers(new AxisEvent(AxisEvent.SERVICE_REMOVE , axisServiceGroup),
+                    axisServiceGroup);
         }
 
         return axisServiceGroup;
@@ -559,8 +560,7 @@
         }
     }
 
-    public void notifyObservers(int event_type, AxisService service) {
-        AxisEvent event = new AxisEvent(event_type);
+    public void notifyObservers(AxisEvent event, AxisService service) {
 
         for (int i = 0; i < observersList.size(); i++) {
             AxisObserver axisObserver = (AxisObserver) observersList.get(i);
@@ -576,9 +576,9 @@
         }
     }
 
-    public void notifyObservers(int event_type, AxisModule moule) {
-        AxisEvent event = new AxisEvent(event_type);
+    public void notifyObservers(AxisEvent event, AxisModule moule) {
 
+
         for (int i = 0; i < observersList.size(); i++) {
             AxisObserver axisObserver = (AxisObserver) observersList.get(i);
 
@@ -591,8 +591,7 @@
         }
     }
 
-    public void notifyObservers(int event_type, AxisServiceGroup serviceGroup) {
-        AxisEvent event = new AxisEvent(event_type);
+    public void notifyObservers(AxisEvent event , AxisServiceGroup serviceGroup) {
 
         for (int i = 0; i < observersList.size(); i++) {
             AxisObserver axisObserver = (AxisObserver) observersList.get(i);
@@ -1116,7 +1115,7 @@
                                                     serviceName));
         }
         service.setActive(false);
-        notifyObservers(AxisEvent.SERVICE_STOP, service);
+        notifyObservers(new AxisEvent(AxisEvent.SERVICE_STOP ,service ), service);
     }
 
     public void startService(String serviceName) throws AxisFault {
@@ -1126,7 +1125,7 @@
                                                     serviceName));
         }
         service.setActive(true);
-        notifyObservers(AxisEvent.SERVICE_START, service);
+        notifyObservers(new AxisEvent(AxisEvent.SERVICE_START , service), service);
     }
 
     public List<AxisModule> getModulesForPolicyNamesapce(String namesapce) {
