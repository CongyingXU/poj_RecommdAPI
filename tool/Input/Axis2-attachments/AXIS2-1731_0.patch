Index: C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/MDQConstants.java
===================================================================
--- C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/MDQConstants.java	(revision 475937)
+++ C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/MDQConstants.java	(working copy)
@@ -36,4 +36,8 @@
     public static final String PROVIDER_SOURCE = "Provider<Source>";
     public static final String PROVIDER_SOAP = "Provider<SOAPMessage>";
     public static final String PROVIDER_DATASOURCE = "Provider<javax.activation.DataSource>";
+
+    public static final String WSDL_FILE_NAME = "WSDL_FILE_NAME";
+    public static final String SCHEMA_DOCS = "SCHEMA_DOCS";
+    public static final String WSDL_COMPOSITE = "WSDL_COMPOSITE";
 }
Index: C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/WsdlGenerator.java
===================================================================
--- C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/WsdlGenerator.java	(revision 475937)
+++ C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/WsdlGenerator.java	(working copy)
@@ -1,8 +1,8 @@
 package org.apache.axis2.jaxws.description.builder;
 
-import javax.wsdl.Definition;
+import javax.xml.ws.WebServiceException;
 
 public interface WsdlGenerator {
 
-	public Definition generateWsdl(Class implClass);
+	public WsdlComposite generateWsdl(String implClass)throws WebServiceException;
 }
Index: C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/WsdlComposite.java
===================================================================
--- C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/WsdlComposite.java	(revision 0)
+++ C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/builder/WsdlComposite.java	(revision 0)
@@ -0,0 +1,63 @@
+package org.apache.axis2.jaxws.description.builder;
+
+import java.util.HashMap;
+import javax.wsdl.Definition;
+import org.apache.axiom.om.OMDocument;
+
+public class WsdlComposite {
+
+	Definition wsdlDefinition;
+	
+	HashMap <String, OMDocument> schemaMap;
+	
+	String wsdlFileName;
+
+	public WsdlComposite() {
+		super();
+		// TODO Auto-generated constructor stub
+	}
+
+	/**
+	 * @return Returns the schemaMap.
+	 */
+	public HashMap<String, OMDocument> getSchemaMap() {
+		return schemaMap;
+	}
+
+	/**
+	 * @return Returns the wsdlDefinition.
+	 */
+	public Definition getWsdlDefinition() {
+		return wsdlDefinition;
+	}
+
+	/**
+	 * @return Returns the wsdlFileName.
+	 */
+	public String getWsdlFileName() {
+		return wsdlFileName;
+	}
+
+	/**
+	 * @param schemaMap The schemaMap to set.
+	 */
+	public void setSchemaMap(HashMap<String, OMDocument> schemaMap) {
+		this.schemaMap = schemaMap;
+	}
+
+	/**
+	 * @param wsdlDefinition The wsdlDefinition to set.
+	 */
+	public void setWsdlDefinition(Definition wsdlDefinition) {
+		this.wsdlDefinition = wsdlDefinition;
+	}
+
+	/**
+	 * @param wsdlFileName The wsdlFileName to set.
+	 */
+	public void setWsdlFileName(String wsdlFileName) {
+		this.wsdlFileName = wsdlFileName;
+	}
+	
+	
+}
Index: C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/impl/EndpointDescriptionImpl.java
===================================================================
--- C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/impl/EndpointDescriptionImpl.java	(revision 475937)
+++ C:/wasx/axis2/modules/jaxws/src/org/apache/axis2/jaxws/description/impl/EndpointDescriptionImpl.java	(working copy)
@@ -55,6 +55,7 @@
 import org.apache.axis2.jaxws.description.ServiceDescriptionWSDL;
 import org.apache.axis2.jaxws.description.builder.DescriptionBuilderComposite;
 import org.apache.axis2.jaxws.description.builder.MDQConstants;
+import org.apache.axis2.jaxws.description.builder.WsdlComposite;
 import org.apache.axis2.jaxws.i18n.Messages;
 import org.apache.axis2.jaxws.util.WSDL4JWrapper;
 import org.apache.commons.logging.Log;
@@ -241,17 +242,24 @@
         
         buildDescriptionHierachy();
         
-        //Invoke the callback for generating the wsdl
+    	WsdlComposite wsdlComposite = null;
+        
+    	//Invoke the callback for generating the wsdl
         if (composite.getCustomWsdlGenerator() != null) {
-        	Definition wsdlDef = 
-        		composite.getCustomWsdlGenerator().generateWsdl((Class)axisService.getParameterValue(MDQConstants.SERVICE_CLASS));
+        	wsdlComposite = 
+        		composite.getCustomWsdlGenerator().generateWsdl((String)axisService.getParameterValue(MDQConstants.SERVICE_CLASS));
    					
+        	Definition wsdlDef = wsdlComposite.getWsdlDefinition();
+        	
         	try {
     			WSDL4JWrapper wsdl4jWrapper = new WSDL4JWrapper(composite.getWsdlURL(), wsdlDef);
     			getServiceDescriptionImpl().setGeneratedWsdlWrapper(wsdl4jWrapper);
             } catch (Exception e) {
                 throw ExceptionFactory.makeWebServiceException("EndpointDescriptionImpl: WSDLException thrown when attempting to instantiate WSDL4JWrapper ");
             }
+        } else {
+        	//TODO:Determine if we should always throw an exception on this, or at this point
+            //throw ExceptionFactory.makeWebServiceException("EndpointDescriptionImpl: Unable to find custom WSDL generator");
         }
 
         //Save the WSDL Definition
@@ -276,9 +284,33 @@
         wsdlLocationParameter.setName(MDQConstants.WSDL_LOCATION);
         wsdlLocationParameter.setValue(getAnnoWebServiceWSDLLocation());
 
+        //Save the WSDL File Name
+        //REVIEW: is it possible this won't always be set
+        Parameter wsdlFileName = new Parameter();
+        wsdlFileName.setName(MDQConstants.WSDL_FILE_NAME);
+        
+        //Save the Schema Doc
+        //REVIEW: is it possible this won't always be set
+        Parameter schemaDocs = new Parameter();
+        schemaDocs.setName(MDQConstants.SCHEMA_DOCS);
+        
+        //Save the WSDL Composite
+        //REVIEW: is it possible this won't always be set
+        Parameter wsdlCompositeParameter = new Parameter();
+        wsdlCompositeParameter.setName(MDQConstants.WSDL_COMPOSITE);
+        wsdlCompositeParameter.setValue(wsdlComposite);
+        
+        if (wsdlComposite != null) {
+        	wsdlFileName.setValue(wsdlComposite.getWsdlFileName());
+        	schemaDocs.setValue(wsdlComposite.getSchemaMap());
+        }
+        
         try {
         	axisService.addParameter(wsdlDefParameter);
         	axisService.addParameter(wsdlLocationParameter);                        
+        	axisService.addParameter(wsdlFileName);
+        	axisService.addParameter(schemaDocs); 
+        	axisService.addParameter(wsdlCompositeParameter);
         } catch (Exception e) {
         	throw ExceptionFactory.makeWebServiceException("EndpointDescription: Unable to add parms. to AxisService");
         }
