package org.apache.axis2.mtompolicy;

import java.util.List;

import org.apache.axiom.om.impl.MTOMConstants;
import org.apache.axis2.AxisFault;
import org.apache.axis2.Constants;
import org.apache.axis2.context.MessageContext;
import org.apache.axis2.handlers.AbstractHandler;
import org.apache.axis2.policy.model.MTOMAssertion;
import org.apache.neethi.Assertion;
import org.apache.neethi.Policy;

public class MTOMInHandler extends AbstractHandler {

    public InvocationResponse invoke(MessageContext msgCtx) throws AxisFault {

        Policy policy = msgCtx.getEffectivePolicy();

        if (policy == null) {
            return InvocationResponse.CONTINUE;
        }

        // TODO When we have policy alternatives support we will have to change
        // the implementation.
        List<Assertion> list = (List<Assertion>) policy.getAlternatives()
                .next();

        for (Assertion assertion : list) {
            if (assertion instanceof MTOMAssertion) {
                assertion = (MTOMAssertion) assertion;
                String contentType = (String) msgCtx.getProperty(Constants.Configuration.CONTENT_TYPE);


                if (!assertion.isOptional()) {
                    if (MTOMConstants.MTOM_TYPE.equals(contentType)) {
                        if (msgCtx.isServerSide()) {
                        throw new AxisFault(
                                "The SOAP REQUEST sent by the client IS NOT MTOMized!");
                        } else {
                            throw new AxisFault(
                            "The SOAP RESPONSE sent by the service IS NOT MTOMized!");
                        }
                    }
                }
            }
        }

        return InvocationResponse.CONTINUE;

    }

}
