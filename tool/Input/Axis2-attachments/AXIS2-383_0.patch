Index: axis2config.html
===================================================================
--- axis2config.html	(revision 368246)
+++ axis2config.html	(working copy)
@@ -1,354 +1,343 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
-
-<html>
-<head>
-<title>Axis2 Configuration Documents</title>
-</head>
-<body>
-<p>In Axis2 there are three kinds of configuration files to configure the system. 
-First one configuration file is to configure whole system, second one is to 
-configure a service and the third one is to configure a module. 
-<ul>
-<li><a href="#global">Global Configuration (axis2.xml)</a></li>
-<li><a href="#service">Service Configuration (services.xml)</a></li>
-<li><a href="#module">Module Configuration (module.xml)</a></li>
-</ul>
-</p>
-<br>
-
-<font color="blue"><b>Global Configuration </b></font>
-<li><a name="global"></a>Writing axis2.xml</li>
-<p>
-  All the configuration that requires starting axis2 is obtained from axis2.xml. 
-	The way of specifying them is very simple and easy. The document is all about 
-	the proper way of specifying the configurations in axis2.xml.
-	There are six top level elements that can be seen in the configuration 
-	file and those can be listed as follows;
-</p>
-<ul>
-<li>Parameter</li>
-<li>Transport Receiver</li>
-<li>Transport Sender</li>
-<li>Phase Order</li>
-<li>Module References</li>
-<li>Listeners (Observers)</li>
-</ul>
-
-<p><b>Parameter </b>
-<br>
-In axis2 a parameter is nothing but name value pair, each and every top level 
-parameter available in the axis2.xml (direct sub elements of root element) will 
-be transformed into properties in AxisConfiguration. Therefore the top level 
-parameters in configuration document can be accessed via AxisConfiguration in 
-the running system. The correct way of defining a parameter looks like what is shown below;
-<source><pre> 
-  &lt;parameter name="name of the parameter" &gt;parameter value &lt;/parameter&gt;
-</pre></source>
-</p>
-<p>
-<b>Transport Receiver</b><br>
-Depending on the underline transport that axis going to be run , 
-need to have different transport receivers so the way of adding 
-them to the system can be done as follows;
-<source><pre> 
-&lt;transportReceiver name="http" class="org.apache.axis2.transport.http.SimpleHTTPServer"&gt;
-        &lt;parameter name="port" &gt;6060&lt;/parameter&gt;
- &lt;/transportReceiver&gt; 
- </pre></source>
-
-The above elements shows the way of defining transport receivers in axis2.xml , 
-here name attribute of the 'transportReceiver' element is the name of transport
-it can be http, tcp , smtp , commonshttp stc , and when the system starts up or 
-when setting transport at the client side one can use these transport names to
- load the appropriate transport. Class attribute is to specify actual java 
- class which implements required interfaces for the transport. Any transport 
- can have zero or more parameters, and if there are any, then those parameters 
- can be accessed via the corresponding transport receiver. 
-</p>
-
-<p>
-<b>Transport Senders</b><br>
-As same as transport receivers it is possible to register transport senders in the 
-system, and latter at the run time those senders can be used to send the messages. 
-As an example consider Axis2 running under tomcat, then axis can use TCP transport 
-senders to send message rather than HTTP. The way of specifying transport senders is as follows:
-<source><pre> 
-&lt;transportSender name="http" class="org.apache.axis2.transport.http.CommonsHTTPTransportSender"&gt;
-        &lt;parameter name="PROTOCOL" locked="xsd:false"&gt;HTTP/1.0&lt;/parameter&gt;
- &lt;/transportSender&gt; 
- </pre></source>
-name: Name of the transport (it is possible to have http and http1 as transport name)
-Class: Implementation class of the corresponding transport. 
-
-As same as transport receivers, transport senders can have zer