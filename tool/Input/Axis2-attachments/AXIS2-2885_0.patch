Index: src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java
===================================================================
--- src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java	(revision 551504)
+++ src/main/java/org/apache/ideaplugin/frames/Axi2PluginPage.java	(working copy)
@@ -1,8 +1,7 @@
 package org.apache.ideaplugin.frames;
 
 import com.intellij.openapi.project.Project;
-import org.apache.axis2.tools.idea.Java2CodeFrame;
-import org.apache.axis2.tools.java2wsdl.Java2WSDLFrame;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
 
 
 import javax.swing.*;
@@ -35,14 +34,12 @@
 public class Axi2PluginPage extends JFrame implements ActionListener {
     ButtonGroup cbg;
     JRadioButton service;
-    JRadioButton wsdlGen;
-    JRadioButton sourceGen;
+    JRadioButton codeGen;
     JButton butOK;
     JButton butCancle;
     JPanel imglbl;
     Project project;
-    Java2CodeFrame winj2c;
-    Java2WSDLFrame winj2w;
+    CodegenFrame codegenFrame;
 
     private int defaultCloseOperation;
 
@@ -61,22 +58,18 @@
 
         /*Create a service archive Radio Button  */
 
-        service = new JRadioButton("Create a service archive", true);
+        service = new JRadioButton("Axis2 Aervice Archive", true);
         service.setToolTipText("Hepls package classes, libs and WSDLs to create a archive that can be deployed in Axis2");
         cbg.add(service);
         getContentPane().add(service);
 
         /*Create a Code code generation Radio Button */
 
-        wsdlGen = new JRadioButton("Generate a WSDL from a java source file", false);
-        wsdlGen.setToolTipText("you can generate a WSDL from a java source file ");
-        cbg.add(wsdlGen);
-        getContentPane().add(wsdlGen);
+        codeGen = new JRadioButton("Axis2 Code Generator", false);
+        codeGen.setToolTipText("you can generate a WSDL from a java source file or java code from a WSDL ");
+        cbg.add(codeGen);
+        getContentPane().add(codeGen);
 
-        sourceGen =new JRadioButton("Generate java source code from a WSDL file",true);
-        sourceGen.setToolTipText("you can generate java code from a WSDL");
-        cbg.add(sourceGen);
-        getContentPane().add(sourceGen);
 
 
         butOK = new JButton("OK");
@@ -134,24 +127,10 @@
         } else if (obj == butOK) {
             this.hide();
             setVisible(false);
-            if (wsdlGen.isSelected()) {                
-
-                winj2c = new Java2CodeFrame();
-                winj2c.setResizable(false);
-                winj2c.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-                winj2c.setProject(project);
-                winj2c.pack();
-                winj2c.show();
-                
-            } else if (sourceGen.isSelected() ) {
-
-                winj2w = new Java2WSDLFrame();
-                winj2w.setResizable(false);
-                winj2w.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-                winj2w.setProject(project);
-                winj2w.pack();
-                winj2w.show();
-
+            if (codeGen.isSelected()) {
+                codegenFrame = new CodegenFrame();
+                codegenFrame.setVisible(true);
+                codegenFrame .setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
             }else{
                 ServiceArciveFrame window = new ServiceArciveFrame();
                 window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
@@ -204,20 +183,16 @@
         if (c.isVisible()) {
             c.setBounds(insets.left + 24, insets.top + 136, 296, 24);
         }
-         c = parent.getComponent(2);
+        c = parent.getComponent(2);
         if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 168, 296, 24);
+            c.setBounds(insets.left + 130, insets.top + 210, 80, 24);
         }
         c = parent.getComponent(3);
         if (c.isVisible()) {
-            c.setBounds(insets.left + 130, insets.top + 210, 80, 24);
+            c.setBounds(insets.left + 215, insets.top + 210, 80, 24);
         }
         c = parent.getComponent(4);
         if (c.isVisible()) {
-            c.setBounds(insets.left + 215, insets.top + 210, 80, 24);
-        }
-        c = parent.getComponent(5);
-        if (c.isVisible()) {
             c.setBounds(insets.left, insets.top, 320, 80);
         }
     }
Index: src/main/java/org/apache/axis2/tools/component/WizardPanel.java
===================================================================
--- src/main/java/org/apache/axis2/tools/component/WizardPanel.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/component/WizardPanel.java	(working copy)
@@ -16,8 +16,13 @@
     private String error;
     private boolean flag;
     private boolean progressFlag;
-   // private ProgressBarPanel progressBar;
+    public static final int WSDL_2_JAVA_TYPE = 1;
+    public static final int JAVA_2_WSDL_TYPE = 2;
+    public static final int UNSPECIFIED_TYPE = 3;
+    private boolean isPageComplete = true;
 
+    // private ProgressBarPanel progressBar;
+
     public WizardPanel(WizardComponents wizardComponents) {
         this(wizardComponents, null);
     }
@@ -89,12 +94,6 @@
     public boolean getProgressPanelVisible() {
         return progressFlag;
     }
-   /* public void setProgressPanel(ProgressBarPanel panel) {
-        this.progressBar = panel;
-    }
-    public ProgressBarPanel getProgressPanel() {
-        return (ProgressBarPanel)progressBar;
-    }*/
 
     // next
     protected boolean goNext() {
@@ -116,12 +115,12 @@
             return false;
         }
     }
-
+    
     protected void switchPanel(int panelIndex) {
         getWizardComponents().setCurrentIndex(panelIndex);
         getWizardComponents().updateComponents();
     }
-
+    /** this method used for set Button Enabled */
     protected void setBackButtonEnabled(boolean set) {
         wizardComponents.getBackButton().setEnabled(set);
     }
@@ -134,4 +133,17 @@
         wizardComponents.getFinishButton().setEnabled(set);
     }
 
+    /** this method used for to get type  of wizard panel*/
+    public  int getPageType() {
+        return  WizardPanel.UNSPECIFIED_TYPE;
+    }
+    /** this method used for check is page complete */
+    public  boolean isPageComplete() {
+        return  isPageComplete;
+    }
+    /** this method used for set page complete*/
+    public void setPageComplete(boolean complete) {
+        isPageComplete = complete;
+    }
+
 }
Index: src/main/java/org/apache/axis2/tools/idea/ImagePanel.java
===================================================================
--- src/main/java/org/apache/axis2/tools/idea/ImagePanel.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/idea/ImagePanel.java	(working copy)
@@ -1,108 +0,0 @@
-package org.apache.axis2.tools.idea;
-
-import javax.swing.*;
-import java.awt.*;
-
-/*
-* Copyright 2004,2005 The Apache Software Foundation.
-*
-* Licensed under the Apache License, Version 2.0 (the "License");
-* you may not use this file except in compliance with the License.
-* You may obtain a copy of the License at
-*
-*      http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*
-*
-*/
-
-/**
- * Author : Deepal Jayasinghe
- * Date: Jul 20, 2005
- * Time: 9:33:14 PM
- */
-public class ImagePanel extends JPanel {
-    JLabel lblImage;
-    JLabel labTop;
-    JLabel lblBottom;
-    ImageIcon apachelogo;
-
-    public ImagePanel() {
-        ImageLayout customLayout = new ImageLayout();
-        setLayout(customLayout);
-
-        java.net.URL resource = ImagePanel.class.getResource("/icons/asf-feather.png");
-        apachelogo = new ImageIcon(resource);
-
-        lblImage = new JLabel(apachelogo);
-        add(lblImage);
-        lblImage.setBackground(Color.white);
-
-        labTop = new JLabel();
-        labTop.setBackground(Color.white);
-        add(labTop);
-        labTop.setFont(new Font("Helvetica", Font.BOLD, 12));
-
-        lblBottom = new JLabel();
-        add(lblBottom);
-        lblBottom.setBackground(Color.white);
-        lblBottom.setFont(new Font("Helvetica", Font.PLAIN, 10));
-
-        setSize(getPreferredSize());
-        this.setBackground(Color.white);
-    }
-
-    public void setCaptions(String lbl1, String lbl2) {
-        labTop.setText(lbl1);
-        lblBottom.setText(lbl2);
-    }
-}
-
-class ImageLayout implements LayoutManager {
-
-    public ImageLayout() {
-    }
-
-    public void addLayoutComponent(String name, Component comp) {
-    }
-
-    public void removeLayoutComponent(Component comp) {
-    }
-
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 535 + insets.left + insets.right;
-        dim.height = 77 + insets.top + insets.bottom;
-
-        return dim;
-    }
-
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 368, insets.top, 168, 80);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left, insets.top, 368, 40);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left, insets.top + 40, 368, 40);
-        }
-    }
-}
Index: src/main/java/org/apache/axis2/tools/idea/FirstPanel.java
===================================================================
--- src/main/java/org/apache/axis2/tools/idea/FirstPanel.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/idea/FirstPanel.java	(working copy)
@@ -133,7 +133,7 @@
     }
 }
 
-class WSDLFileFilter extends FileFilter {
+/*class WSDLFileFilter extends FileFilter {
 
     public boolean accept(File f) {
         if (f.isDirectory()) {
@@ -163,7 +163,7 @@
         return ext;
     }
 
-}
+}*/
 
 class FirstPanelLayout implements LayoutManager {
 
Index: src/main/java/org/apache/axis2/tools/idea/Java2CodeFrame.java
===================================================================
--- src/main/java/org/apache/axis2/tools/idea/Java2CodeFrame.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/idea/Java2CodeFrame.java	(working copy)
@@ -41,7 +41,7 @@
  * Time: 2:26:15 PM
  */
 public class Java2CodeFrame extends JFrame {
-    ImagePanel panel_3;
+   // ImagePanel panel_3;
     FirstPanel plMiddle;
     BottomPanel lblBottom;
     //    SecondPanel secondPanel;
@@ -64,11 +64,11 @@
 
         codegenBean = new CodegenBean();
 
-        panel_3 = new ImagePanel();
+      /*  panel_3 = new ImagePanel();
         panel_3.setCaptions("  WSDL selection page"
-                , "  Welcome to the Axis2 code generation wizard. Select the WSDL file");
+                , "  Welcome to the Axis2 code generation wizard. Select the WSDL file");*/
 
-        getContentPane().add(panel_3);
+       // getContentPane().add(panel_3);
 
         plMiddle = new FirstPanel(codegenBean);
         getContentPane().add(plMiddle);
@@ -259,8 +259,8 @@
                     panleID--;
                     break;
                 }
-                panel_3.setCaptions("  Custom Options"
-                        , "  Set the options for the code generation");
+              /*  panel_3.setCaptions("  Custom Options"
+                        , "  Set the options for the code generation");*/
 
                 this.secondPanel.setVisible(true);
                 if(this.secondPanel.codegenBean == null)
@@ -273,8 +273,8 @@
             }
             case 2: {
 
-                panel_3.setCaptions("  Set the output location for the generated code"
-                        , "  set the output project for the generated code");
+               /* panel_3.setCaptions("  Set the output location for the generated code"
+                        , "  set the output project for the generated code");*/
                 this.secondPanel.setVisible(false);
                 this.plMiddle.setVisible(false);
                 this.secondPanel.fillBean();
@@ -310,8 +310,8 @@
         panleID--;
         switch (panleID) {
             case 0: {
-                panel_3.setCaptions("  WSDL selection page"
-                        , "  Welcome to the Axis2 code generation wizard. Select the WSDL file");
+               /* panel_3.setCaptions("  WSDL selection page"
+                        , "  Welcome to the Axis2 code generation wizard. Select the WSDL file");*/
                 this.secondPanel.setVisible(false);
                 this.plMiddle.setVisible(true);
                 this.outputpane.setVisible(false);
@@ -319,8 +319,8 @@
                 break;
             }
             case 1: {
-                panel_3.setCaptions("  Custom  Options"
-                        , "  Set the options for the code generation");
+              /*  panel_3.setCaptions("  Custom  Options"
+                        , "  Set the options for the code generation");*/
 
                 this.secondPanel.setVisible(true);
                 this.plMiddle.setVisible(false);
@@ -377,23 +377,23 @@
         Insets insets = parent.getInsets();
 
         Component c;
-        c = parent.getComponent(0);
+       /* c = parent.getComponent(0);
         if (c.isVisible()) {
             c.setBounds(insets.left, insets.top, 600, 80);
-        }
-        c = parent.getComponent(1);
+        }*/
+        c = parent.getComponent(0);
         if (c.isVisible()) {
             c.setBounds(insets.left, insets.top + 80, 600, 480);
         }
-        c = parent.getComponent(3);
+        c = parent.getComponent(2);
         if (c.isVisible()) {
             c.setBounds(insets.left, insets.top + 80, 600, 480);
         }
-        c = parent.getComponent(4);
+        c = parent.getComponent(3);
         if (c.isVisible()) {
             c.setBounds(insets.left, insets.top + 80, 600, 480);
         }
-        c = parent.getComponent(2);
+        c = parent.getComponent(1);
         if (c.isVisible()) {
             c.setBounds(insets.left, insets.top + 550, 600, 50);
         }
Index: src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java
===================================================================
--- src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/wizardframe/CodegenFrame.java	(working copy)
@@ -3,25 +3,28 @@
 import org.apache.axis2.tools.bean.WsdlgenBean;
 import org.apache.axis2.tools.bean.CodegenBean;
 import org.apache.axis2.tools.idea.FirstPanel;
+import org.apache.axis2.tools.idea.ChooserPanel;
 import org.apache.axis2.tools.component.Utilities;
 import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.java2wsdl.MiddlePanel;
+import org.apache.axis2.tools.java2wsdl.OptionPanel;
 
 /**
  * codeaFrame class
  */
 
 public class CodegenFrame extends WizardFrame{
+    /**
+     * variable
+     */
     public static final int PANEL_CHOOSER = 0;
     public static final int PANEL_FIRST_A = 1;    //
-    public static final int PANEL_FIRST_B = 2;
+    public static final int PANEL_FIRST_B = 1;
     public static final int PANEL_OPTION_A =2;
-    public static final int PANEL_OPTION_B = 3;
+    public static final int PANEL_OPTION_B = 2;
     public static final int PANEL_LAST_A = 3;
     public static final int PANEL_LAST_B = 6;
 
-    private WsdlgenBean wsdlgenBean;
-    private CodegenBean codegenBean;
-
     public CodegenFrame() {
         super();
         init();
@@ -34,29 +37,29 @@
 
         wsdlgenBean= new WsdlgenBean();
         codegenBean = new CodegenBean();
-       /*
+
         panel = new ChooserPanel(getWizardComponents());
         getWizardComponents().addWizardPanel(PANEL_CHOOSER , panel);
-
+      /*
         panel = new FirstPanel(getWizardComponents(),codegenBean);
         getWizardComponents().addWizardPanel(PANEL_FIRST_A , panel);
-
-        panel = new J2WFristWizardPanel(getWizardComponents(),wsdlgenBean );
+       */
+        panel = new MiddlePanel(getWizardComponents(),wsdlgenBean );
         getWizardComponents().addWizardPanel(PANEL_FIRST_B, panel);
 
-        panel = new SecondPanel(getWizardComponents(),codegenBean);
+       /* panel = new SecondPanel(getWizardComponents(),codegenBean);
         getWizardComponents().addWizardPanel(PANEL_OPTION_A , panel);
-
-        panel = new J2WOptionWizardPanel(getWizardComponents(),wsdlgenBean);
+       */
+        panel = new OptionPanel(getWizardComponents(),wsdlgenBean);
         getWizardComponents().addWizardPanel(PANEL_OPTION_B , panel);
-
+       /*
         panel = new OutPutPanel(getWizardComponents(),codegenBean);
         getWizardComponents().addWizardPanel(PANEL_LAST_A , panel);
 
         panel = new J2WLocationWizardPanel(getWizardComponents(),wsdlgenBean);
         getWizardComponents().addWizardPanel(PANEL_LAST_B , panel);*/
 
-        setSize(550, 200);
+        setSize(550,700);
         Utilities.centerComponentOnScreen(this);
 
     }
Index: src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java
===================================================================
--- src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/wizardframe/WizardFrame.java	(working copy)
@@ -1,9 +1,8 @@
 package org.apache.axis2.tools.wizardframe;
 
-import org.apache.axis2.tools.component.CancelAction;
-import org.apache.axis2.tools.component.WizardComponents;
-import org.apache.axis2.tools.component.FinishAction;
-import org.apache.axis2.tools.component.DefaultWizardComponents;
+import org.apache.axis2.tools.component.*;
+import org.apache.axis2.tools.bean.WsdlgenBean;
+import org.apache.axis2.tools.bean.CodegenBean;
 
 import javax.swing.*;
 import java.awt.*;
@@ -16,8 +15,19 @@
  * wizardFrame class
  */
 public class WizardFrame extends JFrame {
+     /**
+     * variable
+     */
+
+    private JLabel panelImageLabel;
+    private JLabel panelTopTitleLabel;
+    private JLabel panelBottomTitleLabel;
+    private JLabel errorLabel;
+    private JPanel errorPanel;
     private WizardComponents wizardComponents;
-
+    protected WsdlgenBean wsdlgenBean;
+    protected CodegenBean codegenBean;
+    
     public WizardFrame() {
         init();
     }
@@ -27,25 +37,25 @@
         wizardComponents = new DefaultWizardComponents();
 
         this.getContentPane().setLayout(new GridBagLayout());
-       /* this.getContentPane().add(new ImagePanel(wizardComponents)
+        this.getContentPane().add(createTitlePanel()
                 , new GridBagConstraints(0, 0, 1, 1, 1.0, 0.0
-                , GridBagConstraints.NORTH, GridBagConstraints.BOTH
+                , GridBagConstraints.NORTH, GridBagConstraints.HORIZONTAL
                 , new Insets(0, 0, 0, 0), 0, 0));
 
         this.getContentPane().add(new JSeparator()
                 , new GridBagConstraints(0, 1, 1, 1, 1.0, 0.0
                 , GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,
-                new Insets(1, 1, 1, 1), 0, 0));
+                new Insets(0, 0, 0, 0), 0, 0));
 
         this.getContentPane().add(wizardComponents.getWizardPanelsContainer()
                 , new GridBagConstraints(0, 2, 1, 1, 1.0, 1.0
-                , GridBagConstraints.PAGE_START , GridBagConstraints.BOTH
+                , GridBagConstraints.NORTHWEST , GridBagConstraints.BOTH
                 , new Insets(10, 0, 0, 0), 0, 0));
 
-        this.getContentPane().add(new ProgressBarPanel(wizardComponents)
+       /* this.getContentPane().add(new ProgressBarPanel(wizardComponents)
                 , new GridBagConstraints(0, 3, 1, 1, 1.0, 0.0
                 , GridBagConstraints.CENTER, GridBagConstraints.NONE
-                , new Insets(10, 0, 0, 0), 0, 0));
+                , new Insets(10, 0, 0, 0), 0, 0));  */
 
         this.getContentPane().add(new JSeparator()
                 , new GridBagConstraints(0, 4, 1, 1, 1.0, 0.0
@@ -55,14 +65,19 @@
         this.getContentPane().add(createButtonPanel(),
                 new GridBagConstraints(0, 5, 1, 1, 1.0, 0.0
                         ,GridBagConstraints.EAST, GridBagConstraints.NONE,
-                        new Insets(20, 20, 20, 20), 0, 0));*/
+                        new Insets(10, 10, 10, 10), 0, 0));
 
         ImageIcon  img=new ImageIcon("icons/icon.png");
         this.setIconImage(img.getImage());
+        this.setFont(new Font("Helvetica", Font.PLAIN, 8));
 
         wizardComponents.addPropertyChangeListener(new PropertyChangeListener() {
             public void propertyChange(PropertyChangeEvent event) {
-
+                setPanelTopTitle(((WizardPanel)event.getNewValue()).getPanelTopTitle());
+                setPanelTitleImage(((WizardPanel)event.getNewValue()).getPanelImage());
+                setPanelBottomTitle(((WizardPanel)event.getNewValue()).getPanelBottomTitle());
+                setErrorVisible(false
+                        ,((WizardPanel)event.getNewValue()).getError());
             }
         });
         wizardComponents.setFinishAction(createFinishAction());
@@ -82,7 +97,78 @@
         wizardComponents.updateComponents();
         super.show();
     }
+      // set error message
+    protected void setErrorVisible(boolean flag ,String  error){
+        errorLabel.setText(error);
+        errorPanel.setVisible(flag);
 
+    }
+    protected void setBottomVisible(boolean flag){
+        panelBottomTitleLabel.setVisible(flag);
+    }
+    //Set Title Panel
+    protected void setPanelTopTitle(String title) {
+        panelTopTitleLabel.setText(title);
+    }
+
+    protected void setPanelBottomTitle(String title) {
+        panelBottomTitleLabel.setText(title);
+    }
+    // set title image
+    protected void setPanelTitleImage(ImageIcon image){
+        panelImageLabel.setIcon(image );
+    }
+
+     protected JPanel createTitlePanel() {
+
+        JPanel panel = new JPanel(new GridBagLayout() );
+
+        panel.setBackground(Color.white );
+
+        panelTopTitleLabel = new JLabel();
+        panelTopTitleLabel.setFont(new Font("Helvetica", Font.BOLD, 12));
+
+        panelBottomTitleLabel=new JLabel();
+
+        panelImageLabel= new JLabel();
+
+        errorLabel = new JLabel();
+        errorLabel.setVisible(false);
+        errorLabel.setBackground(Color.blue);
+
+        errorPanel =new JPanel();
+        errorPanel .setLayout(new GridBagLayout());
+        errorPanel .setBorder(BorderFactory.createLineBorder(Color.black));
+
+        errorPanel.add(errorLabel,
+                new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0
+                , GridBagConstraints.CENTER, GridBagConstraints.BOTH
+                , new Insets(10, 10, 0, 10), 0, 0));
+
+        panel.add(panelTopTitleLabel
+                , new GridBagConstraints(0, 0, 1, 1, 0.5, 0.0
+                , GridBagConstraints.LINE_START , GridBagConstraints.BOTH
+                , new Insets(10, 20, 0, 0), 0, 0));
+
+        panel.add(panelBottomTitleLabel
+                , new GridBagConstraints(0, 1, 1, 1, 0.5, 0.0
+                , GridBagConstraints.LINE_START, GridBagConstraints.BOTH
+                , new Insets(10,20, 0, 0), 0, 0));
+
+        panel.add(panelImageLabel
+                , new GridBagConstraints(1, 0, 1,2, 0.0, 0.0
+                , GridBagConstraints.CENTER, GridBagConstraints.BOTH
+                , new Insets(0, 0, 0, 0), 0, 0));
+
+
+        panel.add(errorPanel
+                , new GridBagConstraints(0, 1, 1, 1, 0.0, 0.0
+                , GridBagConstraints.SOUTH, GridBagConstraints.BOTH
+                , new Insets(20, 0, 0, 0), 0, 0));
+
+        return panel;
+
+    }
     protected JPanel createButtonPanel() {
         JPanel panel = new JPanel(new GridLayout());
         panel.add(wizardComponents.getBackButton());
Index: src/main/java/org/apache/axis2/tools/java2wsdl/BottomPanel.java
===================================================================
--- src/main/java/org/apache/axis2/tools/java2wsdl/BottomPanel.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/java2wsdl/BottomPanel.java	(working copy)
@@ -69,7 +69,7 @@
 
             }else if(java2WSDLFrame.opPanel.isVisible()){
 
-                if( java2WSDLFrame.opPanel .txtService .getText().trim().equals("")){
+             //   if( java2WSDLFrame.opPanel .txtService .getText().trim().equals("")){
                     JOptionPane.showMessageDialog(java2WSDLFrame,
                             " Service name should be specified. ",
                             "Error!",
@@ -77,10 +77,10 @@
                     java2WSDLFrame.repaint();
                     setEnable(true,false,false,true);
                     return;
-                }else{
-                    setEnable(true,true,true,true);
-                    java2WSDLFrame.setPanel();
-                }
+            //    }else{
+              //      setEnable(true,true,true,true);
+                    //java2WSDLFrame.setPanel();
+          //      }
 
             }
 
@@ -96,12 +96,12 @@
         }  else if(obj ==btnFinish ){
 
             java2WSDLFrame.outPanel.setOutput();
-            java2WSDLFrame.opPanel .setNamespaceDefaults();
+         //   java2WSDLFrame.opPanel .setNamespaceDefaults();
 
             File outputDir = new File(java2WSDLFrame.outPanel .txtLocation .getText().trim());
             String outputName=java2WSDLFrame.outPanel.txtFileName.getText().trim();
 
-            if(java2WSDLFrame.opPanel.txtService .getText() .trim() .equals("") ){
+      //      if(java2WSDLFrame.opPanel.txtService .getText() .trim() .equals("") ){
                 JOptionPane.showMessageDialog(java2WSDLFrame,
                         " Service name should be specified. ",
                         "Error!",
@@ -109,9 +109,9 @@
                 java2WSDLFrame.repaint();
                 setEnable(true,false,false,true);
                 return;
-            }
+        //    }
 
-            if (java2WSDLFrame.outPanel .rbtnSave .isSelected() )
+         /*   if (java2WSDLFrame.outPanel .rbtnSave .isSelected() )
             {
                 if(!outputDir.isDirectory() && !new FileFilter() .accept(outputName )){
                     JOptionPane.showMessageDialog(java2WSDLFrame,
@@ -121,8 +121,8 @@
                     java2WSDLFrame.repaint();
                     setEnable(true,false,false,true);
                     return;
-                }
-                if (!outputDir.isDirectory())
+                }*/
+          /*      if (!outputDir.isDirectory())
                 {
                     JOptionPane.showMessageDialog(java2WSDLFrame,
                             "The Output Directory specified is invalid. Please provide a valid directory",
@@ -159,14 +159,14 @@
                         "Code genaration failed!" + writer.toString(),
                         "Axis2 code generation",
                         JOptionPane.ERROR_MESSAGE);
-                java2WSDLFrame.dispose();
+                java2WSDLFrame.dispose();*/
 
             }
         }
 
     }
-}
 
+
 class BottomLayout implements LayoutManager {
     public BottomLayout() {
     }
Index: src/main/java/org/apache/axis2/tools/java2wsdl/Java2WSDLFrame.java
===================================================================
--- src/main/java/org/apache/axis2/tools/java2wsdl/Java2WSDLFrame.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/java2wsdl/Java2WSDLFrame.java	(working copy)
@@ -1,6 +1,5 @@
 package org.apache.axis2.tools.java2wsdl;
 
-import org.apache.axis2.tools.idea.*;
 import org.apache.axis2.tools.bean.WsdlgenBean;
 import com.intellij.openapi.project.Project;
 import javax.swing.*;
@@ -10,7 +9,7 @@
 public class Java2WSDLFrame extends JFrame {
 
     // first panel
-    ImagePanel imgPanel;
+  //  ImagePanel imgPanel;
     MiddlePanel plMiddle;
     BottomPanel plBottom;
     OptionPanel opPanel;
@@ -35,10 +34,10 @@
         wsdlgenBean=new WsdlgenBean();
         //add image panel
 
-        imgPanel = new ImagePanel();
+       /* imgPanel = new ImagePanel();
         imgPanel.setCaptions("  Java source/classpath selection"
                 , "  Welcome to the Axis2 Java source code generation wizard.");
-        getContentPane().add(imgPanel);
+        getContentPane().add(imgPanel);*/
 
         //add bottom panel
 
@@ -48,14 +47,14 @@
 
         //add middle panel
 
-        plMiddle = new MiddlePanel(this,wsdlgenBean);
+      /*  plMiddle = new MiddlePanel();
         getContentPane().add(plMiddle);
 
         //add option panel
 
-        opPanel =new OptionPanel(this,wsdlgenBean);
+        opPanel =new OptionPanel();
         opPanel.setVisible(false);
-        getContentPane().add(opPanel);
+        getContentPane().add(opPanel);*/
 
         //add option panel
 
@@ -122,9 +121,9 @@
 
         switch (panleID) {
             case 1:{
-                this.imgPanel .setCaptions(" Java source/classpath selection" ,
+                /*this.imgPanel .setCaptions(" Java source/classpath selection" ,
                         "  Select the classes and the libraries.");
-
+*/
                 this.plMiddle .setVisible(true);
 
                 this.opPanel.setVisible(false);
@@ -136,10 +135,10 @@
                 break;
             }
             case 2: {
-                this.imgPanel .setCaptions(" Java to WSDL Options " ,
+              /*  this.imgPanel .setCaptions(" Java to WSDL Options " ,
                         "  Set the Options for the generator.");
                 this.plMiddle .setVisible(false);
-
+*/
                 this.opPanel.setVisible(true);
 
                 this.outPanel .setVisible(false);
@@ -149,10 +148,10 @@
                 break;
             }
             case 3: {
-                this.imgPanel .setCaptions(" WSDL file Output location " ,
+               /* this.imgPanel .setCaptions(" WSDL file Output location " ,
                         "  Select the location for the generated WSDL.");
                 this.plMiddle .setVisible(false);
-
+*/
                 this.opPanel.setVisible(false);
 
                 this.outPanel .setVisible(true);
@@ -169,9 +168,9 @@
         switch (panleID) {
             case 1: {
 
-                this.imgPanel .setCaptions(" Java source/classpath selection" ,
+               /* this.imgPanel .setCaptions(" Java source/classpath selection" ,
                         "  Select the classes and the libraries.");
-
+*/
                 this.opPanel.setVisible(false);
 
                 this.plMiddle.setVisible(true);
@@ -185,9 +184,9 @@
 
             case 2: {
 
-                this.imgPanel .setCaptions(" Java to WSDL Options " ,
+              /*  this.imgPanel .setCaptions(" Java to WSDL Options " ,
                         "  Set the Options for the generator.");
-
+*/
                 this.plMiddle .setVisible(false);
 
                 this.outPanel.setVisible(false);
@@ -201,9 +200,9 @@
 
             case 3: {
 
-                this.imgPanel .setCaptions(" WSDL file Output location " ,
+               /* this.imgPanel .setCaptions(" WSDL file Output location " ,
                         "  Select the location for the generated WSDL.");
-
+*/
                 this.plMiddle .setVisible(false);
 
                 this.outPanel.setVisible(true);
@@ -249,9 +248,13 @@
         Insets insets = parent.getInsets();
 
         Component c;
-        c = parent.getComponent(0);
+       /* c = parent.getComponent(0);
         if (c.isVisible()) {
             c.setBounds(insets.left, insets.top, 550, 80);
+        }*/
+        c = parent.getComponent(1);
+        if (c.isVisible()) {
+            c.setBounds(insets.left, insets.top + 80, 500, 450);
         }
         c = parent.getComponent(2);
         if (c.isVisible()) {
@@ -261,12 +264,8 @@
         if (c.isVisible()) {
             c.setBounds(insets.left, insets.top + 80, 500, 450);
         }
-        c = parent.getComponent(4);
+        c = parent.getComponent(0);
         if (c.isVisible()) {
-            c.setBounds(insets.left, insets.top + 80, 500, 450);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
             c.setBounds(insets.left, insets.top + 525, 500, 50);
         }
 
Index: src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java
===================================================================
--- src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/java2wsdl/OptionPanel.java	(working copy)
@@ -1,245 +1,128 @@
 package org.apache.axis2.tools.java2wsdl;
 
+
+import org.apache.axis2.tools.bean.WsdlgenBean;
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
+
 import javax.swing.*;
 import java.awt.*;
-import java.awt.event.ActionListener;
-import java.awt.event.ActionEvent;
-import java.awt.event.MouseListener ;
-import java.awt.event.MouseEvent ;
-import org.apache.axis2.tools.bean.NamespaceFinder ;
-import org.apache.axis2.tools.bean.WsdlgenBean;
 
+/**
+ * this is the first panel of java2wsdl wizard
+ */
+public class OptionPanel extends WizardPanel{
+    /**
+     * variable
+     */
+    private JTextField txtNsp;
+    private JTextField txtNspPrefix;
+    private JTextField txtSchemaTargetNsp;
+    private JTextField txtSchemaTargetNspPrefix;
+    private JTextField txtService;
+    private WsdlgenBean wsdlgenBean;
 
-public class OptionPanel extends JPanel implements ActionListener,MouseListener {
-
-    private   JLabel lblNsp;
-    private   JLabel lblNspPrefix;
-    private   JLabel lblSchemaTargetNsp;
-    private   JLabel lblSchemaTargetNspPrefix;
-    private   JLabel lblService;
-
-    JTextField txtNsp;
-    JTextField txtNspPrefix;
-    JTextField txtSchemaTargetNsp;
-    JTextField txtSchemaTargetNspPrefix;
-    JTextField txtService;
-
-    Java2WSDLFrame java2WSDLFrame;
-    WsdlgenBean wsdlgenBean;
-
-    public OptionPanel(Java2WSDLFrame java2WSDLFrame,WsdlgenBean wsdlgenBean){
-
-        this.java2WSDLFrame =java2WSDLFrame ;
+    /**
+     * Construct method
+     * @param wizardComponents
+     * @param wsdlgenBean
+     */
+    public OptionPanel(WizardComponents wizardComponents,WsdlgenBean wsdlgenBean){
+        super(wizardComponents, "Option  was choosed");
+        setPanelTopTitle("Java to WSDL Options");
+        setPanelBottomTitle("Set the Option for the generation");
         this.wsdlgenBean=wsdlgenBean;
+        init();
+    }
+    /** initaite method*/
+    public void init(){
 
-        OptionLayout customLayout=new OptionLayout();
-        setLayout(customLayout);
+        txtNsp =new JTextField();
 
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
-
-        //add lable and textfield
-
-        lblNsp =new JLabel("Target Namespace");
-        add(lblNsp);
-
-        txtNsp=new JTextField();
-        add(txtNsp);
-
-        lblNspPrefix =new JLabel("Target Namespace Prefix");
-        add(lblNspPrefix );
-
         txtNspPrefix =new JTextField();
-        add(txtNspPrefix);
 
-        lblSchemaTargetNsp=new JLabel("Schema Target Namespace");
-        add(lblSchemaTargetNsp);
-
         txtSchemaTargetNsp =new JTextField();
-        add(txtSchemaTargetNsp);
 
-        lblSchemaTargetNspPrefix =new JLabel("Schema Target Namespace Prefix");
-        add(lblSchemaTargetNspPrefix);
-
         txtSchemaTargetNspPrefix =new JTextField();
-        add(txtSchemaTargetNspPrefix);
 
-        lblService =new JLabel("Service Name");
-        add(lblService );
-
         txtService =new JTextField();
-        add(txtService );
-        txtService .addActionListener(this);
-        txtService.addMouseListener(this);
 
-        setSize(getPreferredSize());
+        this.setLayout(new GridBagLayout());
 
-    }
+        this.add(new JLabel("Target Namespace")
+                , new GridBagConstraints(0, 0, 1, 1,  0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 20, 0,20), 0, 0));
 
-    public String getTargetNamespace() {
-        return txtNsp.getText() ;
-    }
+        this.add(txtNsp
+                , new GridBagConstraints(1, 0, 2, 1, 1.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 20, 0,20), 0, 0));
+        this.add(new JLabel("Target Namespace Prefix")
+                , new GridBagConstraints(0, 1, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 20, 0, 20), 0, 0));
 
-    public String getTargetNamespacePrefix() {
-        return txtNspPrefix .getText() ;
-    }
+        this.add(txtNspPrefix
+                , new GridBagConstraints(1, 1, 2, 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 20, 0,20), 0, 0));
+        this.add(new JLabel("Schema Target Namespace")
+                , new GridBagConstraints(0, 2, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 20, 0,20), 0, 0));
 
+        this.add(txtSchemaTargetNsp
+                , new GridBagConstraints(1, 2, 2, 1, 1.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 20, 0,20), 0, 0));
+        this.add(new JLabel("Schema Target Namespace Prefix")
+                , new GridBagConstraints(0, 3, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.NONE
+                , new Insets(5, 20, 0, 20), 0, 0));
 
-    public String getSchemaTargetNamespace() {
-        return txtSchemaTargetNsp.getText() ;
-    }
+        this.add(txtSchemaTargetNspPrefix
+                , new GridBagConstraints(1, 3, 2, 1, 1.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 20, 0,20), 0, 0));
+        this.add(new JLabel("Service Name")
+                , new GridBagConstraints(0, 4, 1, 1, 0.1, 1.0
+                , GridBagConstraints.NORTHWEST  , GridBagConstraints.NONE
+                , new Insets(5, 20, 0, 20), 0, 0));
 
-    public String getSchemaTargetNamespacePrefix () {
-        return txtSchemaTargetNspPrefix .getText() ;
-    }
-    public String getServiceName(){
-        return txtService .getText() ;
-    }
+        this.add(txtService
+                , new GridBagConstraints(1, 4, 2, 1, 1.0, 1.0
+                , GridBagConstraints.NORTHWEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 20, 0,20), 0, 0));
 
-
-    public void actionPerformed(ActionEvent e) {
-        Object obj=e.getSource();
-        if(obj ==txtService ){
-            if (txtService .getText() != null && !txtService.getText().trim().equals("")) {
-                BottomPanel.setEnable(true,true, true, true);
-                wsdlgenBean.setServiceName(txtService.getText().trim());
-            }
-        }
     }
-
-    public void mouseClicked(MouseEvent e) {
-        Object obj = e.getSource();
-        if(obj ==txtService ){
-            if (txtService .getText() != null && !txtService.getText().trim().equals("")) {
-                BottomPanel.setEnable(true,true, true, true);
-                wsdlgenBean.setServiceName(txtService.getText().trim());
-            }
-        }
+    //next
+    public void next() {
+        switchPanel(CodegenFrame.PANEL_LAST_B );
     }
-
-    public void mouseEntered(MouseEvent e) {
+    //back
+    public void back() {
+        switchPanel(CodegenFrame.PANEL_FIRST_B );
     }
-
-    public void mouseExited(MouseEvent e) {
-        Object obj = e.getSource();
-        if(obj ==txtService ){
-            if (txtService .getText() != null && !txtService.getText().trim().equals("")) {
-                BottomPanel.setEnable(true,true, true, true);
-                wsdlgenBean.setServiceName(txtService.getText().trim());
-            }
-        }
+    //update
+    public void update() {
+        if(wsdlgenBean.getTargetNamespace()!=null )
+            txtNsp.setText(wsdlgenBean.getTargetNamespace());
+        if(wsdlgenBean.getTargetNamespacePrefix()!=null )
+            txtNspPrefix .setText(wsdlgenBean.getTargetNamespacePrefix());
+        if(wsdlgenBean.getSchemaTargetNamespace()!=null )
+            txtSchemaTargetNsp .setText(wsdlgenBean.getSchemaTargetNamespace());
+        if(wsdlgenBean.getSchemaTargetNamespacePrefix()!=null )
+            txtSchemaTargetNspPrefix.setText(wsdlgenBean.getSchemaTargetNamespacePrefix());
+        if(wsdlgenBean.getServiceName()!=null )
+            txtService.setText(wsdlgenBean.getServiceName());
+        setBackButtonEnabled(true);
+        setNextButtonEnabled(true);
+        setFinishButtonEnabled(false);
     }
-
-    public void mousePressed(MouseEvent e) {
-        Object obj = e.getSource();
-        if(obj ==txtService ){
-            if (txtService .getText() != null && !txtService.getText().trim().equals("")) {
-                BottomPanel.setEnable(true,true, true, true);
-                wsdlgenBean.setServiceName(txtService.getText().trim());
-            }
-        }
+    // get page type
+    public  int getPageType() {
+        return  WizardPanel.JAVA_2_WSDL_TYPE;
     }
-
-    public void mouseReleased(MouseEvent e) {
-        Object obj = e.getSource();
-        if(obj ==txtService ){
-            if (txtService .getText() != null && !txtService.getText().trim().equals("")) {
-                BottomPanel.setEnable(true,true, true, true);
-                wsdlgenBean.setServiceName(txtService.getText().trim());
-            }
-        }
-    }
-    public void setDefaultNamespaces(String fullyQualifiedClassName){
-        this.txtNsp.setText(NamespaceFinder.getTargetNamespaceFromClass(fullyQualifiedClassName));
-        this.txtSchemaTargetNsp .setText(NamespaceFinder.getSchemaTargetNamespaceFromClass(fullyQualifiedClassName) );
-        this.txtNspPrefix .setText(NamespaceFinder.getDefaultNamespacePrefix() );
-        this.txtSchemaTargetNspPrefix .setText(NamespaceFinder.getDefaultSchemaNamespacePrefix() );
-        this.txtService .setText(NamespaceFinder.getServiceNameText(fullyQualifiedClassName) );
-        setNamespaceDefaults();
-    }
-
-    public void setNamespaceDefaults(){
-        wsdlgenBean.setTargetNamespace(txtNsp.getText() );
-        wsdlgenBean.setTargetNamespacePrefix(txtNspPrefix .getText() );
-        wsdlgenBean.setSchemaTargetNamespace(txtSchemaTargetNsp .getText() );
-        wsdlgenBean.setSchemaTargetNamespacePrefix(txtSchemaTargetNspPrefix .getText() );
-        wsdlgenBean.setServiceName(txtService .getText() );
-    }
 }
-
-
-class OptionLayout  implements LayoutManager {
-
-    public OptionLayout (){
-
-    }
-    public void addLayoutComponent(String name, Component comp){
-
-    }
-
-    public void removeLayoutComponent(Component comp){
-
-    }
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 500 + insets.left + insets.right;
-        dim.height =500 + insets.top + insets.bottom;
-
-        return dim;
-    }
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-
-        Insets insets = parent.getInsets();
-
-        Component c;
-
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top +20,200, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 225, insets.top + 20, 275, 24);
-        }
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 60, 200, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 225, insets.top + 60, 275, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 100, 200, 24);
-        }
-        c = parent.getComponent(5);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 225, insets.top + 100, 275, 24);
-        }
-        c = parent.getComponent(6);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 140, 200, 24);
-        }
-        c = parent.getComponent(7);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 225, insets.top + 140, 275, 24);
-        }
-        c = parent.getComponent(8);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 180, 200, 24);
-        }
-        c = parent.getComponent(9);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 225, insets.top + 180, 275, 24);
-        }
-
-
-
-    }
-}
Index: src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java
===================================================================
--- src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java	(revision 551504)
+++ src/main/java/org/apache/axis2/tools/java2wsdl/MiddlePanel.java	(working copy)
@@ -2,227 +2,252 @@
 
 import org.apache.axis2.tools.bean.ClassLoadingTestBean;
 import org.apache.axis2.tools.bean.WsdlgenBean;
+import org.apache.axis2.tools.bean.NamespaceFinder;
+import org.apache.axis2.tools.component.WizardPanel;
+import org.apache.axis2.tools.component.WizardComponents;
+import org.apache.axis2.tools.wizardframe.CodegenFrame;
 
 import javax.swing.*;
+import javax.swing.border.EmptyBorder;
 import java.awt.*;
 import java.awt.event.ActionListener;
 import java.awt.event.ActionEvent;
-import java.awt.event.MouseEvent;
-import java.awt.event.MouseListener;
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Iterator;
 
-import com.intellij.openapi.ui.MultiLineLabelUI;
+/**
+ * this is the first panel of java2wsdl wizard
+ */
+public class MiddlePanel  extends WizardPanel {
+    /**
+     * varibale
+     */
+    private JTextField txtClass;
+    private JButton btnFolder;
+    private JButton btnJar;
+    private JButton btnRemove;
+    private JButton btnTest;
+    private JButton btnHint;
+    private JTextArea txaHint;
+    private boolean flag=false;
+    private JList listPathDisply;
+    private DefaultListModel listModel;
+    private JLabel lblTest;
+    private String hint ="Please give the fully qualified class name, example :com.foo.BarService" +
+            " Then add the folder or the jar file which contains that class file." +
+            " Finally check whether the class file can be loaded from the plugin." +
+            "  If the class that you are going to load contains any dependencies" +
+            "  on other axis2 libraries ( for example like axiom*.jar), please add those" +
+            " libraries as well and try to load the class.";
 
-
-public class MiddlePanel extends JPanel implements ActionListener, MouseListener {
-
-    JLabel lblClass;
-    JLabel lblPath;
-    JLabel lblTest;
-    JLabel lblHint;
-
-    JTextField txtClass;
-
-    JButton btnFolder;
-    JButton btnJar;
-    JButton btnRemove;
-    JButton btnTest;
-
-    JList listPathDisply;
-    DefaultListModel listModel;
-
-    private String hint ="Hint : Please give the fully qualified class name, example :com.foo.BarService\n" +
-            "        Then add the folder or the jar file which contains that class file.\n" +
-            "        Finally check whether the class file can be loaded from the plugin.\n\n" +
-            "        If the class that you are going to load contains any dependencies\n" +
-            "        on other axis2 libraries ( for example like axiom*.jar), please add those\n" +
-            "        libraries as well and try to load the class.";
-
     final JFileChooser FileChooser =new JFileChooser();
     final JFileChooser DirChooser=new JFileChooser();
-
     private WsdlgenBean wsdlgenBean;
-    private Java2WSDLFrame java2WSDLFrame;
 
-    public MiddlePanel (Java2WSDLFrame java2WSDLFrame,WsdlgenBean wsdlgenBean){
-        this.wsdlgenBean = wsdlgenBean;
-        this.java2WSDLFrame =java2WSDLFrame;
+    /**
+     * Constructor
+     * @param wizardComponents
+     * @param wsdlgenBean
+     */
+    public MiddlePanel(WizardComponents wizardComponents ,WsdlgenBean wsdlgenBean) {
+        super(wizardComponents, "Java source / classpath selection");
+        setPanelTopTitle("Java source / classpath selection");
+        setPanelBottomTitle("Select the classes and the libraries");
+        this.wsdlgenBean=wsdlgenBean;
+        init();
+    }
 
-        MiddleLayout customLayout=new MiddleLayout();
-        setLayout(customLayout);
+    /**
+     * initiate panel
+     */
+    private void init(){
 
-        setFont(new Font("Helvetica", Font.PLAIN, 12));
+        txaHint =new JTextArea();
+        txaHint.setBorder(null);
+        txaHint.setFocusable(false);
+        txaHint.setLineWrap(true);
+        txaHint.setWrapStyleWord(true);
+        txaHint.setOpaque(false);
 
-        //add class lable and comboBox
+        btnHint =new JButton("Hint >>");
+        btnHint.setBorder(new EmptyBorder(new Insets(0,0,0,0)));
 
-        lblClass=new JLabel("Fully Qualified Class Name : ");
-        add(lblClass);
-
-        txtClass=new JTextField();
-        txtClass.addActionListener(this);
-        txtClass.addMouseListener(this);
-        add(txtClass);
-
-        //add folder and jar  display
-
-        lblPath =new JLabel("Java class path entries.Select either folders or jar files ");
-        add(lblPath);
-
         btnFolder=new JButton("Add Folder");
-        btnFolder .addActionListener(this);
-        add(btnFolder);
-
         btnJar=new JButton("Add Jar");
-        btnJar.addActionListener(this);
-        add(btnJar);
-
         btnRemove=new JButton("Remove");
-        btnRemove.addActionListener(this);
-        add(btnRemove);
-
-        listModel = new DefaultListModel();
-        listPathDisply =new JList(listModel);
-        add(listPathDisply);
-
-        //testting class loading
-
         btnTest=new JButton("Test Class Loading");
-        btnTest .addActionListener(this);
-        add(btnTest);
 
-        lblTest=new JLabel(" ");
-        add(lblTest);
+        txtClass =new JTextField();
+        lblTest= new JLabel();
 
-        //Hint Area
+        listModel =new DefaultListModel();
+        listPathDisply =new JList(listModel);
+        listPathDisply.setAutoscrolls(true);
+        listPathDisply.setOpaque(false);
+        listPathDisply.setBorder(BorderFactory.createBevelBorder(1) );
+        listPathDisply.setFocusable(false);
 
 
+        this.setLayout(new GridBagLayout());
 
-        lblHint =new JLabel(hint);
-        lblHint .setHorizontalTextPosition( SwingConstants.LEFT );
-        lblHint .setUI( new MultiLineLabelUI() );
-        add(lblHint );
+        this.add(new JLabel("Fully Qualified Class Name :")
+                , new GridBagConstraints(0, 0, 1, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.NONE
+                , new Insets(5, 10, 0,10), 0, 0));
 
+        this.add(txtClass
+                , new GridBagConstraints(1, 0, GridBagConstraints.REMAINDER, 1, 1.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0, 10), 0, 0));
 
-        setSize(getPreferredSize());
+        this.add(new JLabel("java class path Entries.select either folders or jar files ")
+                , new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1,0.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 0,10), 0, 0));
 
-    }
+        this.add(btnFolder
+                , new GridBagConstraints(0, 2, 1, 1, 0.1, 0.0
+                , GridBagConstraints.CENTER , GridBagConstraints.HORIZONTAL
+                , new Insets(5,10, 1,1), 0, 0));
 
+        btnFolder.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                DirChooser .setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
+                int returnVal = DirChooser.showOpenDialog(btnFolder );
+                if (returnVal == JFileChooser.APPROVE_OPTION) {
+                    DirChooser.setFileSelectionMode(JFileChooser .FILES_ONLY );
+                    File newfile = DirChooser.getSelectedFile();
+                    listModel.addElement(newfile.getAbsolutePath() );
+                    setDefaultPathAndName(newfile );
+                    updateStatusTextField( false,"");
+                }
+                update();
+            }
+        });
 
+        this.add(btnJar
+                , new GridBagConstraints(1, 2, 1, 1, 1.0, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 1,1), 0, 0));
+        btnJar.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
 
-    public void actionPerformed(ActionEvent e) {
-        Object obj=e.getSource();
-        if(obj == btnFolder ) {
-            DirChooser .setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-            int returnVal = DirChooser.showOpenDialog(this);
-            if (returnVal == JFileChooser.APPROVE_OPTION) {
-                DirChooser.setFileSelectionMode(JFileChooser .FILES_ONLY );
-                File newfile = DirChooser.getSelectedFile();
-                listModel.addElement(newfile.getAbsolutePath() );
-                BottomPanel.setEnable(false,true, false, true);
-                setDefaultPathAndName(newfile );
-                updateStatusTextField( false,"");
+                FileChooser.setFileFilter(new JarFileFilter() );
+                int returnVal= FileChooser.showOpenDialog(btnJar);
+                if(returnVal == JFileChooser .APPROVE_OPTION ){
+                    File file = FileChooser.getSelectedFile();
+                    listModel.addElement(file.getAbsolutePath() );
+                    setDefaultPathAndName(file );
+                    updateStatusTextField( false,"");
+                }
+                update();
+            }
+        });
 
+        this.add(btnRemove
+                , new GridBagConstraints(2, 2, 1, 1, 1.0, 0.0
+                , GridBagConstraints.CENTER   , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 1,10), 0, 0));
+        btnRemove.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                handleRemove();
+                update();
             }
+        });
 
-        }else if(obj == btnJar ) {
+        this.add(new JScrollPane(listPathDisply)
+                , new GridBagConstraints(0, 3, GridBagConstraints.REMAINDER, 1, 0.1, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 1,10), 0, 0));
 
-            FileChooser.setFileFilter(new JarFileFilter() );
-            int returnVal= FileChooser.showOpenDialog(this);
-            if(returnVal == JFileChooser .APPROVE_OPTION ){
-                File file = FileChooser.getSelectedFile();
-                listModel.addElement(file.getAbsolutePath() );
-                BottomPanel.setEnable(false,true, false, true);
-                setDefaultPathAndName(file );
-                updateStatusTextField(false,"");
+        this.add(btnTest
+                , new GridBagConstraints(0, 4, 1, 1, 0.1, 0.0
+                , GridBagConstraints.CENTER  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 10, 1,1), 0, 0));
+        btnTest.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                if(!testLoading()){
+                    setBackButtonEnabled(true);
+                    setNextButtonEnabled(false);
+                    setFinishButtonEnabled(false);
+                }else  {
+                    setBackButtonEnabled(true);
+                    setNextButtonEnabled(true);
+                    setFinishButtonEnabled(false);
+                    wsdlgenBean.setClassPathList(getClassPathlist());
+                    wsdlgenBean.setClassName(txtClass.getText().trim() );
+                }
+                update();
             }
+        });
 
-        } else  if( obj == btnRemove){
+        this.add(lblTest
+                , new GridBagConstraints(1, 4, GridBagConstraints.REMAINDER, 1, 1.0, 0.0
+                , GridBagConstraints.WEST  , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 1,1), 0, 0));
 
-            handleRemove();
+        this.add(new JSeparator()
+                , new GridBagConstraints(0, 5, GridBagConstraints.REMAINDER, 1, 0.0, 0.0
+                , GridBagConstraints.WEST , GridBagConstraints.HORIZONTAL
+                , new Insets(5, 1, 1,1), 0, 0));
 
-        }else  if(obj == btnTest ){
-            if(!testLoading()){
-                BottomPanel.setEnable(false,false,false,true);
-
-            }else  {
-                BottomPanel.setEnable(false,true,true,true);
-                wsdlgenBean.setClassPathList(getClassPathlist());
-                wsdlgenBean.setClassName(txtClass.getText().trim() );
+        this.add(btnHint,
+                new GridBagConstraints(0, 6, 1, 1, 0.1,0.0
+                        , GridBagConstraints.WEST , GridBagConstraints.NONE
+                        , new Insets(5, 10, 0, 10), 0, 0));
+        btnHint.addActionListener(new ActionListener()  {
+            public void actionPerformed(ActionEvent e) {
+                if(flag){
+                    btnHint.setText("Hint >>");
+                    txaHint.setText("");
+                    flag=false;
+                }else{
+                    btnHint.setText("Hint <<");
+                    txaHint.setText(hint);
+                    flag=true;
+                }
+                update();
             }
+        });
 
-        }else if(obj ==txtClass ){
-            if (txtClass.getText() != null && !txtClass.getText().trim().equals("")) {
-                BottomPanel.setEnable(false,true, false, true);
-                wsdlgenBean.setClassName(txtClass.getText().trim());
-            }
-        }
-    }
-    private void setDefaultPathAndName(File file)  {
-        String defualtOutPutPath=file.getParent();
-        java2WSDLFrame.outPanel.txtLocation .setText(defualtOutPutPath);
-        java2WSDLFrame.outPanel .txtFileName .setText("services.wsdl");
+        this.add(txaHint
+                , new GridBagConstraints(0, 7, GridBagConstraints.REMAINDER, 1, 0.1,1.0
+                , GridBagConstraints.CENTER , GridBagConstraints.BOTH
+                , new Insets(5, 10, 10, 10), 0, 0));
 
     }
 
-    public void mouseClicked(MouseEvent e) {
-        Object obj = e.getSource();
-        if (obj == txtClass) {
-            if (txtClass.getText() != null && !txtClass.getText().trim().equals("")) {
-                BottomPanel.setEnable(false,true, false, true);
-                // set wsdlgen FileName
-                wsdlgenBean.setClassName(txtClass.getText().trim());
-            }
-        }
-
+    //next
+    public void next() {
+        switchPanel(CodegenFrame.PANEL_OPTION_B );
     }
-
-    public void mouseEntered(MouseEvent e){
+    //back
+    public void back() {
+        switchPanel(CodegenFrame.PANEL_CHOOSER );
     }
-
-    public void mouseExited(MouseEvent e) {
-        Object obj = e.getSource();
-        if (obj == txtClass) {
-            if (txtClass.getText() != null && !txtClass.getText().trim().equals("")) {
-                BottomPanel.setEnable(false,true, false, true);
-                // set wsdlgen FileName
-                wsdlgenBean.setClassName(txtClass.getText().trim());
-            }
-        }
+    //update
+    public void update() {
     }
-
-    public void mousePressed(MouseEvent e) {
-        Object obj = e.getSource();
-        if (obj == txtClass) {
-            if (txtClass.getText() != null && !txtClass.getText().trim().equals("")) {
-                BottomPanel.setEnable(false,true, false, true);
-                // set wsdlgen FileName
-                wsdlgenBean.setClassName(txtClass.getText().trim());
-            }
+    //set default path and name
+    private void setDefaultPathAndName(File file)  {
+        if(file.getParent()!=null){
+            wsdlgenBean.setOutputLocation(file.getParent());
+            wsdlgenBean.setOutputWSDLName("Services.wsdl");
         }
     }
-
-    public void mouseReleased(MouseEvent e) {
-        Object obj = e.getSource();
-        if (obj == txtClass) {
-            if (txtClass.getText() != null && !txtClass.getText().trim().equals("")) {
-                BottomPanel.setEnable(false,true, false, true);
-
-                // set wsdlgen FileName
-                wsdlgenBean.setClassName(txtClass.getText().trim());
-            }
-        }
-    }
-
+    // update next page
     public void updateStatusTextField(boolean success,String text){
         if (success){
-            java2WSDLFrame.opPanel.setDefaultNamespaces(txtClass.getText());
+            wsdlgenBean.setServiceName(NamespaceFinder.getServiceNameText(txtClass.getText()) );
+            wsdlgenBean.setTargetNamespace(NamespaceFinder.getTargetNamespaceFromClass(txtClass.getText()));
+            wsdlgenBean.setTargetNamespacePrefix(NamespaceFinder.getDefaultNamespacePrefix());
+            wsdlgenBean.setSchemaTargetNamespace(NamespaceFinder.getSchemaTargetNamespaceFromClass(txtClass.getText()));
+            wsdlgenBean.setSchemaTargetNamespacePrefix(NamespaceFinder.getDefaultSchemaNamespacePrefix());
         }
         lblTest.setText(text);
     }
 
-
     //  Pops up the file browse dialog box
 
     private void handleRemove() {
@@ -231,8 +256,10 @@
             listModel .remove(selectionIndices[i]);
         }
         updateStatusTextField(false,"");
+        update();
     }
 
+    //get class path list
     public String[] getClassPathlist(){
         Object [] listObject = listModel.toArray() ;
         String [] listString =new String[listObject.length];
@@ -241,7 +268,7 @@
         }
         return listString ;
     }
-
+    // test loading
     public boolean testLoading(){
         java.util.List errorListener = new ArrayList();
         String [] listString =getClassPathlist() ;
@@ -252,92 +279,17 @@
                 String errorMessage = nextObject==null? "Unknown error!" :nextObject.toString();
                 lblTest .setText(errorMessage );
                 updateStatusTextField(false,errorMessage);
+                update();
             }
             return false;
         }else{
-
-            java2WSDLFrame.opPanel.setDefaultNamespaces(txtClass.getText().trim() );
             updateStatusTextField(true,"Class file loaded successfully");
             return true;
         }
 
     }
-
-
-}
-class MiddleLayout implements LayoutManager{
-
-    public MiddleLayout (){
-
+    //get page type
+    public  int getPageType() {
+        return  WizardPanel.JAVA_2_WSDL_TYPE;
     }
-    public void addLayoutComponent(String name, Component comp) {
-    }
-    public void removeLayoutComponent(Component comp) {
-    }
-    public Dimension preferredLayoutSize(Container parent) {
-        Dimension dim = new Dimension(0, 0);
-
-        Insets insets = parent.getInsets();
-        dim.width = 450 + insets.left + insets.right;
-        dim.height = 500 + insets.top + insets.bottom;
-
-        return dim;
-    }
-    public Dimension minimumLayoutSize(Container parent) {
-        return new Dimension(0, 0);
-    }
-
-    public void layoutContainer(Container parent) {
-        Insets insets = parent.getInsets();
-
-        Component c;
-        //class
-        c = parent.getComponent(0);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 20, 180, 24);
-        }
-        c = parent.getComponent(1);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 200, insets.top + 20, 300, 24);
-        }
-        //folders and jar
-        c = parent.getComponent(2);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 54, 500, 24);
-        }
-        c = parent.getComponent(3);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 88, 144, 24);
-        }
-        c = parent.getComponent(4);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 190, insets.top + 88,144, 24);
-        }
-        c = parent.getComponent(5);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 355, insets.top + 88, 144, 24);
-        }
-        c = parent.getComponent(6);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 130 , 475, 150);
-        }
-        //test class loading
-        c= parent.getComponent(7);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 300 , 144 , 24);
-        }
-        c= parent.getComponent(8);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 180, insets.top + 300 , 475 , 24);
-        }
-        //hint Area
-        c= parent.getComponent(9);
-        if (c.isVisible()) {
-            c.setBounds(insets.left + 24, insets.top + 330 , 500 ,100);
-        }
-
-    }
-
-
-
 }
