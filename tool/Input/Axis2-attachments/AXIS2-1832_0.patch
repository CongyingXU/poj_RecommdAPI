Index: C:/eclipse/workspace_axis2/GM/modules/jaxws/test/org/apache/axis2/jaxws/sample/parallelasync/server/AsyncPort.java
===================================================================
--- C:/eclipse/workspace_axis2/GM/modules/jaxws/test/org/apache/axis2/jaxws/sample/parallelasync/server/AsyncPort.java	(revision 482888)
+++ C:/eclipse/workspace_axis2/GM/modules/jaxws/test/org/apache/axis2/jaxws/sample/parallelasync/server/AsyncPort.java	(working copy)
@@ -279,5 +279,19 @@
     public String anotherAsync(
         @WebParam(name = "request", targetNamespace = "")
         String request);
+    
+    /**
+     * 
+     * @param request
+     * @return
+     *     returns java.lang.String
+     */
+    @WebMethod(action = "http://org/test/parallelasync/customAsync")
+    @WebResult(name = "response", targetNamespace = "")
+    @RequestWrapper(localName = "customAsync", targetNamespace = "http://org/test/parallelasync", className = "org.test.parallelasync.CustomAsync")
+    @ResponseWrapper(localName = "customAsyncResponse", targetNamespace = "http://org/test/parallelasync", className = "org.test.parallelasync.CustomAsyncResponse")
+    public String customAsync(
+        @WebParam(name = "request", targetNamespace = "")
+        String request);
 
 }
Index: C:/eclipse/workspace_axis2/GM/modules/jaxws/test/org/apache/axis2/jaxws/sample/ParallelAsyncTests.java
===================================================================
--- C:/eclipse/workspace_axis2/GM/modules/jaxws/test/org/apache/axis2/jaxws/sample/ParallelAsyncTests.java	(revision 482888)
+++ C:/eclipse/workspace_axis2/GM/modules/jaxws/test/org/apache/axis2/jaxws/sample/ParallelAsyncTests.java	(working copy)
@@ -41,19 +41,13 @@
         System.out.println("==================== " + getName());
     }
     
-    // TODO delete this test once the next is running.  This test prevents a
-    // failure because JUNIT doesn't like when a test suite has no tests
-    public void testPREVENT_FAILURE() throws Exception {
-        
-    }
-    
     /**
      * @testStrategy Test that the service is up and running before running any
      *               other tests
      * @wsdl async.wsdl + async.xml
      * @target AsyncPortImpl
      */
-    public void _intestService_isAlive() throws Exception {
+    public void testService_isAlive() throws Exception {
         final String MESSAGE = "testServiceAlive";
 
         AsyncPort port = getPort(null);
