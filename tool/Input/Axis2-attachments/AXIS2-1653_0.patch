Index: http-transport.html
===================================================================
--- http-transport.html	(revision 472758)
+++ http-transport.html	(working copy)
@@ -1,13 +1,16 @@
 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
 <html>
+
 <head>
   <meta http-equiv="content-type" content="">
   <title>HTTP transports</title>
 </head>
 
 <body lang="en">
-<h1><a name="configTransport">HTTP Transport</a></h1>
 
+<a name="configTransport"></a>
+<h1>HTTP Transport</h1>
+
 <p>This document is all about HTTP sender and HTTP receiver, and how they
 work in Axis2.</p>
 
@@ -28,48 +31,48 @@
   <li><a href="#auth">Proxy Authentication</a></li>
   <li><a href="#preemptive_auth">Basic,Digest and NTLM Authentication</a></li>
 </ul>
+
 <a name="CommonsHTTPTransportSender"></a>
-
 <h2>CommonsHTTPTransportSender</h2>
 
 <p>This is the default transport sender that is used in Server API as well as
 Client API. As the name implies it is based on commons-httpclient-3.0.1. In
 order to acquire the maximum flexibility, this sender has implemented POST
-interface and GET interface. GET and HTTP interfaces are also involved in axis2 REST support.</p>
+interface and GET interface. GET and HTTP interfaces are also involved in Axis2 REST support.</p>
 
 <p>Chunking and KeepAlive support is also integrated via the
 facilities provided by commons-httpclient along with HTTP 1.1 support.</p>
 
 <p>&lt;transportSender/&gt; element is used to define transport senders in
-the axis2.xml as follows:</p>
+the Axis2.xml as follows:</p>
 <pre>&lt;transportSender name="http" class="org.apache.axis2.transport.http.CommonsHTTPTransportSender"&gt;<br>        &lt;parameter name="PROTOCOL" locked="false"&gt;HTTP/1.1&lt;/parameter&gt;<br>        &lt;parameter name="Transfer-Encoding"&gt;chunked&lt;/parameter&gt;<br>&lt;/transportSender&gt;<br></pre>
 
-<p>Above code snippet shows a simplest configuration of the transport
+<p>The above code snippet shows the simplest configuration of transport
 sender for common use. &lt;parameter/&gt; element introduces the additional parameters that
 should be compliant with the sender. HTTP PROTOCOL version sets as HTTP/1.0
 or HTTP/1.1. Default version is HTTP/1.1. It should be noted that chunking
 support is available only for HTTP/1.1. Thus, even if the user turn on "chunking", if the HTTP version is 1.0, this setting will be ignored by the transport framework. KeepAlive property is default in version 1.1.</p>
 
-<p>Some absolute properties are provided in runtime such as character encoding style (UTF-8, UTF-16 etc) etc, are provided via MessageContext.</p>
+<p>Some absolute properties are provided at runtime, such as character encoding style (UTF-8, UTF-16 etc) etc, are provided via MessageContext.</p>
+
 <a name="httpsupport"></a>
+<h3>HTTPS support</h3>
 
-<h3>HTTPS support</h3>
 It should be noted that CommonsHTTPTransportSender can be used to communicate
 over https. <code></code>
 <pre>&lt;transportSender name="<b>https</b>" class="org.apache.axis2.transport.http.CommonsHTTPTransportSender"&gt;<br>        &lt;parameter name="PROTOCOL" locked="false"&gt;HTTP/1.1&lt;/parameter&gt;<br>        &lt;parameter name="Transfer-Encoding"&gt;chunked&lt;/parameter&gt;<br>&lt;/transportSender&gt;<br></pre>
 
 <p>Please note that https works only when the server does not expect to
 authenticate the clients and where the server has the clients' public keys in
-its trust store.</p>
+it's trust store.</p>
 
 <a name="timeout_config"></a>
-
 <h2>Timeout Configuration</h2>
 
 <p>There are two timeout exists in transport level. They are called, Socket
 timeout and Connection timeout. This can be configured in deployment time or
-in run time. In deployment time, user has to add the following lines in
-axis2.xml.</p>
+in run time. At the time of deployment, user has to add the following lines in
+Axis2.xml.</p>
 
 <p>For Socket timeout:</p>
 <pre>&lt;parameter name="SO_TIMEOUT" locked="false"&gt;some_int_value&lt;/parameter&gt;</pre>
@@ -77,7 +80,7 @@
 <p>For Connection timeout:</p>
 <pre> &lt;parameter name="CONNECTION_TIMEOUT" locked="false"&gt;some_int_value&lt;/parameter&gt;</pre>
 <br>
-In runtime it's set as follows in the Stub. <source>
+At runtime it is set as follows in the Stub. <source>
 <pre>...
 Options options = new Options();
 options.setProperty(HTTPConstants.SO_TIMEOUT,new Integer(timeOutInMilliSeconds));
@@ -87,8 +90,9 @@
 
 options.setTimeOutInMilliSeconds(timeOutInMilliSeconds);
 ...</pre>
-</source><a name="version_config"></a>
+</source>
 
+<a name="version_config"></a>
 <h2>HTTP Version Configuration</h2>
 
 <p>The default HTTP version is 1.1. There are two methods in which user can
@@ -101,8 +105,8 @@
 options.setProperty(org.apache.axis2.context.MessageContextConstants.HTTP_PROTOCOL_VERSION,org.apache.axis2.transport.http.HTTPConstants.HEADER_PROTOCOL_10);
 ...</pre>
 </ol>
+
 <a name="auth"></a>
-
 <h2>Proxy Authentication</h2>
 
 <p>Commons-http client has the inbuilt ability to support proxy authentication. Axis2 uses deployment time and runtime mechanisms to authenticate proxies.
@@ -176,7 +180,7 @@
 
 <p>Axis2 also allows to add a custom Authentication Scheme to httpclient.</p>
 
-<p>The static inner bean Authenticator of HttpTransportProperties will hold the state of the server to be authenticated with. Once filled it has to be set to the Options's property bag with the key as HTTPConstants.AUTHENTICATE. Following code snippet shows the way of configuring the transport framework to use Basic Authentication</p>
+<p>The static inner bean Authenticator of HttpTransportProperties will hold the state of the server to be authenticated with. Once filled it has to be set to the Options's property bag with the key as HTTPConstants.AUTHENTICATE. The following code snippet shows the way of configuring the transport framework to use Basic Authentication:</p>
  
  <pre>
  ...
@@ -193,4 +197,5 @@
  </pre>
 
 </body>
+
 </html>
