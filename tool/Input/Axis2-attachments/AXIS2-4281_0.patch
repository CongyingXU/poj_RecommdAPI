Index: src/org/apache/axis2/deployment/ServiceDeployer.java
===================================================================
--- src/org/apache/axis2/deployment/ServiceDeployer.java	(revision 752399)
+++ src/org/apache/axis2/deployment/ServiceDeployer.java	(working copy)
@@ -88,9 +88,7 @@
                                              location,
                                              deploymentFileData,
                                              axisConfig);
-            log.info(Messages.getMessage(DeploymentErrorMsgs.DEPLOYING_WS,
-                                         deploymentFileData.getName(),
-                                         location.toString()));
+
         } catch (DeploymentException de) {
             de.printStackTrace();
             log.error(Messages.getMessage(DeploymentErrorMsgs.INVALID_SERVICE,
Index: src/org/apache/axis2/deployment/ServiceBuilder.java
===================================================================
--- src/org/apache/axis2/deployment/ServiceBuilder.java	(revision 752399)
+++ src/org/apache/axis2/deployment/ServiceBuilder.java	(working copy)
@@ -657,7 +657,7 @@
 	 */
 	protected void processModuleRefs(Iterator moduleRefs)
 			throws DeploymentException {
-		try {
+//		try {
 			while (moduleRefs.hasNext()) {
 				OMElement moduleref = (OMElement) moduleRefs.next();
 				OMAttribute moduleRefAttribute = moduleref
@@ -665,18 +665,18 @@
 
 				if (moduleRefAttribute != null) {
 					String refName = moduleRefAttribute.getAttributeValue();
-
-					if (axisConfig.getModule(refName) == null) {
-						throw new DeploymentException(Messages.getMessage(
-								DeploymentErrorMsgs.MODULE_NOT_FOUND, refName));
-					} else {
-						service.addModuleref(refName);
-					}
+                    service.addModuleref(refName);
+//					if (axisConfig.getModule(refName) == null) {
+//						throw new DeploymentException(Messages.getMessage(
+//								DeploymentErrorMsgs.MODULE_NOT_FOUND, refName));
+//					} else {
+//						service.addModuleref(refName);
+//					}
 				}
 			}
-		} catch (AxisFault axisFault) {
-			throw new DeploymentException(axisFault);
-		}
+//		} catch (AxisFault axisFault) {
+//			throw new DeploymentException(axisFault);
+//		}
 	}
 
 	protected void processOperationModuleConfig(Iterator moduleConfigs,
Index: src/org/apache/axis2/deployment/ServiceGroupBuilder.java
===================================================================
--- src/org/apache/axis2/deployment/ServiceGroupBuilder.java	(revision 752399)
+++ src/org/apache/axis2/deployment/ServiceGroupBuilder.java	(working copy)
@@ -117,25 +117,26 @@
      */
     protected void processModuleRefs(Iterator moduleRefs, AxisServiceGroup axisServiceGroup)
             throws DeploymentException {
-        try {
+//        try {
             while (moduleRefs.hasNext()) {
                 OMElement moduleref = (OMElement) moduleRefs.next();
                 OMAttribute moduleRefAttribute = moduleref.getAttribute(new QName(TAG_REFERENCE));
 
                 if (moduleRefAttribute != null) {
                     String refName = moduleRefAttribute.getAttributeValue();
+                    axisServiceGroup.addModuleref(refName);
 
-                    if (axisConfig.getModule(refName) == null) {
-                        throw new DeploymentException(
-                                Messages.getMessage(DeploymentErrorMsgs.MODULE_NOT_FOUND, refName));
-                    } else {
-                        axisServiceGroup.addModuleref(refName);
-                    }
+//                    if (axisConfig.getModule(refName) == null) {
+//                        throw new DeploymentException(
+//                                Messages.getMessage(DeploymentErrorMsgs.MODULE_NOT_FOUND, refName));
+//                    } else {
+//                        axisServiceGroup.addModuleref(refName);
+//                    }
                 }
             }
-        } catch (AxisFault axisFault) {
-            throw new DeploymentException(axisFault);
-        }
+//        } catch (AxisFault axisFault) {
+//            throw new DeploymentException(axisFault);
+//        }
     }
 
     protected void processServiceModuleConfig(Iterator moduleConfigs, ParameterInclude parent,
Index: src/org/apache/axis2/deployment/DescriptionBuilder.java
===================================================================
--- src/org/apache/axis2/deployment/DescriptionBuilder.java	(revision 752399)
+++ src/org/apache/axis2/deployment/DescriptionBuilder.java	(working copy)
@@ -476,7 +476,7 @@
 
     protected void processOperationModuleRefs(Iterator moduleRefs,
                                               AxisOperation operation) throws DeploymentException {
-        try {
+//        try {
             while (moduleRefs.hasNext()) {
                 OMElement moduleref = (OMElement) moduleRefs.next();
                 OMAttribute moduleRefAttribute = moduleref
@@ -484,20 +484,21 @@
 
                 if (moduleRefAttribute != null) {
                     String refName = moduleRefAttribute.getAttributeValue();
+                    operation.addModule(refName);
 
-                    if (axisConfig.getModule(refName) == null) {
-                        throw new DeploymentException(Messages.getMessage(
-                                DeploymentErrorMsgs.MODULE_NOT_FOUND, refName));
-                    } else {
-                        operation.addModule(refName);
-                    }
+//                    if (axisConfig.getModule(refName) == null) {
+//                        throw new DeploymentException(Messages.getMessage(
+//                                DeploymentErrorMsgs.MODULE_NOT_FOUND, refName));
+//                    } else {
+//                        operation.addModule(refName);
+//                    }
                 }
             }
-        } catch (AxisFault axisFault) {
-            throw new DeploymentException(Messages.getMessage(
-                    DeploymentErrorMsgs.MODULE_NOT_FOUND, axisFault
-                    .getMessage()), axisFault);
-        }
+//        } catch (AxisFault axisFault) {
+//            throw new DeploymentException(Messages.getMessage(
+//                    DeploymentErrorMsgs.MODULE_NOT_FOUND, axisFault
+//                    .getMessage()), axisFault);
+//        }
     }
 
     /**
Index: src/org/apache/axis2/util/FaultyServiceData.java
===================================================================
--- src/org/apache/axis2/util/FaultyServiceData.java	(revision 0)
+++ src/org/apache/axis2/util/FaultyServiceData.java	(revision 0)
@@ -0,0 +1,67 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.axis2.util;
+
+import org.apache.axis2.description.AxisServiceGroup;
+import org.apache.axis2.deployment.repository.util.DeploymentFileData;
+
+import java.util.ArrayList;
+import java.net.URL;
+
+public class FaultyServiceData {
+
+    private String serviceGroupName;
+    private AxisServiceGroup serviceGroup;
+    private ArrayList serviceList;
+    private DeploymentFileData currentDeploymentFile;
+    private URL serviceLocation;
+
+    public FaultyServiceData(AxisServiceGroup serviceGroup,
+                             ArrayList serviceList,
+                             URL serviceLocation,
+                             DeploymentFileData currentDeploymentFile) {
+        serviceGroupName = serviceGroup.getServiceGroupName();
+        this.serviceGroup = serviceGroup;
+        this.serviceList = serviceList;
+        this.currentDeploymentFile = currentDeploymentFile;
+        this.serviceLocation = serviceLocation;
+
+    }
+
+    public AxisServiceGroup getServiceGroup() {
+        return serviceGroup;
+    }
+
+    public DeploymentFileData getCurrentDeploymentFile() {
+        return currentDeploymentFile;
+    }
+
+    public ArrayList getServiceList() {
+        return serviceList;
+    }
+
+    public URL getServiceLocation() {
+        return serviceLocation;
+    }
+
+    public String getServiceGroupName() {
+        return serviceGroupName;
+    }
+}
