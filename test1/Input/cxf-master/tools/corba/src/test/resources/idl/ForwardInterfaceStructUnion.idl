/* 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

module org {
    module cc {
        interface IpCall;

        struct TpCallIdentifier {
            IpCall CallReference;
            long number;
        };
        
        union u2 switch (long) {
	       case e2_1:
    	       IpCall u2_1;
   	       default:
  		    string u2_2;
	    };
	    

        interface IpAppCall {
            void routeCallStruct(in TpCallIdentifier inTp,
                           out TpCallIdentifier outTp,
                           inout TpCallIdentifier inoutTp);              

            void routeCallUnion(in u2 inTp,
                           out u2 outTp,
                           inout u2 inoutTp);              
        
            void routeCallParam(in IpCall inTp,
                           out IpCall outTp,
                           inout   IpCall inoutTp);
        };

        interface IpCall {
            void routeReq(in double inDouble,
                          out short outShort,
                          inout long inoutLong);
        };
    };
};