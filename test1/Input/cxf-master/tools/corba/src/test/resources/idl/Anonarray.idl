/* 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/


struct anonStruct {

    long structLongArray[2];
    long structLongArrayArray[2][4];
    long structLongArrayArrayArray[2][4][8];

};

typedef struct anonTypedefStruct {

    long typedefStructLongArray[2];
    long typedefStructLongArrayArray[2][4];
    long typedefStructLongArrayArrayArray[2][4][8];

} myAnonTypedefStruct;



union anonUnion switch(long) {
    case 1:
        long unionLongArray[2];
    case 2:
        long unionLongArrayArray[2][4];
    default:
        long unionLongArrayArrayArray[2][4][8];
};

typedef union anonTypedefUnion switch(long) {
    case 1:
        long unionLongArray[2];
    case 2:
        long unionLongArrayArray[2][4];
    default:
        long unionLongArrayArrayArray[2][4][8];
} myAnonUnion;



exception anonException {
    long exceptionLongArray[2];
    long exceptionLongArrayArray[2][4];
    long exceptionLongArrayArrayArray[2][4][8];
};
