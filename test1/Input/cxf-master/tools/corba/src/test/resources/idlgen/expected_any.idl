/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/
interface anyInterface {
    union _omg_SimpleUnion switch(long) {
        case 0:
            string varString;
        case 1:
            any varAny;
        case 2:
            float varFloat;
    };
    struct ErrorInfoEnh {
        long errorCode;
        string errorMessage;
        any errorData;
    };
    struct PrimitiveStruct {
        long varLong;
        short varShort;
        float varFloat;
        double varDouble;
        char varChar;
        boolean varBoolean;
        octet varOctet;
        string varString;
        unsigned long varUlong;
        unsigned short varUshort;
        any varAny;
    };
    union SimpleUnion switch(long) {
        case 0:
            string varString;
        case 1:
            any varAny;
        case 2:
            float varFloat;
    };
    struct SimpleStruct {
        float varFloat;
        any varAny;
        string varString;
    };
    any
    test_any(
        in string p,
        in any x,
        out any z,
        inout any y
    );
};
