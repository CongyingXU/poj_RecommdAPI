/* 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/ 

interface UnionTest {

    union Foo;

    typedef sequence<Foo> FooSeq; 
    typedef sequence<FooSeq> FooTree; 

    union Foo switch (long) {
        case 1:
            FooSeq u1_1;
        case 2:
            FooTree u1_2;
        default:
            long u1_3;
    };

    FooTree getUnionTree(in FooTree inU, out FooTree outU,
                     inout FooTree inoutU);

    Foo getUnion(in Foo inU, out Foo outU,
                 inout Foo inoutU);

};