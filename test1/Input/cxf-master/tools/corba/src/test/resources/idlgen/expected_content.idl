/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/
struct sub1SequenceStruct {
    float e3;
};
struct base {
    string attr1;
    long attr2;
    long e1;
    string e2;
};
struct sub1 {
    base base_f;
    sub1SequenceStruct sub1SequenceStruct_f;
};
struct AllTypeAllStruct {
    string varStringExt;
    float varFloatExt;
};
struct AllType {
    base base_f;
    string AttrString;
    AllTypeAllStruct AllTypeAllStruct_f;
};
union sub2ChoiceType switch(long) {
    case 0:
        double e4;
    case 1:
        double e6;
};
struct sub2 {
    base base_f;
    sub2ChoiceType sub2ChoiceType_f;
};
interface ContentPortType {
    ::base
    echoObject(
        in ::base x
    );
    ::sub2
    echoObject2(
        in ::sub1 x
    );
};
