/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */ 

interface ObjectRef {
    void testOp();
};

struct TestStruct {
    ObjectRef ref;
    string str;
};

exception TestException {
    ObjectRef ref;
};

typedef ObjectRef TestArray[5];
typedef sequence<ObjectRef> TestSequence;

union TestUnion switch(short) {
    case 0:
        ObjectRef ref;
    case 1:
        string str;
    default:
        long def;
};

interface TestInterface {
    // Test as an attribute
    attribute ObjectRef ref;
    attribute Object obj;

    // Test a custom object reference 
    void testObjectRefAsParam(in ObjectRef o);
    ObjectRef testObjectRefAsReturn();

    // Test a default object reference
    void testObjectAsParam(in Object o);
    Object testObjectAsReturn();
};
