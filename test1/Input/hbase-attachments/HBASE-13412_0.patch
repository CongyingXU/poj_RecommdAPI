From dfc066ee83243695b27231af2a0be5cddefa4fb1 Mon Sep 17 00:00:00 2001
From: Andrew Purtell <apurtell@apache.org>
Date: Mon, 11 May 2015 13:39:56 -0700
Subject: [PATCH] HBASE-13412 ADDENDUM Region split decisions should have
 jitter

For 0.98 only, by default do not change ConstantSizeRegionSplitPolicy
default behavior.
---
 .../hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy.java    | 6 ++++--
 .../org/apache/hadoop/hbase/regionserver/TestRegionSplitPolicy.java | 3 +++
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy.java
index ae7fdae..9ef7a9f 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ConstantSizeRegionSplitPolicy.java
@@ -52,8 +52,10 @@ public class ConstantSizeRegionSplitPolicy extends RegionSplitPolicy {
       this.desiredMaxFileSize = conf.getLong(HConstants.HREGION_MAX_FILESIZE,
         HConstants.DEFAULT_MAX_FILE_SIZE);
     }
-    double jitter = conf.getDouble("hbase.hregion.max.filesize.jitter", 0.25D);
-    this.desiredMaxFileSize += (long)(desiredMaxFileSize * (RANDOM.nextFloat() - 0.5D) * jitter);
+    double jitter = conf.getDouble("hbase.hregion.max.filesize.jitter", Double.NaN);
+    if (!Double.isNaN(jitter)) {
+      this.desiredMaxFileSize += (long)(desiredMaxFileSize * (RANDOM.nextFloat() - 0.5D) * jitter);
+    }
   }
 
   @Override
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionSplitPolicy.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionSplitPolicy.java
index 843fba8..f24b0b8 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionSplitPolicy.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionSplitPolicy.java
@@ -67,6 +67,8 @@ public class TestRegionSplitPolicy {
     // Configure IncreasingToUpperBoundRegionSplitPolicy as our split policy
     conf.set(HConstants.HBASE_REGION_SPLIT_POLICY_KEY,
       IncreasingToUpperBoundRegionSplitPolicy.class.getName());
+    conf.setDouble("hbase.hregion.max.filesize.jitter", 0.25D);
+
     // Now make it so the mock region has a RegionServerService that will
     // return 'online regions'.
     RegionServerServices rss = Mockito.mock(RegionServerServices.class);
@@ -131,6 +133,7 @@ public class TestRegionSplitPolicy {
   @Test
   public void testCreateDefault() throws IOException {
     conf.setLong(HConstants.HREGION_MAX_FILESIZE, 1234L);
+    conf.setDouble("hbase.hregion.max.filesize.jitter", 0.25D);
 
     // Using a default HTD, should pick up the file size from
     // configuration.
-- 
1.9.1

