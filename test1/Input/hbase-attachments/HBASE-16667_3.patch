diff --git conf/hbase-env.cmd conf/hbase-env.cmd
index eb31b1b..d16de55 100644
--- conf/hbase-env.cmd
+++ conf/hbase-env.cmd
@@ -42,10 +42,6 @@
 @rem @rem See TestIPv6NIOServerSocketChannel.
 set HBASE_OPTS="-XX:+UseConcMarkSweepGC" "-Djava.net.preferIPv4Stack=true"
 
-@rem Configure PermSize. Only needed in JDK7. You can safely remove it for JDK8+
-set HBASE_MASTER_OPTS=%HBASE_MASTER_OPTS% "-XX:PermSize=128m" "-XX:MaxPermSize=128m"
-set HBASE_REGIONSERVER_OPTS=%HBASE_REGIONSERVER_OPTS% "-XX:PermSize=128m" "-XX:MaxPermSize=128m"
-
 @rem Uncomment below to enable java garbage collection logging for the server-side processes
 @rem this enables basic gc logging for the server processes to the .out file
 @rem set SERVER_GC_OPTS="-verbose:gc" "-XX:+PrintGCDetails" "-XX:+PrintGCDateStamps" %HBASE_GC_OPTS%
diff --git conf/hbase-env.sh conf/hbase-env.sh
index c45e7a5..31e8441 100644
--- conf/hbase-env.sh
+++ conf/hbase-env.sh
@@ -1,3 +1,4 @@
+#!/usr/bin/env bash
 #
 #/**
 # * Licensed to the Apache Software Foundation (ASF) under one
@@ -42,10 +43,6 @@
 # see http://hbase.apache.org/book.html#performance
 export HBASE_OPTS="-XX:+UseConcMarkSweepGC"
 
-# Configure PermSize. Only needed in JDK7. You can safely remove it for JDK8+
-export HBASE_MASTER_OPTS="$HBASE_MASTER_OPTS -XX:PermSize=128m -XX:MaxPermSize=128m"
-export HBASE_REGIONSERVER_OPTS="$HBASE_REGIONSERVER_OPTS -XX:PermSize=128m -XX:MaxPermSize=128m"
-
 # Uncomment one of the below three options to enable java garbage collection logging for the server-side processes.
 
 # This enables basic gc logging to the .out file.
diff --git dev-support/jenkinsEnv.sh dev-support/jenkinsEnv.sh
index 6961437..d7fe873 100755
--- dev-support/jenkinsEnv.sh
+++ dev-support/jenkinsEnv.sh
@@ -30,7 +30,7 @@ export CLOVER_HOME=/home/jenkins/tools/clover/latest
 export MAVEN_HOME=/home/jenkins/tools/maven/latest
 
 export PATH=$PATH:$JAVA_HOME/bin:$ANT_HOME/bin:
-export MAVEN_OPTS="${MAVEN_OPTS:-"-Xmx3100M -XX:-UsePerfData -XX:MaxPermSize=256m"}"
+export MAVEN_OPTS="${MAVEN_OPTS:-"-Xmx3100M -XX:-UsePerfData"}"
 
 ulimit -n
 
diff --git hbase-it/pom.xml hbase-it/pom.xml
index 70d13ad..c5976e8 100644
--- hbase-it/pom.xml
+++ hbase-it/pom.xml
@@ -91,9 +91,6 @@
             <excludes>
               <exclude>${unittest.include}</exclude>
               <exclude>**/*$*</exclude>
-              <!--Do this to prevent OOME because permgen is full seen on build.apache.org
-               -->
-              <!--<exclude>${test.exclude.pattern}</exclude>-->
             </excludes>
             <redirectTestOutputToFile>${test.output.tofile}</redirectTestOutputToFile>
             <environmentVariables>
@@ -174,7 +171,7 @@
             <!-- TODO: failsafe does timeout, but verify does not fail the build because of the timeout.
                  I believe it is a failsafe bug, we may consider using surefire -->
             <forkedProcessTimeoutInSeconds>1800</forkedProcessTimeoutInSeconds>
-            <argLine>-enableassertions -Xmx${failsafe.Xmx} -XX:MaxPermSize=368m
+            <argLine>-enableassertions -Xmx${failsafe.Xmx}
                 -Djava.security.egd=file:/dev/./urandom -XX:+CMSClassUnloadingEnabled
                 -verbose:gc -XX:+PrintCommandLineFlags  -XX:+PrintFlagsFinal</argLine>
           </configuration>
diff --git hbase-spark/pom.xml hbase-spark/pom.xml
index aa03854..7cd78f0 100644
--- hbase-spark/pom.xml
+++ hbase-spark/pom.xml
@@ -631,7 +631,7 @@
                         <configuration>
                             <tagsToExclude>Integration-Test</tagsToExclude>
                             <argLine>
-                                -Xmx1536m -XX:MaxPermSize=512m -XX:ReservedCodeCacheSize=512m
+                                -Xmx1536m -XX:ReservedCodeCacheSize=512m
                             </argLine>
                             <parallel>false</parallel>
                         </configuration>
diff --git pom.xml pom.xml
index b26c015..1b45a31 100644
--- pom.xml
+++ pom.xml
@@ -1157,7 +1157,7 @@
       yyyy-MM-dd'T'HH:mm
     </maven.build.timestamp.format>
     <buildDate>${maven.build.timestamp}</buildDate>
-    <compileSource>1.7</compileSource>
+    <compileSource>1.8</compileSource>
     <!-- Build dependencies -->
     <maven.min.version>3.0.4</maven.min.version>
     <java.min.version>${compileSource}</java.min.version>
@@ -1256,10 +1256,10 @@
     <!--Mark our test runs with '-Dhbase.build.id' so we can identify a surefire test as ours in a process listing
      -->
     <hbase-surefire.argLine>-enableassertions -Dhbase.build.id=${build.id} -Xmx${surefire.Xmx}
-      -XX:MaxPermSize=256m -Djava.security.egd=file:/dev/./urandom -Djava.net.preferIPv4Stack=true
+      -Djava.security.egd=file:/dev/./urandom -Djava.net.preferIPv4Stack=true
       -Djava.awt.headless=true
     </hbase-surefire.argLine>
-    <hbase-surefire.cygwin-argLine>-enableassertions -Xmx${surefire.cygwinXmx} -XX:MaxPermSize=256m
+    <hbase-surefire.cygwin-argLine>-enableassertions -Xmx${surefire.cygwinXmx}
       -Djava.security.egd=file:/dev/./urandom -Djava.net.preferIPv4Stack=true
       "-Djava.library.path=${hadoop.library.path};${java.library.path}"
     </hbase-surefire.cygwin-argLine>
@@ -2748,7 +2748,7 @@
          or you can provide the license with -Dmaven.clover.licenseLocation=/path/to/license. Committers can find
          the license under https://svn.apache.org/repos/private/committers/donated-licenses/clover/
          The report will be generated under target/site/clover/index.html when you run
-         MAVEN_OPTS="-Xmx2048m -XX:MaxPermSize=512m" mvn clean package -Pclover site -->
+         MAVEN_OPTS="-Xmx2048m" mvn clean package -Pclover site -->
     <profile>
       <id>clover</id>
       <activation>
