From b11fed376db120ee3391e2183f0b18e59db25227 Mon Sep 17 00:00:00 2001
From: Lei Chen <leochen4891@gmail.com>
Date: Fri, 14 Aug 2015 00:34:08 -0700
Subject: [PATCH] HBASE-14082

---
 .../hadoop/hbase/regionserver/MetricsRegionSource.java     |  2 ++
 .../hadoop/hbase/regionserver/MetricsRegionWrapper.java    |  5 +++++
 .../hadoop/hbase/regionserver/MetricsRegionSourceImpl.java |  3 +++
 .../hbase/regionserver/TestMetricsRegionSourceImpl.java    |  5 +++++
 .../hbase/regionserver/MetricsRegionWrapperImpl.java       |  5 +++++
 .../hbase/regionserver/MetricsRegionWrapperStub.java       | 14 ++++++++++++++
 .../hadoop/hbase/regionserver/TestMetricsRegion.java       | 10 ++++++++++
 7 files changed, 44 insertions(+)

diff --git a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSource.java b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSource.java
index 8abbb1f..874be31 100644
--- a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSource.java
+++ b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSource.java
@@ -37,6 +37,8 @@ public interface MetricsRegionSource extends Comparable<MetricsRegionSource> {
       "Number of files that were input for finished, successful or aborted, compactions";
   String COPROCESSOR_EXECUTION_STATISTICS = "coprocessorExecutionStatistics";
   String COPROCESSOR_EXECUTION_STATISTICS_DESC = "Statistics for coprocessor execution times";
+  String REPLICA_ID = "replicaid";
+  String REPLICA_ID_DESC = "The replica ID of a region. 0 is primary, otherwise is secondary";
 
   /**
    * Close the region's metrics as this region is closing.
diff --git a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapper.java b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapper.java
index 7d61f81..7f06e52 100644
--- a/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapper.java
+++ b/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapper.java
@@ -88,4 +88,9 @@ public interface MetricsRegionWrapper {
    * Get the time spent by coprocessors in this region.
    */
   Map<String, DescriptiveStatistics> getCoprocessorExecutionStatistics();
+
+  /**
+   * Get the replica id of this region. 0: primary, >0: secondary
+   */
+  int getReplicaId();
 }
diff --git a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSourceImpl.java b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSourceImpl.java
index df23942..7bf29d4 100644
--- a/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSourceImpl.java
+++ b/hbase-hadoop2-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSourceImpl.java
@@ -197,6 +197,9 @@ public class MetricsRegionSourceImpl implements MetricsRegionSource {
     mrb.addCounter(Interns.info(regionNamePrefix + MetricsRegionSource.NUM_FILES_COMPACTED_COUNT,
         MetricsRegionSource.NUM_FILES_COMPACTED_DESC),
         this.regionWrapper.getNumFilesCompacted());
+    mrb.addCounter(Interns.info(regionNamePrefix + MetricsRegionSource.REPLICA_ID,
+        MetricsRegionSource.REPLICA_ID_DESC),
+        this.regionWrapper.getReplicaId());
     for (Map.Entry<String, DescriptiveStatistics> entry : this.regionWrapper
         .getCoprocessorExecutionStatistics()
         .entrySet()) {
diff --git a/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionSourceImpl.java b/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionSourceImpl.java
index 4be8905..4ae32b5 100644
--- a/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionSourceImpl.java
+++ b/hbase-hadoop2-compat/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegionSourceImpl.java
@@ -128,5 +128,10 @@ public class TestMetricsRegionSourceImpl {
     public Map<String, DescriptiveStatistics> getCoprocessorExecutionStatistics() {
       return null;
     }
+
+    @Override
+    public int getReplicaId() {
+      return 0;
+    }
   }
 }
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperImpl.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperImpl.java
index be05f3e..ac0a45d 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperImpl.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperImpl.java
@@ -169,4 +169,9 @@ public class MetricsRegionWrapperImpl implements MetricsRegionWrapper, Closeable
     return coprocessorTimes;
   }
 
+  @Override
+  public int getReplicaId() {
+    return region.getRegionInfo().getReplicaId();
+  }
+
 }
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperStub.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperStub.java
index 2658c0a..a7a5e3f 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperStub.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/MetricsRegionWrapperStub.java
@@ -24,6 +24,15 @@ import java.util.Map;
 import org.apache.commons.math.stat.descriptive.DescriptiveStatistics;
 
 public class MetricsRegionWrapperStub implements MetricsRegionWrapper {
+  int replicaid = 0;
+
+  public MetricsRegionWrapperStub() {
+    this.replicaid = 0;
+  }
+
+  public MetricsRegionWrapperStub(int replicaid) {
+    this.replicaid = replicaid;
+  }
 
   @Override
   public String getTableName() {
@@ -89,4 +98,9 @@ public class MetricsRegionWrapperStub implements MetricsRegionWrapper {
   public Map<String, DescriptiveStatistics> getCoprocessorExecutionStatistics() {
     return new HashMap<String, DescriptiveStatistics>();
   }
+
+  @Override
+  public int getReplicaId() {
+    return replicaid;
+  }
 }
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegion.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegion.java
index ddaee3d..130a119 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegion.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMetricsRegion.java
@@ -39,6 +39,16 @@ public class TestMetricsRegion {
     HELPER.assertGauge("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_storeCount", 101, agg);
     HELPER.assertGauge("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_storeFileCount", 102, agg);
     HELPER.assertGauge("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_memstoreSize", 103, agg);
+    HELPER.assertCounter("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_replicaid", 0, agg);
+    mr.close();
+
+    // test region with replica id > 0
+    mr = new MetricsRegion(new MetricsRegionWrapperStub(1));
+    agg = mr.getSource().getAggregateSource();
+    HELPER.assertGauge("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_storeCount", 101, agg);
+    HELPER.assertGauge("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_storeFileCount", 102, agg);
+    HELPER.assertGauge("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_memstoreSize", 103, agg);
+    HELPER.assertCounter("namespace_TestNS_table_MetricsRegionWrapperStub_region_DEADBEEF001_metric_replicaid", 1, agg);
     mr.close();
   }
 }
-- 
2.1.4

