/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.hadoop.hbase.regionserver;

import org.apache.hadoop.hbase.Cell;


public class CellWithSequenceNumber implements Cell {

  private final Cell cell;

  private boolean setSeqNum = false;

  private long seqNum = 0;

  public CellWithSequenceNumber(final Cell cell) {
    this.cell = cell;
  }
  // If we do this way we don't need the Sequence number change
  public CellWithSequenceNumber(final Cell cell, final long seqNum) {
    this(cell);
    setSeqNum = true;
    this.seqNum = seqNum;
  }

  @Override
  public byte[] getRowArray() {
    return this.cell.getRowArray();
  }

  @Override
  public int getRowOffset() {
    return this.cell.getRowOffset();
  }

  @Override
  public short getRowLength() {
    return this.cell.getRowLength();
  }

  @Override
  public byte[] getFamilyArray() {
    return this.cell.getFamilyArray();
  }

  @Override
  public int getFamilyOffset() {
    return this.cell.getFamilyOffset();
  }

  @Override
  public byte getFamilyLength() {
    return this.cell.getFamilyLength();
  }

  @Override
  public byte[] getQualifierArray() {
    return this.cell.getQualifierArray();
  }

  @Override
  public int getQualifierOffset() {
    return this.cell.getQualifierOffset();
  }

  @Override
  public int getQualifierLength() {
    return this.cell.getQualifierLength();
  }

  @Override
  public long getTimestamp() {
    return this.cell.getTimestamp();
  }

  @Override
  public byte getTypeByte() {
    return this.cell.getTypeByte();
  }

  @Override
  @Deprecated
  public long getMvccVersion() {
    return this.getSequenceId();
  }

  @Override
  public long getSequenceId() {
    if (setSeqNum) {
      return this.seqNum;
    }
    return this.cell.getSequenceId();
  }

  @Override
  public byte[] getValueArray() {
    return this.cell.getValueArray();
  }

  @Override
  public int getValueOffset() {
    return this.cell.getValueOffset();
  }

  @Override
  public int getValueLength() {
    return this.cell.getValueLength();
  }

  @Override
  public byte[] getTagsArray() {
    return this.cell.getTagsArray();
  }

  @Override
  public int getTagsOffset() {
    return this.cell.getTagsOffset();
  }

  @Override
  public int getTagsLength() {
    return this.cell.getTagsLength();
  }

  @Override
  @Deprecated
  public byte[] getValue() {
    return this.cell.getValue();
  }

  @Override
  @Deprecated
  public byte[] getFamily() {
    return this.cell.getFamily();
  }

  @Override
  @Deprecated
  public byte[] getQualifier() {
    return this.cell.getQualifier();
  }

  @Override
  @Deprecated
  public byte[] getRow() {
    return this.cell.getRow();
  }

}
