From ae4ad360421078292c90ace9a9842961f0db1e4d Mon Sep 17 00:00:00 2001
From: John Leach <jleach@splicemachine.com>
Date: Wed, 30 Nov 2016 08:25:03 -0600
Subject: [PATCH] HBASE-17207 Arrays.asList with too few arguments

---
 .../java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java | 7 ++-----
 .../main/java/org/apache/hadoop/hbase/client/MultiAction.java    | 9 ++-------
 .../src/main/java/org/apache/hadoop/hbase/filter/FilterList.java | 3 ++-
 .../hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java | 7 ++-----
 .../main/java/org/apache/hadoop/hbase/master/RackManager.java    | 3 ++-
 .../java/org/apache/hadoop/hbase/master/RegionStateStore.java    | 3 ++-
 6 files changed, 12 insertions(+), 20 deletions(-)

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java
index f7eb09d..d8c8dea 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/BufferedMutatorImpl.java
@@ -27,10 +27,7 @@ import org.apache.hadoop.hbase.ipc.RpcControllerFactory;
 
 import java.io.IOException;
 import java.io.InterruptedIOException;
-import java.util.Arrays;
-import java.util.Iterator;
-import java.util.List;
-import java.util.NoSuchElementException;
+import java.util.*;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.TimeUnit;
@@ -129,7 +126,7 @@ public class BufferedMutatorImpl implements BufferedMutator {
   @Override
   public void mutate(Mutation m) throws InterruptedIOException,
       RetriesExhaustedWithDetailsException {
-    mutate(Arrays.asList(m));
+    mutate(Collections.singletonList(m));
   }
 
   @Override
diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiAction.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiAction.java
index ef1fce9..6449d93 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiAction.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/MultiAction.java
@@ -18,12 +18,7 @@
  */
 package org.apache.hadoop.hbase.client;
 
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.TreeMap;
+import java.util.*;
 
 import org.apache.hadoop.hbase.HConstants;
 import org.apache.hadoop.hbase.classification.InterfaceAudience;
@@ -68,7 +63,7 @@ public final class MultiAction {
    * @param a
    */
   public void add(byte[] regionName, Action a) {
-    add(regionName, Arrays.asList(a));
+    add(regionName, Collections.singletonList(a));
   }
 
   /**
diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FilterList.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FilterList.java
index 746df3b..c10d18c 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FilterList.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/filter/FilterList.java
@@ -21,6 +21,7 @@ package org.apache.hadoop.hbase.filter;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 import org.apache.hadoop.hbase.Cell;
@@ -194,7 +195,7 @@ final public class FilterList extends FilterBase {
    * @param filter another filter
    */
   public void addFilter(Filter filter) {
-    addFilter(Arrays.asList(filter));
+    addFilter(Collections.singletonList(filter));
   }
 
   @Override
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java
index c0121d8..f3c7895 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java
@@ -53,10 +53,7 @@ import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.nio.ByteBuffer;
 import java.security.GeneralSecurityException;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
+import java.util.*;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
 
@@ -355,7 +352,7 @@ public final class FanOutOneBlockAsyncDFSOutputSaslHelper {
         throw new IOException(String.format("Invalid cipher suite, %s=%s",
           DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY, cipherSuites));
       }
-      return Arrays.asList(new CipherOption(CipherSuite.AES_CTR_NOPADDING));
+      return Collections.singletonList(new CipherOption(CipherSuite.AES_CTR_NOPADDING));
     }
 
     private void sendSaslMessage(ChannelHandlerContext ctx, byte[] payload,
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RackManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RackManager.java
index ea4612a..2b1fb50 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RackManager.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RackManager.java
@@ -19,6 +19,7 @@ package org.apache.hadoop.hbase.master;
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 import org.apache.commons.logging.Log;
@@ -63,7 +64,7 @@ public class RackManager {
     }
     // just a note - switchMapping caches results (at least the implementation should unless the
     // resolution is really a lightweight process)
-    List<String> racks = switchMapping.resolve(Arrays.asList(server.getHostname()));
+    List<String> racks = switchMapping.resolve(Collections.singletonList(server.getHostname()));
     if (racks != null && !racks.isEmpty()) {
       return racks.get(0);
     }
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java
index 2dbc087..3a2a6d7 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/RegionStateStore.java
@@ -21,6 +21,7 @@ import com.google.common.base.Preconditions;
 
 import java.io.IOException;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 import org.apache.commons.logging.Log;
@@ -243,7 +244,7 @@ public class RegionStateStore {
       // Called when meta is not on master
       List<Put> list = shouldPutBarrier ?
           Arrays.asList(metaPut, MetaTableAccessor.makeBarrierPut(hri.getEncodedNameAsBytes(),
-              openSeqNum, hri.getTable().getName())) : Arrays.asList(metaPut);
+              openSeqNum, hri.getTable().getName())) : Collections.singletonList(metaPut);
       multiHConnection.processBatchCallback(list, TableName.META_TABLE_NAME, null, null);
 
     } catch (IOException ioe) {
-- 
2.9.3 (Apple Git-75)

