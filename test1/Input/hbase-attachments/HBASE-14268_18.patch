import java.lang.ref.Reference;
import java.lang.ref.SoftReference;
import java.lang.ref.WeakReference;

// Run with VM options: -verbose:gc -Xmx2m -XX:+PrintGCDetails -XX:SoftRefLRUPolicyMSPerMB=<what you want>
public class ReferenceTestApp {
  static final int KB = 1024 * 4; // Adjust this value for how many Scavenge GCs are invoked.
//  static final int KB = 1024 * 2;
  static int dummy;

  public static void main(String[] args) throws Exception {
    System.gc();

    System.out.println("----start----");

    Reference<Object> ref = new SoftReference<Object>(new Object());
//    Reference<Object> ref = new WeakReference<Object>(new Object());
    for(int i=0; i<KB; i++) {
      Object o = new byte[1024]; // 1kB
      dummy += o.hashCode(); // Prevent VM from omitting the object creation.
    }
    System.out.println(ref.get());

    System.out.println("---- end ----");
  }
}
