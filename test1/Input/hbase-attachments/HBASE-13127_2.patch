diff --git a/hbase-common/src/test/java/org/apache/hadoop/hbase/CategoryBasedTimeout.java b/hbase-common/src/test/java/org/apache/hadoop/hbase/CategoryBasedTimeout.java
new file mode 100644
index 0000000..aa0dd39
--- /dev/null
+++ b/hbase-common/src/test/java/org/apache/hadoop/hbase/CategoryBasedTimeout.java
@@ -0,0 +1,66 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.hbase;
+
+import java.lang.annotation.Annotation;
+
+import org.apache.hadoop.hbase.testclassification.LargeTests;
+import org.apache.hadoop.hbase.testclassification.MediumTests;
+import org.apache.hadoop.hbase.testclassification.SmallTests;
+import org.junit.experimental.categories.Category;
+import org.junit.internal.runners.statements.FailOnTimeout;
+import org.junit.rules.TestRule;
+import org.junit.runner.Description;
+import org.junit.runners.model.Statement;
+
+/**
+ * Set a test method timeout based off the test categories small, medium, large.
+ * Based on junit Timeout TestRule; see https://github.com/junit-team/junit/wiki/Rules
+ */
+public class CategoryBasedTimeout implements TestRule {
+  private final int fMillis;
+
+  public CategoryBasedTimeout(Class <?> clazz) {
+    int timeout = Integer.MAX_VALUE;
+    Annotation annotation = clazz.getAnnotation(Category.class);
+    if (annotation != null) {
+      Category category = (Category)annotation;
+      for (Class<?> c: category.value()) {
+        if (c == SmallTests.class) {
+          // See SmallTests. Supposed to run 15 seconds.  If 30 seconds, its been going on too long
+          timeout = 30000;
+          break;
+        } else if (c == MediumTests.class) {
+          // See MediumTests. Supposed to run 50 seconds.
+          timeout = 180000;
+          break;
+        } else if (c == LargeTests.class) {
+          // Let large tests have a ten minute timeout.
+          timeout = 600000;
+          break;
+        }
+      }
+    }
+    this.fMillis = timeout;
+  }
+
+  @Override
+  public Statement apply(Statement base, Description description) {
+    return new FailOnTimeout(base, fMillis);
+  }
+}
diff --git a/hbase-common/src/test/java/org/apache/hadoop/hbase/TestTimeout.java b/hbase-common/src/test/java/org/apache/hadoop/hbase/TestTimeout.java
new file mode 100644
index 0000000..c050321
--- /dev/null
+++ b/hbase-common/src/test/java/org/apache/hadoop/hbase/TestTimeout.java
@@ -0,0 +1,22 @@
+package org.apache.hadoop.hbase;
+
+import org.apache.hadoop.hbase.testclassification.SmallTests;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+@Category({SmallTests.class})
+public class TestTimeout {
+  @Rule public CategoryBasedTimeout defaultGlobalTestTimeout =
+    new CategoryBasedTimeout(this.getClass());
+
+    @Test
+    public void run1() throws InterruptedException {
+        Thread.sleep(100);
+    }
+
+    @Test
+    public void infiniteLoop() {
+        while (true) {}
+   }
+}
