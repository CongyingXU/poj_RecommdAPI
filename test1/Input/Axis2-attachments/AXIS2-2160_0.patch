Index: modules/jaxws/src/org/apache/axis2/jaxws/message/databinding/JAXBUtils.java
===================================================================
--- modules/jaxws/src/org/apache/axis2/jaxws/message/databinding/JAXBUtils.java	(revision 505637)
+++ modules/jaxws/src/org/apache/axis2/jaxws/message/databinding/JAXBUtils.java	(working copy)
@@ -207,6 +207,7 @@
         // Invalid packages are removed from the list
         it = contextPackages.iterator();
         boolean contextConstruction = true;
+        boolean isJAXBFound = false;
         while(it.hasNext()) {
             String p = it.next();
             // See if this package has an ObjectFactory or package-info
@@ -212,6 +213,7 @@
             // See if this package has an ObjectFactory or package-info
             if (checkPackage(p, cl)) {
                 // Flow to here indicates package can be used for CONTEXT construction
+            	isJAXBFound = true;
                 if (log.isDebugEnabled()) {
                     log.debug("Package " + p + " contains an ObjectFactory or package-info class.");
                 }
@@ -238,6 +240,10 @@
             }
         }
         
+        if(!isJAXBFound){
+        	log.info("Both ObjectFactory & package-info not found in package hierachy");
+        }
+        
         // The code above may have removed some packages from the list. 
         // Retry our lookup with the updated list
         Map<String, JAXBContext> innerMap = jaxbMap.get(cl);
@@ -426,8 +432,7 @@
 	        }
 	        //Catch Throwable as ClassLoader can throw an NoClassDefFoundError that
 	        //does not extend Exception. So we will absorb any Throwable exception here.
-	    } catch (Throwable e) {
-	       log.info("ObjectFactory Class Not Found");
+	    } catch (Throwable e) {	      
            if (log.isDebugEnabled()) {
                log.debug("ObjectFactory Class Not Found " + e);
                log.debug("...caused by " + e.getCause() + " "+ JavaUtils.stackToString(e));
@@ -441,8 +446,7 @@
             }
             //Catch Throwable as ClassLoader can throw an NoClassDefFoundError that
 	        //does not extend Exception. So we will absorb any Throwable exception here.
-        } catch (Throwable e) {
-            log.info("package-info Class Not Found");
+        } catch (Throwable e) {            
             if (log.isDebugEnabled()) {
                 log.debug("package-info Class Not Found " + e);
                 log.debug("...caused by " + e.getCause() + " "+ JavaUtils.stackToString(e));
