Index: modules/kernel/src/org/apache/axis2/description/AxisService.java
===================================================================
--- modules/kernel/src/org/apache/axis2/description/AxisService.java	(revision 517869)
+++ modules/kernel/src/org/apache/axis2/description/AxisService.java	(working copy)
@@ -954,7 +954,7 @@
 
         Data[] result = getData(request, context);
         OMElement wsdlElement;
-        if (result != null && result[0] != null) {
+        if (result != null && result.length > 0) {
             wsdlElement = (OMElement) (result[0].getData());
             try {
                 wsdlElement.serialize(out);
Index: modules/kernel/src/org/apache/axis2/dataretrieval/DataRetrievalUtil.java
===================================================================
--- modules/kernel/src/org/apache/axis2/dataretrieval/DataRetrievalUtil.java	(revision 517869)
+++ modules/kernel/src/org/apache/axis2/dataretrieval/DataRetrievalUtil.java	(working copy)
@@ -18,6 +18,7 @@
 
 import org.apache.axiom.om.OMAbstractFactory;
 import org.apache.axiom.om.OMElement;
+import org.apache.axiom.om.OMException;
 import org.apache.axiom.om.OMFactory;
 import org.apache.axiom.om.impl.builder.StAXOMBuilder;
 import org.apache.axiom.om.util.StAXUtils;
@@ -44,8 +45,8 @@
      * Loading xml file content and convert to OMElement.
      *
      * @param file - file path relative to the Service Repository
-     * @return OMElement format of the xml file content
-     * @throws DataRetrievalException
+     * @return OMElement format of the xml file content 
+     * @throws DataRetrievalException 
      */
 
     public OMElement buildOM(ClassLoader classLoader, String file)
@@ -56,10 +57,11 @@
             servicexmlStream = getInputStream(classLoader, file);
 
             element = convertToOMElement(servicexmlStream);
-        } catch (XMLStreamException e) {
-            throw new DataRetrievalException(e);
+         } catch (Exception e) {
+            throw new DataRetrievalException("Failed to load from file, " + file, e);
         }
 
+
         return element;
     }
 
@@ -72,7 +74,7 @@
      */
 
     public static OMElement convertToOMElement(InputStream servicexmlStream)
-            throws XMLStreamException {
+            throws XMLStreamException, OMException{
         OMElement element = null;
 
         XMLStreamReader xmlReader = StAXUtils
Index: modules/kernel/src/org/apache/axis2/dataretrieval/DataLocatorFactory.java
===================================================================
--- modules/kernel/src/org/apache/axis2/dataretrieval/DataLocatorFactory.java	(revision 517869)
+++ modules/kernel/src/org/apache/axis2/dataretrieval/DataLocatorFactory.java	(working copy)
@@ -29,11 +29,11 @@
     /*
     * Return instance of default Data Locator for the dialect.
     */
-    protected static AxisDataLocator createDataLocator(String dialect) {
+    public static AxisDataLocator createDataLocator(String dialect) {
         return (createDataLocator(dialect, null));
     }
 
-    protected static AxisDataLocator createDataLocator(String dialect,
+    public static AxisDataLocator createDataLocator(String dialect,
                                                        ServiceData[] serviceDataArray) {
         AxisDataLocator dataLocator = null;
         if (dialect.equals(DRConstants.SPEC.DIALECT_TYPE_WSDL)) {
Index: modules/kernel/src/org/apache/axis2/dataretrieval/ServiceData.java
===================================================================
--- modules/kernel/src/org/apache/axis2/dataretrieval/ServiceData.java	(revision 517869)
+++ modules/kernel/src/org/apache/axis2/dataretrieval/ServiceData.java	(working copy)
@@ -42,14 +42,14 @@
      * @param in_data an Data element in the ServiceData.
      */
 
-    protected ServiceData(OMElement in_data) {
+    public ServiceData(OMElement in_data) {
         data = in_data;
         identifier = getAttributeValue(DRConstants.SERVICE_DATA.IDENTIFIER);
         dialect = getAttributeValue(DRConstants.SERVICE_DATA.DIALECT);
         fileName = getAttributeValue(DRConstants.SERVICE_DATA.FILE);
     }
 
-    protected String getAttributeValue(String qName) {
+    public String getAttributeValue(String qName) {
 
         String value = null;
         OMAttribute attribute = data.getAttribute(new QName(qName));
@@ -62,23 +62,23 @@
     }
 
     // return identifier for this Data element
-    protected String getIdentifier() {
+    public String getIdentifier() {
         return identifier;
     }
 
     // return dialect for this Data element
-    protected String getDialect() {
+    public String getDialect() {
         return dialect;
     }
 
     // return the Data ELement
-    protected OMElement getOMData() {
+    public OMElement getOMData() {
         return data;
     }
 
 
     // Get URL from data Element
-    protected String getURL() {
+    public String getURL() {
 
         String urlValue = null;
         OMElement url = data.getFirstChildWithName(new QName(
@@ -91,7 +91,7 @@
     }
 
     // Get ENDPOINT_REFERENCE from Data Element
-    protected OMElement getEndpointReference() {
+    public OMElement getEndpointReference() {
         OMElement epr = data.getFirstChildWithName(new QName(
                 DRConstants.SERVICE_DATA.ENDPOINT_REFERENCE));
         return epr;
@@ -99,7 +99,7 @@
 
     // Load the file content of the file specified in the file attribute
     // in the data element.
-    protected OMElement getFileContent(ClassLoader classloader)
+    public OMElement getFileContent(ClassLoader classloader)
             throws DataRetrievalException {
 
         OMElement metaElement = null;
Index: modules/mex/src/org/apache/axis2/mex/MexDisabledException.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/MexDisabledException.java	(revision 0)
+++ modules/mex/src/org/apache/axis2/mex/MexDisabledException.java	(revision 0)
@@ -0,0 +1,10 @@
+package org.apache.axis2.mex;
+
+public class MexDisabledException extends MexException {
+	private static final long serialVersionUID = 1L;
+
+	public MexDisabledException(String message) {
+		super(message);
+	}
+
+  }
Index: modules/mex/src/org/apache/axis2/mex/MexMessageReceiver.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/MexMessageReceiver.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/MexMessageReceiver.java	(working copy)
@@ -29,6 +29,7 @@
 import org.apache.axis2.dataretrieval.DataRetrievalRequest;
 import org.apache.axis2.dataretrieval.OutputForm;
 import org.apache.axis2.description.AxisService;
+import org.apache.axis2.description.Parameter;
 import org.apache.axis2.receivers.AbstractInOutSyncMessageReceiver;
 import org.apache.axis2.mex.OM.Location;
 import org.apache.axis2.mex.OM.Metadata;
@@ -47,21 +48,25 @@
  */
 public class MexMessageReceiver extends AbstractInOutSyncMessageReceiver {
 	private static final Log log = LogFactory.getLog(MexMessageReceiver.class);
-
+	Parameter axisConfigMEXParm = null;
+    Parameter serviceConfigMEXParm = null;
 	String mexNamespaceValue = null;
 
 	/**
-	 * 
-     */
+	 * Process GetMetadata request
+        */
 	public void invokeBusinessLogic(MessageContext msgContext,
 			MessageContext newmsgContext) throws AxisFault {
-	
+		AxisService theService = msgContext.getAxisService();       
+		axisConfigMEXParm = msgContext.getConfigurationContext().getAxisConfiguration().getParameter(MexConstants.MEX_CONFIG.MEX_PARM);
+		serviceConfigMEXParm = theService.getParameter(MexConstants.MEX_CONFIG.MEX_PARM);
+		
+		check_MEX_disabled(serviceConfigMEXParm);
+		
 		try {
 			Metadata metadata = handleRequest(msgContext);
-			AxisService theService = msgContext.getAxisService();
+		        theService.setEndpointURL(msgContext.getTo().getAddress());
 
-			theService.setEndpointURL(msgContext.getTo().getAddress());
-
 			if (metadata != null) {
 				SOAPEnvelope envelope = newmsgContext.getEnvelope();
 				if (envelope == null) {
@@ -162,7 +167,7 @@
 
 				requestOptions.putDialect(dialect);
 
-				outputforms = MexUtil.allSupportedOutputForms();
+				outputforms = MexUtil.determineOutputForm(dialect, axisConfigMEXParm, serviceConfigMEXParm);
 				// Loop to call AxisService::getData API to retrieve data
 				// for the Dialect and Identifier(if specified) in the request
 				// for each
@@ -217,7 +222,7 @@
 				section = createMetadataSection(outputForm, data[k].getData(),
 						factory, mexNamespaceValue);
 
-				section.setDialet(dialect);
+				section.setDialect(dialect);
 				identifier_value = data[k].getIdentifier();
 
 				if (identifier_value != null) {
@@ -244,7 +249,8 @@
 		else if (outputForm == OutputForm.REFERENCE_FORM) {
 			MetadataReference ref = new MetadataReference(factory,
 					mexNamespaceValue);
-			ref.setEPRElement((OMElement) result);
+			
+			ref.setEPR((OMElement) result);
 			section.setMetadataReference(ref);
 		} else {
 
@@ -284,4 +290,10 @@
 		return metadata_request_list;
 	}
 
+	
+	private void check_MEX_disabled (Parameter mexConfig) throws MexDisabledException{
+		if (MexUtil.isMexDisabled(mexConfig)){
+			throw new MexDisabledException("'metadataexchange' parameter configured to disable MEX for the service.");
+		}
+	}
 }Index: modules/mex/src/org/apache/axis2/mex/MexConstants.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/MexConstants.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/MexConstants.java	(working copy)
@@ -23,44 +23,76 @@
 
 public interface MexConstants {
 	public interface SPEC_VERSIONS {
-		String v1_0 = "Spec_2004_09";
+		public static final String v1_0 = "Spec_2004_09";
 	}
     public interface Spec_2004_09 {
 		
-		String NS_URI = "http://schemas.xmlsoap.org/ws/2004/09/mex";
+    	public static final String NS_URI = "http://schemas.xmlsoap.org/ws/2004/09/mex";
 
 	    public interface Actions {
-			String GET_METADATA_REQUEST = "http://schemas.xmlsoap.org/ws/2004/09/mex/GetMetadata/Request";
-			String GET_METADATA_RESPONSE = "http://schemas.xmlsoap.org/ws/2004/09/mex/GetMetadata/Response";
+	    	public static final String GET_METADATA_REQUEST = "http://schemas.xmlsoap.org/ws/2004/09/mex/GetMetadata/Request";
+	    	public static final String GET_METADATA_RESPONSE = "http://schemas.xmlsoap.org/ws/2004/09/mex/GetMetadata/Response";
 			
 	    }
     }
     
   
     public interface SOAPVersion {
-     		int v1_1 = 1;
+    	public static final int v1_1 = 1;
 
-    		int v1_2 = 2;
+    	public static final int v1_2 = 2;
     
 	}
     
     
     public interface SPEC {
-		String NS_PREFIX = "mex";
-		String GET_METADATA = "GetMetadata";
-		String DIALECT = "Dialect";
-		String IDENTIFIER = "Identifier";
-		String METADATA = "Metadata";
-		String METADATA_SECTION = "MetadataSection";
-		String METADATA_REFERENCE = "MetadataReference";
-		String LOCATION = "Location";
-		String TYPE = "type";
+    	public static final String NS_PREFIX = "mex";
+    	public static final String GET_METADATA = "GetMetadata";
+    	public static final String DIALECT = "Dialect";
+    	public static final String IDENTIFIER = "Identifier";
+    	public static final String METADATA = "Metadata";
+    	public static final String METADATA_SECTION = "MetadataSection";
+    	public static final String METADATA_REFERENCE = "MetadataReference";
+    	public static final String LOCATION = "Location";
+    	public static final String TYPE = "type";
 		
-		String DIALECT_TYPE_WSDL = "http://schemas.xmlsoap.org/wsdl/";
-		String DIALECT_TYPE_POLICY = "http://schemas.xmlsoap.org/ws/2004/09/policy";
-		String DIALECT_TYPE_SCHEMA = "http://www.w3.org/2001/XMLSchema";
-		String DIALECT_TYPE_MEX = "http://schemas.xmlsoap.org/ws/2004/09/mex";
+    	public static final String DIALECT_TYPE_WSDL = "http://schemas.xmlsoap.org/wsdl/";
+    	public static final String DIALECT_TYPE_POLICY = "http://schemas.xmlsoap.org/ws/2004/09/policy";
+    	public static final String DIALECT_TYPE_SCHEMA = "http://www.w3.org/2001/XMLSchema";
+    	public static final String DIALECT_TYPE_MEX = "http://schemas.xmlsoap.org/ws/2004/09/mex";
 		
 	}
+    
+
+    /**
+     * MEX Configuration 
+     * 
+     * Sample mex configuration:
+     * <parameter name="metadataexchange" locked="false">
+     *     <outputform dialect="http://schemas.xmlsoap.org/wsdl/" forms="location" />
+     *     <outputform forms="inline,reference,location" />
+     * </parameter> 
+     */
+    public interface MEX_CONFIG{
+    	public static final String MEX_PARM = "metadataExchange";
+    	
+    	// Allow to disable MEX for a Service if MEX is engaged globally. 
+    	public static final String ENABLE_MEX = "enable"; 
+        
+    	// One or more outputform element can be specified in the mex configuration
+    	// outputform element contains an optional "dialect" attribute and an
+    	// required forms attribute. 
+    	public static final String OUTPUT_FORM_PARM = "outputform";
+    	public static final String DIALECT_PARM = "dialect";
+    	public static final String FORMS_PARM = "forms";
+    	
+    	// configurable parameter values
+    	public static final String DELIMITER = ",";
+    	// possible "forms" attribute values
+    	public static final String LOCATION = "location";
+    	public static final String INLINE = "inline";
+    	public static final String REFERENCE = "reference";
+    	
+    }
   
 }
Index: modules/mex/src/org/apache/axis2/mex/OM/MetadataReference.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/MetadataReference.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/OM/MetadataReference.java	(working copy)
@@ -19,10 +19,13 @@
 
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
+import org.apache.axiom.soap.SOAP12Constants;
 import org.apache.axis2.AxisFault;
-//import org.apache.axis2.addressing.EndpointReference;
-//import org.apache.axis2.addressing.EndpointReferenceHelper;
+import org.apache.axis2.addressing.EndpointReference;
+import org.apache.axis2.addressing.EndpointReferenceHelper;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 
 /**
  * Class implemented for MetadataReference element defined in 
@@ -34,9 +37,20 @@
 
 	private OMFactory factory;
 	private OMElement eprElement = null; 
+        private EndpointReference epr = null;
+ 	private String namespaceValue = null;
 
-	private String namespaceValue = null;
+	 /**
+	 * Constructor
+	 * @throws MexException 
+	 */
 
+	public MetadataReference() throws MexException  {
+		
+		this.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);
+		this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;
+	}
+	
 	/**
 	 * Constructor
 	 * @param defaultFactory
@@ -53,7 +67,40 @@
 		this.namespaceValue = namespaceValue;
 		}
 
+	 public OMElement getEPRElement() {
+			return eprElement;
+		}
+	  
+	public EndpointReference getEPR() {
+			return epr;
+	}
+
+
 	/**
+	 * Populates an MetadataReference object based on the endpoint reference type <code>OMElement</code> passed. 
+	 * @param inElement MetadataReference element
+	 * @return MetadataReference 
+	 * @throws MexOMException
+	 */
+	
+	public MetadataReference fromOM(OMElement element) throws MexOMException{
+		
+		if (element == null) {
+			throw new MexOMException("Null element passed.");
+		}
+		if (!element.getLocalName().equals(MexConstants.SPEC.METADATA_REFERENCE)) {
+			throw new MexOMException("Invalid element passed.");
+		}
+		eprElement = element;
+		try {
+			epr = EndpointReferenceHelper.fromOM(element);
+		} catch (AxisFault e) {
+			throw new MexOMException (e);
+		}
+		
+		return this;
+	}
+	/**
 	 * Convert MetadatReference object content to the OMElement representation.
 	 * @return OMElement representation of MetadatReference.
 	 * @throws MexOMException
@@ -65,31 +112,43 @@
 		}
 
 		OMElement metadataRef = null;
-		/*if (eprElement.getLocalName() == "EndpointReference") {
-			EndpointReference epr;
-			try {
-				epr = EndpointReferenceHelper.fromOM(eprElement);
-				metadataRef = EndpointReferenceHelper.toOM(factory, epr,
-						new QName(namespaceValue,
-								MexConstants.SPEC.METADATA_REFERENCE,
-								MexConstants.SPEC.NS_PREFIX), eprElement
-								.getNamespace().getNamespaceURI());
+		try {
+			metadataRef = EndpointReferenceHelper.toOM(factory, epr, new QName(
+					namespaceValue, MexConstants.SPEC.METADATA_REFERENCE,
+					MexConstants.SPEC.NS_PREFIX), eprElement.getNamespace()
+					.getNamespaceURI());
+	
+		} catch (AxisFault e) {
+			throw new MexOMException(e);
+		}
+		
 
-			} catch (AxisFault e) {
-				throw new MexOMException(e);
-			}
-		} */
-
 		return metadataRef;
 	}
 	
 	/**
-	 * Set EPR element
+	 * Set EPR 
 	 * 
-	 * @param element
+	 * @param element Endpoint Reference Type element
 	 */
-	public void setEPRElement(OMElement element) {
+	public void setEPR(OMElement element) throws MexOMException {
 		eprElement = element;
+		try {
+			epr = EndpointReferenceHelper.fromOM(eprElement);
+		} catch (AxisFault e) {
+			throw new MexOMException (e);
+		}
+		
 	}
 	
+	/**
+	 * Set EPR 
+	 * 
+	 * @param element Endpoint Reference Type elem
+	 */
+	public void setEPR(EndpointReference endRef) throws MexOMException {
+		epr = endRef;
+		
+	}
+	
 }
Index: modules/mex/src/org/apache/axis2/mex/OM/Metadata.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/Metadata.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/OM/Metadata.java	(working copy)
@@ -19,11 +19,18 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
-
+import javax.xml.namespace.QName;
+import org.apache.axiom.soap.SOAP12Constants;
+import org.apache.axis2.AxisFault;
 import org.apache.axiom.om.OMAttribute;
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
 import org.apache.axiom.om.OMNamespace;
+import org.apache.axis2.addressing.EndpointReference;
+import org.apache.axis2.addressing.EndpointReferenceHelper;
+import org.apache.axis2.dataretrieval.OutputForm;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 import org.apache.axis2.mex.MexConstants;
 
 /**
@@ -38,6 +45,17 @@
 	private List  metadataSections = new ArrayList(); 
 	private OMAttribute attribute = null;
 	
+        /**
+	 * Constructor
+	 * @throws MexException 
+	 */
+
+	public Metadata() throws MexException  {
+		
+		this.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);;
+		this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;
+	}
+
 	/**
 	 * 
 	 * @param defaultFactory
@@ -50,8 +68,120 @@
 		this.namespaceValue = namespaceValue;
 	}
 
+        /**
+         * 
+         * @return Array of MetadataSection of metadata units
+         */
+        public MetadataSection[] getMetadatSections() {
+		return (MetadataSection[])metadataSections.toArray(new MetadataSection[0]);
+	}
+
+         /**
+     * 
+     * @param dialect
+     * @param identifier
+     * @return Array of MetadataSection for the specified dialect metadata type and identifier  
+     */
+    public MetadataSection[] getMetadataSection(String dialect, String identifier){
+    	MetadataSection[] sections = getMetadataSection(dialect, identifier, null);
+    	return sections;
+    }
+    
+    /**
+     * 
+     * Answers the Metadata Sections that met the criteria specified in the dialect, identifier, and form.
+     * Note: Null value parameter will be treated as wild card.
+     * @param dialect
+     * @param identifier
+     * @param form specify the form of metadata: inline or by reference
+     *        See <code>OutputForm</code> for valid output forms.
+     * @return Array of MetadataSection for the specified dialect metadata type and identifier of
+     *         the form specified.
+     *
+     */
+    public MetadataSection[] getMetadataSection(String dialect, String identifier, OutputForm form ){
+        
+    	Iterator sections = metadataSections.iterator();
+    	List foundSections = new ArrayList();
+    	while (sections.hasNext()){
+    		MetadataSection aSection = (MetadataSection) sections.next();
+    		if ((dialect == null || dialect.equals(aSection.getDialect())) &&
+    			(identifier == null || dialect.equals(aSection.getIdentifier())) &&
+    			matchOutputForm(aSection, form)){
+    			foundSections.add(aSection);
+    		}	
+    		
+    	}
+    	return (MetadataSection[])foundSections.toArray(new MetadataSection[0]);
+    }
+    
+    /**
+	 * Populates an Metadata object based on the <code>OMElement</code> passed. 
+	 * @param inElement mex:Metadata element or element contains mex:Metadata element
+	 * @return Metadata 
+	 * @throws MexOMException
+	 */
+	public Metadata fromOM(OMElement inElement) throws MexOMException {
+			
+		OMElement mexElement = null;
+        if (inElement == null ){
+        	throw new MexOMException("Null element passed.");
+        }
+        
+        if (inElement.getLocalName().equals(MexConstants.SPEC.METADATA)){
+        	mexElement = inElement;
+        }
+        if (inElement.getLocalName().equals("EndpointReference")){
+            try {
+	    	  EndpointReference epr = EndpointReferenceHelper.fromOM(inElement);
+				
+		  ArrayList metadata = epr.getMetaData();
+		  if (metadata != null)
+		      mexElement = (OMElement)metadata.get(0);
+		  else {
+		      ArrayList refParm = epr.getExtensibleElements();
+		      for (int i=0; i<refParm.size(); i++){
+		          OMElement elem = (OMElement)refParm.get(i);
+			  if (elem.getLocalName().equals(MexConstants.SPEC.METADATA)){
+			      mexElement = elem;
+			      break;
+			   }
+			}
+			}
+		} catch (AxisFault e) {
+		   throw new MexOMException(e);
+		}
+        	
+	        if (mexElement == null) {
+		    throw new MexOMException("Missing expected Metadata element in element passed.");
+		}
+	   }
+          else mexElement = inElement;
+        
+	  OMFactory aFactory = mexElement.getOMFactory();
+	  if (aFactory == null) {
+	     aFactory = factory;
+	   }
+	   Iterator mexSections = mexElement.getChildrenWithName(new QName(MexConstants.SPEC.METADATA_SECTION));
+        
+           if (mexSections == null){
+         	throw new MexOMException("Metadata element does not contain MetadataSection element.");
+         }
+        while (mexSections.hasNext()){
+        	OMElement aSection = (OMElement) mexSections.next();
+            MetadataSection metadataSection = new MetadataSection(aFactory, namespaceValue);
+            addMetadatSection(metadataSection.fromOM(aSection)); 
+        }
+        
+		return this;
+	}
 	
-	public OMElement toOM() throws MexOMException
+	
+       /**
+        * 
+        * @return Array of MetadataSection of metadata units
+        */
+        public OMElement toOM() throws MexOMException
 	{
 		OMNamespace mexNamespace = factory.createOMNamespace(namespaceValue,MexConstants.SPEC.NS_PREFIX);
 		OMElement metadata = factory.createOMElement(MexConstants.SPEC.METADATA, mexNamespace);
@@ -82,12 +212,29 @@
 		metadataSections.add(section);
 	}
 	
-	public MetadataSection[] getMetadatSections() {
-		return (MetadataSection[])metadataSections.toArray(new MetadataSection[0]);
-	}
-	
+       	
 	public void setAttribute(OMAttribute in_attribute) {
 		attribute = in_attribute;
 	}
 
+  
+    // check if section contains data matching the output form requested
+    private boolean matchOutputForm(MetadataSection section,
+			OutputForm outputForm) {
+		boolean match = (outputForm == null);  // no matching needed in null outputForm is passed
+
+		if (!match) {
+			if (outputForm == OutputForm.LOCATION_FORM) {
+				match = (section.getLocation() != null);
+			} else if (outputForm == OutputForm.REFERENCE_FORM) {
+				match = (section.getMetadataReference() != null);
+			} else if (outputForm == OutputForm.INLINE_FORM) {
+				match = (section.getInlineData() != null);
+			}
+		}
+
+		return match;
+	}
+	
+
 }
Index: modules/mex/src/org/apache/axis2/mex/OM/Dialet.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/Dialet.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/OM/Dialet.java	(working copy)
@@ -1,59 +0,0 @@
-/*
-* Copyright 2007 The Apache Software Foundation.
-*
-* Licensed under the Apache License, Version 2.0 (the "License");
-* you may not use this file except in compliance with the License.
-* You may obtain a copy of the License at
-*
-*      http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
-
-package org.apache.axis2.mex.OM;
-
-import org.apache.axiom.om.OMFactory;
-import org.apache.axis2.mex.MexConstants;
-
-/**
- * Class implemented for Dialect element defined in 
- * the WS-MEX spec.
- *
- */
-
-public class Dialet extends AnyURIType {
-
-	/**
-	 * Constructor
-	 * @param defaultFactory
-	 * @param namespaceValue namespace info
-	 * @param dialect Dialect in URI representation
-	 * @throws MexOMException
-	 */
-	public Dialet(OMFactory defaultFactory, String namespaceValue, String dialect) throws MexOMException {
-		super(defaultFactory, namespaceValue, dialect);
-	}
-	
-	/**
-	 * Constructor with default namespace
-	 * @param defaultFactory
-	 * @param dialect  Dialect in URI representation
-	 * @throws MexOMException
-	 */
-	public Dialet(OMFactory defaultFactory, String dialect) throws MexOMException {
-		super(defaultFactory, MexConstants.Spec_2004_09.NS_URI, dialect );
-	}
-
-	/*
-	 * Return name of this element
-	 * (non-Javadoc)
-	 * @see org.apache.axis2.Mex.OM.AnyURIType#getElementName()
-	 */
-	protected String getElementName(){
-		return MexConstants.SPEC.DIALECT;
-	}
-}
Index: modules/mex/src/org/apache/axis2/mex/OM/MetadataSection.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/MetadataSection.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/OM/MetadataSection.java	(working copy)
@@ -15,21 +15,27 @@
 */
 
 package org.apache.axis2.mex.OM;
+import javax.xml.namespace.QName;
 
-
 import org.apache.axiom.om.OMAttribute;
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
 import org.apache.axiom.om.OMNamespace;
 import org.apache.axiom.om.OMNode;
+import org.apache.axiom.soap.SOAP12Constants;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 
 
 /**
  * Class implemented for MetadataSection element defined in 
- * the WS-MEX spec.
+ * the WS-MEX spec. A unit of metdata i.e. a MetadataSection may be included in-line data, 
+ * or may be by reference as an endpoint reference (MetadataReference) or a URL (Location).
+ * An instance of MetadataSection can have one form of data: inline, location, or reference.
  *
  */
+
 public  class MetadataSection extends MexOM implements IMexOM {
 	private String namespaceValue = null;
 	private OMFactory factory;
@@ -41,10 +47,22 @@
 	private MetadataReference ref = null;
 	
     // Attributes
-    private String dialet;
+    private String dialect;
     private String identifier;
     
+    
     /**
+	 * Constructor
+	 * @throws MexException 
+	 */
+
+	public MetadataSection() throws MexException  {
+		
+		this.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);;
+		this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;
+	}
+	
+    /**
      * Constructor
      * @param defaultFactory
      * @param namespaceValue
@@ -55,9 +73,62 @@
 		this.namespaceValue = namespaceValue;
 	}
 	
+	
+	/**
+	 * Populates an MetadataSection object based on the <code>OMElement</code> passed. 
+	 * @param inElement mex:MetadataSection element
+	 * @return MetadataSection 
+	 * @throws MexOMException
+	 */
+	
+	public MetadataSection fromOM(OMElement element) throws MexOMException {
+		if (element == null) {
+			throw new MexOMException("Null element passed.");
+		}
+		if (!element.getLocalName().equals(MexConstants.SPEC.METADATA_SECTION)) {
+			throw new MexOMException("Invalid element passed.");
+		}
+		OMAttribute dialectAttr  = element.getAttribute(new QName(MexConstants.SPEC.DIALECT));
+		if (dialectAttr == null){
+			throw new MexOMException("Missing Dialect Attribute in MetadataSection.");
+		}
+		setDialect(dialectAttr.getAttributeValue());
+		OMAttribute identifierAttr  = element.getAttribute(new QName(MexConstants.SPEC.IDENTIFIER));
+		if (identifierAttr != null){
+			setIdentifier(identifierAttr.getAttributeValue());		
+		}
+		// validate one of the following element must exist: Location, MetadataReference, inline data
+		OMElement locationElem = element.getFirstChildWithName(new QName(MexConstants.SPEC.LOCATION));
+		Location location = null;
+		MetadataReference ref = null;
 		
+		if (locationElem != null){
+			location = new Location(factory, namespaceValue);
+		    setLocation(location.fromOM(locationElem));	
+		}
+		else { // check for MetadataReference
+			OMElement refElem = element.getFirstChildWithName(new QName(MexConstants.SPEC.METADATA_REFERENCE));
+			if (refElem != null ){
+				ref = new MetadataReference(factory, namespaceValue);
+				setMetadataReference(ref.fromOM(refElem));
+			}
+		}
+		if (location == null && ref == null) { // check for inline content
+			OMNode inline = element.getFirstOMChild();
+		    if (inline != null)
+		    	setinlineData(inline);
+		    else {
+		    	throw new MexOMException("Invalid empty MetadataSection.");
+		    }
+		    
+		}
+
+		return this;
+	}
+	
 	/**
 	 * Convert MetadatSection content to the OMElement representation.
+	 * 
 	 * @return OMElement representation of MetadataSection.
 	 * @throws MexOMException
 	 */
@@ -68,11 +139,11 @@
 				MexConstants.SPEC.METADATA_SECTION, mexNamespace);
 
 		// dialet is required
-		if (dialet == null) {
+		if (dialect == null) {
 			throw new MexOMException("Dialet was not set. Dialet must be set.");
 		}
 		OMAttribute dialetAttrib = factory.createOMAttribute(
-				MexConstants.SPEC.DIALECT, null, dialet);
+				MexConstants.SPEC.DIALECT, null, dialect);
 
 		metadataSection.addAttribute(dialetAttrib);
 
@@ -105,8 +176,8 @@
 
 	}
 	
-	public String getDialet() {
-		return dialet;
+	public String getDialect() {
+		return dialect;
 	}
 	
 	public String getIdentifier() {
@@ -116,14 +187,28 @@
 	public String getanyAttribute() {
 		return anyAttribute;
 	}
+	
+	/**
+	 * Return metadata unit in URL form i.e. mex:Location
+	 * 
+	 * @return
+	 */
 	public Location getLocation() {
 		return location;
 	}
 	
+	/**
+	 * Return metadata unit in inline form such as WSDL definitions, XML schema document, etc.
+	 * @return
+	 */
 	public OMNode getInlineData() {
 		return inlineData;
 	}
 	
+	/**
+	 * Return metadata unit in endpoint reference form i.e. mex:MetadataReference.
+	 * @return
+	 */
 	public MetadataReference getMetadataReference() {
 		return ref;
 	}
@@ -132,8 +217,8 @@
 		identifier =in_identifier;
 	}
 	
-	public void setDialet(String in_dialet) {
-		dialet = in_dialet;
+	public void setDialect(String in_dialect) {
+		dialect = in_dialect;
 	}
 	
 	
Index: modules/mex/src/org/apache/axis2/mex/OM/Dialect.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/Dialect.java	(revision 0)
+++ modules/mex/src/org/apache/axis2/mex/OM/Dialect.java	(revision 0)
@@ -0,0 +1,59 @@
+/*
+* Copyright 2007 The Apache Software Foundation.
+*
+* Licensed under the Apache License, Version 2.0 (the "License");
+* you may not use this file except in compliance with the License.
+* You may obtain a copy of the License at
+*
+*      http://www.apache.org/licenses/LICENSE-2.0
+*
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*/
+
+package org.apache.axis2.mex.OM;
+
+import org.apache.axiom.om.OMFactory;
+import org.apache.axis2.mex.MexConstants;
+
+/**
+ * Class implemented for Dialect element defined in 
+ * the WS-MEX spec.
+ *
+ */
+
+public class Dialect extends AnyURIType {
+
+	/**
+	 * Constructor
+	 * @param defaultFactory
+	 * @param namespaceValue namespace info
+	 * @param dialect Dialect in URI representation
+	 * @throws MexOMException
+	 */
+	public Dialect(OMFactory defaultFactory, String namespaceValue, String dialect) throws MexOMException {
+		super(defaultFactory, namespaceValue, dialect);
+	}
+	
+	/**
+	 * Constructor with default namespace
+	 * @param defaultFactory
+	 * @param dialect  Dialect in URI representation
+	 * @throws MexOMException
+	 */
+	public Dialect(OMFactory defaultFactory, String dialect) throws MexOMException {
+		super(defaultFactory, MexConstants.Spec_2004_09.NS_URI, dialect );
+	}
+
+	/*
+	 * Return name of this element
+	 * (non-Javadoc)
+	 * @see org.apache.axis2.Mex.OM.AnyURIType#getElementName()
+	 */
+	protected String getElementName(){
+		return MexConstants.SPEC.DIALECT;
+	}
+}
Index: modules/mex/src/org/apache/axis2/mex/OM/Location.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/Location.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/OM/Location.java	(working copy)
@@ -16,8 +16,12 @@
 
 package org.apache.axis2.mex.OM;
 
+import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
+import org.apache.axiom.soap.SOAP12Constants;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 
 /**
  * Class implemented for Location element defined in 
@@ -27,13 +31,36 @@
 
 public class Location extends AnyURIType {
 
+	
+	/**
+	 * @param uri  valid URL to retrieve the metadata using HTTP Get
+	 * @throws MexException 
+         *
+	 */
+	public Location(String uri) throws MexException {
+		super(MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI), MexConstants.Spec_2004_09.NS_URI, uri);
+	}
+	
 	public Location(OMFactory defaultFactory, String namespaceValue, String uri) throws MexOMException {
 		super(defaultFactory, namespaceValue, uri);
 	}
+
 	public Location(OMFactory defaultFactory, String uri) throws MexOMException {
 		super(defaultFactory, MexConstants.Spec_2004_09.NS_URI, uri );
 	}
 	
+	public Location fromOM(OMElement element) throws MexOMException{
+		if (element == null) {
+			throw new MexOMException("Null element passed.");
+		}
+		if (!element.getLocalName().equals(MexConstants.SPEC.LOCATION)) {
+			throw new MexOMException("Invalid element passed.");
+		}
+		super.setURI(element.getText());
+			
+		return this;
+	}
+	
 	/*
 	 * Return name of this element
 	 * (non-Javadoc)
Index: modules/mex/src/org/apache/axis2/mex/OM/AnyURIType.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/AnyURIType.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/OM/AnyURIType.java	(working copy)
@@ -60,6 +60,13 @@
 		return element;
 	}
 	
+    protected void setURI(String uri){
+	     this.uri = uri;	
+	}
+    
+    public String getURI(){
+	   return uri;	
+	}
 	/*
 	 * Child class must implement to answer the element name.
 	 */
Index: modules/mex/src/org/apache/axis2/mex/util/MexUtil.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/util/MexUtil.java	(revision 517869)
+++ modules/mex/src/org/apache/axis2/mex/util/MexUtil.java	(working copy)
@@ -16,6 +16,11 @@
 
 package org.apache.axis2.mex.util;
 
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.StringTokenizer;
+import javax.xml.namespace.QName;
 import org.apache.axiom.om.OMAbstractFactory;
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
@@ -27,10 +32,15 @@
 import org.apache.axis2.AxisFault;
 import org.apache.axis2.mex.MexException;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.OM.Metadata;
+import org.apache.axis2.addressing.EndpointReference;
 import org.apache.axis2.dataretrieval.OutputForm;
+import org.apache.axis2.description.Parameter;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 
 public class MexUtil {
-	
+	private static final Log log = LogFactory.getLog(MexUtil.class);
 	/**
 	 * Answer SOAPVersion for specified envelope
 	 * @param envelope SOAP Envelope
@@ -86,9 +96,34 @@
 		return outputforms;
 	}
 	
+	 public static Metadata fromEPR(EndpointReference epr) throws MexException {
+		ArrayList eprMetdata = epr.getMetaData();
+		OMElement mexElement = null;
+		Metadata metadata = null;
+		if (eprMetdata != null) {
+			mexElement = (OMElement) eprMetdata.get(0);
+		} else {
+			ArrayList refParm = epr.getExtensibleElements();
+			if (refParm != null) {
+				for (int i = 0; i < refParm.size(); i++) {
+					OMElement elem = (OMElement) refParm.get(i);
+					if (elem.getLocalName().equals(MexConstants.SPEC.METADATA)) {
+						mexElement = elem;
+						break;
+					}
+				}
+			}
+		}
+		if (mexElement != null)
+			metadata = fromOM(mexElement, MexConstants.Spec_2004_09.NS_URI);
+		return metadata;
+	}	
+	 
 	/**
 	 * Answers WS-Addressing namespace
-	 * @param toAddress To Address element
+	 * 
+	 * @param toAddress
+	 *            To Address element
 	 * @return OMNamespaceImpl WS-Addressing namespace
 	 * @throws AxisFault
 	 */
@@ -108,4 +143,149 @@
 
 	}
 
+       /**
+	 * API to map mex:Metadata element to a Metadata object representation. Data validation will 
+	 * be performed on omElement content. See {@link Metadata} for APIs to access metadata section.
+	 * 
+	 * @param omElement an element such as endpoint reference type that contains mex:Metadata or
+	 *                  an mex:Metadata element 
+	 * @return Metadata object representation of mex:Metadata element passed.
+	 * @throws MexException if invalid mex:Metadata element content is detected 
+	 */ 
+
+	 
+    public static Metadata fromOM(OMElement omElement) throws MexException{
+	      Metadata metadata = fromOM(omElement, MexConstants.Spec_2004_09.NS_URI);
+	      return metadata;
+	}	
+	
+        /**
+	 * API to map mex:Metadata element to a Metadata object representation. Data validation will 
+	 * be performed on omElement content. See {@link Metadata} for APIs to access metadata section.
+	 * 
+	 * @param omElement an element such as endpoint reference type that contains mex:Metadata or
+	 *                  an mex:Metadata element 
+	 * @param mexNamespaceValue  the namespace of the WS-MEX spec to comply with.
+	 * @return Metadata object representation of mex:Metadata element passed.
+	 * @throws MexException if invalid mex:Metadata element content is detected 
+	 */ 	
+	public static Metadata fromOM(OMElement omElement, String mexNamespaceValue) throws MexException{
+		
+		SOAPFactory factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);
+		Metadata metadata = new Metadata(factory, mexNamespaceValue);
+		metadata = metadata.fromOM(omElement);
+		return metadata;
+	}
+	
+
+       
+    /**
+	 * Check if metadata exchange has been disabled for a service. 
+	 * @param serviceConfigMEXParm metadataexchange configured in services.xml
+	 * @return
+	 */
+	public static boolean isMexDisabled(Parameter serviceConfigMEXParm) {
+		boolean disabled = false;
+		if (serviceConfigMEXParm != null) {
+			OMElement mexConfig = serviceConfigMEXParm.getParameterElement();
+			String disable = mexConfig.getAttributeValue(new QName(
+					MexConstants.MEX_CONFIG.ENABLE_MEX));
+			if (disable != null && disable.equals("false"))
+				disabled = true;
+		}
+		return disabled;
+	}
+	
+	/**
+	 * Determine output forms for specified dialect based on "metadataexchange" configured in 
+	 * axis2.xml and services.xml.
+	 * The order of precedence in determining  output form configured:  
+	 *   a. dialect specific at service level.
+	 *   b. service level  i.e. without dialect attribute specified
+	 *   c. dialect specific at global level i,e, configured in axis2.xml
+	 *   d. service level  i.e. without dialect attribute specified
+	 *   e. default output forms to all: inline, location, reference
+	 *   
+	 * @param dialect
+	 * @param axisConfigMEXParm "metadataexchange" parameter configured in axis2.xml
+	 * @param serviceConfigMEXParm  "metadataexchange" parameter configured in services.xml
+	 * @return
+	 */
+	public static OutputForm[] determineOutputForm(String dialect, Parameter axisConfigMEXParm, Parameter serviceConfigMEXParm){
+		
+		if (axisConfigMEXParm == null && serviceConfigMEXParm == null){
+			return allSupportedOutputForms();
+		}
+	    OutputForm[] outputform = new OutputForm[0];
+	    outputform = determineOutputForm(dialect, serviceConfigMEXParm);
+	    
+	    if (outputform.length == 0) { // output form not configured in service level config
+	    	outputform = determineOutputForm(dialect, axisConfigMEXParm);
+	    }
+		
+	    if (outputform.length == 0){
+	    	log.debug("No outputform configured, use default output forms");
+	    	outputform = allSupportedOutputForms();
+	    }
+		return outputform;
+	}
+	
+	
+	private static OutputForm[] determineOutputForm(String dialect, Parameter mexParm) {
+		OutputForm[] forms = new OutputForm[0];
+		if (mexParm == null)
+			return forms;
+		
+		OMElement mexConfig = mexParm.getParameterElement();
+		Iterator ite = mexConfig.getChildrenWithName(new QName(
+				MexConstants.MEX_CONFIG.OUTPUT_FORM_PARM));
+		String dialectForm_configured = null;
+		String serviceForm_configured = null;
+		while (ite.hasNext()) {
+			OMElement elem = (OMElement) ite.next();
+			String form_value = elem.getAttributeValue(new QName(
+					MexConstants.MEX_CONFIG.FORMS_PARM));
+			String dialect_value = elem.getAttributeValue(new QName(
+					MexConstants.MEX_CONFIG.DIALECT_PARM));
+			if (dialect_value == null){
+				serviceForm_configured = form_value;
+			}	
+			else if (dialect_value != null
+					&& dialect_value.equals(dialect)) {
+				dialectForm_configured = form_value;
+			}	
+	     }
+			
+		if (dialectForm_configured != null){
+			forms = parseForms(dialectForm_configured);
+		}
+		else if (serviceForm_configured != null){
+			forms = parseForms(serviceForm_configured);
+		}
+		
+		return forms;
+	}	
+	
+	
+	private static OutputForm[] parseForms(String form_values) {
+		List forms = new ArrayList();
+		StringTokenizer st = new StringTokenizer(form_values,
+				MexConstants.MEX_CONFIG.DELIMITER);
+		while (st.hasMoreTokens()) {
+			String token = st.nextToken();
+			if (token.equals(MexConstants.MEX_CONFIG.INLINE))
+				forms.add(OutputForm.INLINE_FORM);
+			else if (token.equals(MexConstants.MEX_CONFIG.LOCATION))
+				forms.add(OutputForm.LOCATION_FORM);
+			else if (token.equals(MexConstants.MEX_CONFIG.REFERENCE))
+				forms.add(OutputForm.REFERENCE_FORM);
+			else {
+              log.debug("Invalid form configured, " + form_values);
+			}
+
+		}
+
+		return (OutputForm[]) forms.toArray(new OutputForm[0]);
+	}
+
 }
Index: modules/samples/mex/src/userguide/mex/services/example1/META-INF/services.xml
===================================================================
--- modules/samples/mex/src/userguide/mex/services/example1/META-INF/services.xml	(revision 517869)
+++ modules/samples/mex/src/userguide/mex/services/example1/META-INF/services.xml	(working copy)
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
  -->
-<service name="DefaultAxisDataLocatorDemoService">
+<service name="DefaultAxis2DataLocatorDemoService">
     <description>
      Sample web service to demostrate use of Default Axis2 Data Locator to handle ws-mex GetMetadata request.       
      </description>
@@ -23,4 +23,9 @@
     <operation name="getVersion">
     <messageReceiver  class="org.apache.axis2.rpc.receivers.RPCMessageReceiver" />
     </operation>
+   <parameter name="metadataExchange" locked="false">
+     <outputform dialect="http://schemas.xmlsoap.org/wsdl/" forms="inline,location"/>
+     <outputform forms="location"/>
+    </parameter>
+ 
 </service>Index: modules/samples/mex/src/userguide/mex/services/example1/META-INF/ServiceData.xml
===================================================================
--- modules/samples/mex/src/userguide/mex/services/example1/META-INF/ServiceData.xml	(revision 517869)
+++ modules/samples/mex/src/userguide/mex/services/example1/META-INF/ServiceData.xml	(working copy)
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <!--
 /*
  * Copyright 2007 The Apache Software Foundation.
@@ -15,10 +16,9 @@
  * limitations under the License.
  */
  -->
-<?xml version="1.0" encoding="UTF-8"?>
 <ServiceData>
-<Data dialect="http://schemas.xmlsoap.org/wsdl" file="META-INF/DefaultAxis2DataLocatorDemoService.wsdl">
- <URL>http://127/0/0/1:8080/axis2/services/DefaultAxis2DataLocatorDemoService?wsdl </URL>
+<Data dialect="http://schemas.xmlsoap.org/wsdl/" file="META-INF/DefaultAxis2DataLocatorDemoService.wsdl">
+ <URL>http://localhost:8080/axis2/services/DefaultAxis2DataLocatorDemoService?wsdl </URL>
 </Data>
 <Data dialect="http://www.w3.org/2001/XMLSchema" file="META-INF/DefaultAxis2DataLocatorDemoService.xsd">
  <URL>http://localhost:8080/axis2/services/DefaultAxis2DataLocatorDemoService?xsd </URL>
