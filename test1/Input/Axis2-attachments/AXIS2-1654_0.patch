Index: adb-howto.html
===================================================================
--- adb-howto.html	(revision 472808)
+++ adb-howto.html	(working copy)
@@ -33,10 +33,12 @@
 <li><a href="#limitation">Known Limitations</a></li>
 <li><a href="#more">Want to Learn More?</a></li>
 </ul>
-<h2><a name="intro" id="intro">Introduction</a></h2>
+
+<a name="intro" id="intro"></a>
+<h2>Introduction</h2>
 <p>The objective of the Axis2 Databinding framework is to provide a
 lightweight and simple schema compiler/ Java bean generator for
-Axis2. By no means it's to be a fully functional schema compiler
+Axis2. By no means is it to be a fully functional schema compiler
 like XMLBeans. Note that ADB is written in a fashion that allows it
 to be used as a stand-alone schema compiler and also to be extended
 to generate code for other languages.</p>
@@ -69,7 +71,7 @@
 completely in the <strong>org.apache.axis2.schema.*</strong>
 package. This package resides in the codegen module of the Axis2
 source tree.</p>
-<p>Following are the important classes and files:</p>
+<p>The following are the important classes and files:</p>
 <ol>
 <li><strong>SchemaCompiler</strong> - The work horse that really
 compiles the schema into classes.</li>
@@ -97,8 +99,10 @@
 classes the <strong>axis2-adb-{$version}.jar</strong> needs to be
 in the classpath apart from other dependancies like the StAX
 utilities.</p>
-<p><a name="code_gen" id="code_gen"></a></p>
-<h2>Invoking the ADB Code Generator</h2>
+<p></p>
+<a name="code_gen" id="code_gen"></a>
+<h2>Invoking the ADB Code Generator</h2>
+<a name="schema_compiler"></a>
 <h3>As a Standalone Schema Compiler</h3>
 <p>ADB comes with a main class XSD2Java that allows the schemas to
 be compiled just by giving the schema file reference.This main
@@ -337,43 +341,43 @@
 </pre>
 <p>Although this example takes on the tedious effort of creating a
 reader out of the String, inside the Axis2 environment an
-XMLStreamReader can be direclty asked from the OMElement! Hence the
+XMLStreamReader can be direclty asked from the OMElement! Hence, the
 parse method becomes a huge advantage for hassle free object
 creation.</p>
 <p>Similarly the reader obtained from the object can also be
 utilized as needed. The following code fragment shows how to
-utilize the getPullParser method to create an OMElement</p>
+utilize the getPullParser method to create an OMElement :</p>
 <pre>
 XMLStreamReader reader = elt.getPullParser(null);
 OMElement omElt =  new StAXOMBuilder(reader).getDocumentElement();
 </pre>
 <p>That's all to it! If you are interested in learning more on ADB
-the following documents may also be helpful. However be sure to
+the following documents may also be helpful. However, be sure to
 check the limitations section that follows if you are planning to
 use ADB for something serious.</p>
 <a name="limitation" id="limitation"></a>
 <h2>Known Limitations</h2>
-<p>ADB is meant to be a 'Simple' databinding framework and was not
-meant to compile all types of schemas. The following limitations
+<p>ADB is meant to be a 'Simple' databinding framework and was not meant to compile all types of schemas. The following limitations
 are the most highlighted.</p>
 <ol>
 <li>Complex Extensions and Restrictions, Simple Extensions and
 Restrictions are not supported.</li>
 </ol>
-<p><a name="more" id="more"></a></p>
+<p></p>
+<a name="more" id="more"></a>
 <h2>Want to Learn More?</h2>
 <ul>
 <li><a href="adb-advanced.html">Advanced features of the ADB code
-generator</a>- explains xsi:type based desrialization and helper
+generator</a> - explains xsi:type based desrialization and helper
 mode</li>
 <li><a href="adb-tweaking.html">Tweaking the ADB Code
-Generator</a>- explains available mechanisms to extend ADB and
+Generator</a> - explains available mechanisms to extend ADB and
 possibly adopt it to compile schemas to support other
 languages.</li>
 <li><a href="adb-codegen-integration.html">ADB and Axis2
 Integration</a> - explains how the ADB schema compiler was attached
 to the Axis2 framework</li>
 </ul>
-<hr />
+<hr/>
 </body>
 </html>
