Index: WS_policy.html
===================================================================
--- WS_policy.html	(revision 472382)
+++ WS_policy.html	(working copy)
@@ -1,13 +1,15 @@
 <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
       "http://www.w3.org/TR/html4/loose.dtd">
 <html>
+
 <head>
   <meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
   <title>WS Policy Support in Axis2</title>
-  <meta name="generator" content="amaya 9.2.1, see http://www.w3.org/Amaya/">
+  <meta name="generator" content="Bluefish 1.0.5">
 </head>
 
 <body lang="en">
+
 <h1 align="center">Web Services Policy Support In Axis2</h1>
 
 <p>This document will give you an introduction to the role of Web services
@@ -29,33 +31,33 @@
 
 <h2>What is Web Services (WS) Policy?</h2>
 
-<p>To consume non trivial web services one must fully understand its xml
+<p>To consume non-trivial Web services one must fully understand its XML
 contract (WSDL) along with any other additional requirements, capabilities or
 preferences which translates to the configuration of the service, and
 essentially becomes the policies of the service.</p>
 
-<p>WS Policy framework provides a way to express the policies of a service in
+<p>WS-Policy framework provides a way to express the policies of a service in
 a machine-readable way. Web services infrastructure can be enhanced to
 understand and enforce policies at runtime. For instance, a service author
 might write a policy requiring digital signature and encryption, while
 service consumers could use the policy information to reason out whether they
 can adhere to this policy information to use the service or not.</p>
 
-<p>Further more, web service infrastructure could be enhanced to enforce
+<p>Furthermore, Web service infrastructure could be enhanced to enforce
 those requirements without requiring the service author to write even single
 line of code.</p>
+
 <a name="client"></a>
-
 <h2>Client Side WS-Policy Support</h2>
 
-<p>This release <strong>fully supports WS Policy at client-side</strong>. It
+<p>This release <strong>fully supports WS-Policy on the client-side</strong>. This
 means that when you codegen a stub against a WSLD which contains policies,
 the stub will contain the capability to engage the required modules with the
 appropriate configurations plus it will generate additional methods in stub 
 where the user can used set certain properties. For instance, if there is 
 a security policy attached to a binding, the generated stub will engage the
 security module for that service with the appropriate security
-configurations with some addtional methods that the user can used set properties 
+configurations with some additional methods that the user can use to set properties 
 in the generated stub.</p>
 
 <h3>How it works:</h3>
@@ -68,13 +70,13 @@
 PolicyExtensions.</p>
 
 <p>For instance, module Foo might have a mapping of assertion
-{http://test.com/foo, foo} which means any assertion that has this name will be 
+{http://test.com/foo, foo}, which means any assertion that has this name will be 
 processed by this module. Foo module might implement the ModulePolicyExtension 
 interface through which PolicyExtension object can be obtained.</p>
 
 <p>A <strong>PolicyExtension</strong> is the access point for a module to add
 any additional methods to the stub. For instance Reliable Messaging module can add
-startSequence() and endSequence() methods to the stub, that the user must call to
+<code>startSequence()</code> and <code>endSequence()</code> methods to the stub, that the user must call to
 start and end an RM sequence.</p>
 
 <p>Then at the engagement of PolicyEvaluator, effective policy of each messages 
@@ -98,16 +100,16 @@
 
 <p>For instance depending on the policy, Security module can append
 &lt;username&gt;, &lt;passwd&gt; elements to the given element as children,
-which are later resolved into setUsername(..), setPasswd(..), functions of
+which are later resolved into <code>setUsername(..), setPasswd(..)</code>, functions of
 the stub. This way a module can include additional methods to the stub which
 can be used to get specific propreties from the user. These methods store any
 user input in the ServiceClient properties 
-(ServiceClient.getOptions().putProperty(...)) which can later be accessed by
+(<code>ServiceClient.getOptions().putProperty(...)</code>) which can later be accessed by
 the module.</p>
 
 <h4>Phase 2: At AxisServiceBasedMultiLanguageClientEmitter</h4>
 
-<p>Further, policies (based on the WSDL) at appropriate levels
+<p>Furthermore, policies (based on the WSDL) at appropriate levels
 (service level, operation level) are stored as policy strings in the stub. If 
 there are few policies at a given level they are merged together and represented
 as a single policy in the stub. Few more generic methods are also added to the 
@@ -120,7 +122,7 @@
 is used in the stub. In other words, any policy information available in the 
 WSDL will be preserved in the AxisService object that is used in the stub.</p>
 
-<p>Then based on its policy each AxisDescription is engaged to a set of
+<p>Then, based on its policy each AxisDescription is engaged to a set of
 modules. Modules can do a prior calculation of configurations if needed at the
 engagement.</p>
 
@@ -131,15 +133,15 @@
 ModulePolicyExtension implementation. The modules are required to loads their 
 configurations according to the effective policy which is set at AxisDescription
 and properties they get via MessageContext.</p>
+
 <a name="server"></a>
-
 <h2>Server Side WS-Policy Support</h2>
 
 <p>In this current release Axis2 framework uses WS-Commons/Neethi framework
 to manipulate policy documents. All its description builders store any policy
 information included in description documents (services.xml, axis2.xml, ..
 etc) in the appropriate description classes. This information is available at
-both deployment and run time via these description classes.</p>
+both deployment and runtime via these description classes.</p>
 
 <p>When generating WSDL dynamically for each service, policy information in
 the description classes is included. For instance, if you declare a policy in
@@ -147,26 +149,26 @@
 service. If a policy is declared in a services.xml, it is shown in the
 service element of WSDL for that particular service.</p>
 
-<p>Further when a service is deployed, an arbitary policy alternative is 
+<p>Furthermore, when a service is deployed, an arbitary policy alternative is 
 selected and set for each AxisOperation and AxisMessages of the AxisService. If 
-the selected Policy alternative can not be supported by any modules that are 
+the selected Policy alternative cannot be supported by any modules that are 
 capable of processing the selective alternative, then the service is considered 
-as a faulty service. Else set of modules is engaged at appropriate levels to 
+to be faulty service. Else set of modules is engaged at appropriate levels to 
 support the requirments and capabilities that are defined in the Policies 
 that are associated with the AxisDescription.</p>
 
-<p>It is evident that there is some work left to make axis2 a fully fledged 
-ws-policy supported web service infrastructure. But it is encouraging to note 
+<p>It is evident that there is some work left to make Axis2 a fully fledged 
+WS-policy supported Web service infrastructure. But it is encouraging to note 
 that we've taken the first steps towards this goal. We appreciate any suggestions,
-patches etc you send us in this regard. Keep on contributing...!</p>
+patches etc., you send us in this regard. Keep on contributing...!</p>
+
 <a name="resources"></a>
-
 <h2>Resources</h2>
 <ul>
-  <li>Apache Neethi (WS Policy Implementation) official site- <a
+  <li>Apache Neethi (WS Policy Implementation) official site - <a
     href="http://ws.apache.org/commons/neethi/index.html"
     target="_blank">Home Page</a></li>
-  <li>Sanka Samaranayake, March 2006. <a
+  <li>Sanka Samaranayake, March 2006 - <a
     href="http://www.wso2.net/2006/01/web_services_policy_why_what_how"
     target="_blank">Web services Policy - Why, What &amp; How</a></li>
   <li><a
@@ -176,4 +178,5 @@
     target="_blank">Web Services Policy Framework (WS-Policy)</a></li>
 </ul>
 </body>
+
 </html>
