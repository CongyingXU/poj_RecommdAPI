package org.sample.myclient;

import org.apache.axiom.om.OMElement;
import org.apache.axiom.om.OMFactory;
import org.apache.axiom.om.OMAbstractFactory;
import org.apache.axiom.om.impl.builder.StAXOMBuilder;
import org.apache.axis2.client.Options;
import org.apache.axis2.client.ServiceClient;
import org.apache.axis2.addressing.EndpointReference;
import org.apache.axis2.Constants;
import org.apache.axis2.AxisFault;

import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.XMLInputFactory;
import java.io.StringWriter;
import java.io.ByteArrayInputStream;

/**
 *Simple Java client to test the functionality of the JavaScriptMessageReceiver
 */
public class JavaScriptClient {

    final static String serviceEPR = "http://localhost:8080/axis2/services/JavaScriptService/question";

    public static void main(String[] args) throws Exception {

             try {
               //Create the payload to be sent to the JavaScriptService
               OMElement payload = getEchoOMElement();
               StringWriter writer1 = new StringWriter();
               payload.serialize(XMLOutputFactory.newInstance().createXMLStreamWriter(writer1));
               writer1.flush();

               System.out.println("\nWe send the following xml to the JavaScriptService:");
               System.out.println(writer1.toString());

               Options options = new Options();
               options.setTo(new EndpointReference(serviceEPR));
               options.setTransportInProtocol(Constants.TRANSPORT_HTTP);
               options.setUseSeparateListener(false);

               ServiceClient serviceClient = new ServiceClient();
               serviceClient.setOptions(options);

               //Invoke the question function from the JavaScriptService
               OMElement result = serviceClient.sendReceive(payload);
               StringWriter writer2 = new StringWriter();
               result.serialize(XMLOutputFactory.newInstance().createXMLStreamWriter(writer2));
               writer2.flush();

               System.out.println("\nAnd this is the response from the JavaScriptService:");
               System.out.println(writer2.toString());

           } catch (AxisFault axisFault) {
               axisFault.printStackTrace();
           } catch (XMLStreamException e) {
               e.printStackTrace();
           }

        }

        public static OMElement getEchoOMElement() throws XMLStreamException {

            String str = "<PEOPLE>" +
                    "<PERSON>" +
                    "<NAME>person1</NAME>" +
                    "<OCCUPATION>student</OCCUPATION>" +
                    "<ADDRESS>address1</ADDRESS>" +
                    "<GENDER>male</GENDER>" +
                    "</PERSON>" +
                    "<PERSON>" +
                    "<NAME>person2</NAME>" +
                    "<OCCUPATION>student</OCCUPATION>" +
                    "<ADDRESS>address2</ADDRESS>" +
                    "<GENDER>female</GENDER>" +
                    "</PERSON>" +
                    "<PERSON>" +
                    "<NAME>person3</NAME>" +
                    "<OCCUPATION>student</OCCUPATION>" +
                    "<ADDRESS>address3</ADDRESS>" +
                    "<GENDER>male</GENDER>" +
                    "</PERSON>" +
                    "</PEOPLE>";

            XMLStreamReader xmlReader = XMLInputFactory.newInstance().createXMLStreamReader(new
                    ByteArrayInputStream(str.getBytes()));
            OMFactory fac = OMAbstractFactory.getOMFactory();

            StAXOMBuilder staxOMBuilder = new
                    StAXOMBuilder(fac, xmlReader);
            return staxOMBuilder.getDocumentElement();

        }


}
