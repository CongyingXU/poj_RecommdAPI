Index: DeploymentEngine.java
===================================================================
--- DeploymentEngine.java	(revision 1295584)
+++ DeploymentEngine.java	(working copy)
@@ -1413,13 +1413,12 @@
             return;
         }
 
-        if (extension == null) {
-            log.error("Failed to add Deployer " + deployer.getClass().getName() + ": Deployer missing 'extension' attribute");
-            return;
+        //Extention is optional if the extention is not provided deployer will deploy the directories
+        if (extension != null) {
+            // A leading dot is redundant, so strip it.  So we allow either ".foo" or "foo", either
+            // of which will result in extension="foo"
+            if (extension.charAt(0) == '.') extension = extension.substring(1);
         }
-        // A leading dot is redundant, so strip it.  So we allow either ".foo" or "foo", either
-        // of which will result in extension="foo"
-        if (extension.charAt(0) == '.') extension = extension.substring(1);
 
         // If axis2 is not initialized, Axis2 will handle the deployer init() and relavent service deployment
         // If axis2 is initialized and hotDeployment is on, Axis2 will handle the relavent service deployments.
Index: RepositoryListener.java
===================================================================
--- RepositoryListener.java	(revision 1295584)
+++ RepositoryListener.java	(working copy)
@@ -296,15 +296,21 @@
                         if (isSourceControlDir(file)) {
                             continue;
                         }
-                        if (!file.isDirectory() && extension
-                                .equals(DeploymentFileData.getFileExtension(file.getName()))) {
+                        if (extension == null && file.isDirectory()) {
                             Deployer deployer = deploymentEngine.getDeployer(dir, extension);
                             deployer.setDirectory(dir);
                             addFileToDeploy(file, deployer, WSInfo.TYPE_CUSTOM);
-                        } else if (file.isDirectory() && !file.getName().startsWith(".") &&
-                                !(dir.equals(directory.getName()) && "lib".equalsIgnoreCase(file.getName()))) {
-                            //look in the child directory also
-                            findFileForGivenDirectory(file, extension, dir);
+                        } else if (extension != null) {
+                            if (!file.isDirectory() && extension
+                                    .equals(DeploymentFileData.getFileExtension(file.getName()))) {
+                                Deployer deployer = deploymentEngine.getDeployer(dir, extension);
+                                deployer.setDirectory(dir);
+                                addFileToDeploy(file, deployer, WSInfo.TYPE_CUSTOM);
+                            } else if (file.isDirectory() && !file.getName().startsWith(".") &&
+                                    !(dir.equals(directory.getName()) && "lib".equalsIgnoreCase(file.getName()))) {
+                                //look in the child directory also
+                                findFileForGivenDirectory(file, extension, dir);
+                            }
                         }
                     }
                 }
