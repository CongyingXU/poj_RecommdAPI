Index: modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java
===================================================================
--- modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java	(revision 648017)
+++ modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java	(working copy)
@@ -25,6 +25,7 @@
 import org.apache.axiom.om.util.AttributeHelper;
 import org.apache.axiom.om.util.ElementHelper;
 import org.apache.axiom.om.util.UUIDGenerator;
+import org.apache.axiom.soap.SOAPBody;
 import org.apache.axiom.soap.SOAPEnvelope;
 import org.apache.axiom.soap.SOAPFactory;
 import org.apache.axiom.soap.SOAPFault;
@@ -38,8 +39,10 @@
 import org.apache.axis2.addressing.RelatesTo;
 import org.apache.axis2.addressing.i18n.AddressingMessages;
 import org.apache.axis2.client.Options;
+import org.apache.axis2.client.ServiceClient;
 import org.apache.axis2.context.MessageContext;
 import org.apache.axis2.description.AxisEndpoint;
+import org.apache.axis2.description.AxisOperation;
 import org.apache.axis2.description.AxisService;
 import org.apache.axis2.description.HandlerDescription;
 import org.apache.axis2.description.Parameter;
@@ -256,6 +259,35 @@
             }
         }
 
+        private boolean isAnonymousOperation(AxisOperation op) {
+            return (ServiceClient.ANON_OUT_IN_OP.equals(op.getName()) ||
+                    ServiceClient.ANON_OUT_ONLY_OP.equals(op.getName()));
+        }
+        
+        private QName getFirstBodyElement() {
+            SOAPBody body = envelope.getBody();
+            if (body != null) {
+                OMElement firstElement = body.getFirstElement();
+                if (firstElement != null) {
+                    return firstElement.getQName();
+                }
+            }
+            return null;
+        }
+        
+        private String findRealOperationAction() {
+            String action = null;
+            QName firstBodyElement = getFirstBodyElement();
+            if (firstBodyElement != null) {
+                AxisService service = messageContext.getAxisService();
+                AxisOperation op = service.getOperationByMessageElementQName(firstBodyElement);
+                if (op != null) {
+                    action = op.getOutputAction();
+                }
+            }
+            return action;            
+        }
+        
         private void processWSAAction() throws AxisFault {
             String action = messageContextOptions.getAction();
 
@@ -264,8 +296,18 @@
                         " processWSAAction: action from messageContext: " + action);
             }
             if (action == null || action.length()==0) {
-                if (messageContext.getAxisOperation() != null) {
-                    action = messageContext.getAxisOperation().getOutputAction();
+                AxisOperation op = messageContext.getAxisOperation();
+                if (op != null) {
+                    /* Sometimes we don't know what actual operation we are calling
+                     * until the message is serialized, so let's try to find the real
+                     * operation based on the first element in the body and use its
+                     * action. That's what happens with JAX-WS Dispatch clients.
+                     */
+                    if (isAnonymousOperation(op)) {
+                        action = findRealOperationAction();
+                    } else {
+                        action = op.getOutputAction();
+                    }
                     if(action!=null){
                     	// Set this action back to obviate possible action mismatch problems
                     	messageContext.setWSAAction(action);
