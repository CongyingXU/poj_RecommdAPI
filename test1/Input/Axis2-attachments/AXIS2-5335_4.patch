Index: test-resources/schemas/custom_schemas/printXSDReference.xsd
===================================================================
--- test-resources/schemas/custom_schemas/printXSDReference.xsd	(revision 0)
+++ test-resources/schemas/custom_schemas/printXSDReference.xsd	(revision 0)
@@ -0,0 +1,31 @@
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3schools.com" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.w3schools.com">
+    <xs:element name="note">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element name="to" type="xs:string"/>
+                <xs:element name="from" type="xs:string"/>
+                <xs:element name="heading" type="xs:string"/>
+                <xs:element name="body" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+</xs:schema>
Index: test-resources/schemas/custom_schemas/sampleSchema1.xsd
===================================================================
--- test-resources/schemas/custom_schemas/sampleSchema1.xsd	(revision 1346296)
+++ test-resources/schemas/custom_schemas/sampleSchema1.xsd	(working copy)
@@ -1,3 +1,5 @@
+<?xml version="1.0"?>
+
 <!--
   ~ Licensed to the Apache Software Foundation (ASF) under one
   ~ or more contributor license agreements. See the NOTICE file
@@ -17,7 +19,6 @@
   ~ under the License.
   -->
 
-<?xml version="1.0"?>
 <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
 targetNamespace="http://www.w3schools.com"
 xmlns="http://www.w3schools.com"
Index: test-resources/schemas/custom_schemas/sampleSchema4.xsd
===================================================================
--- test-resources/schemas/custom_schemas/sampleSchema4.xsd	(revision 0)
+++ test-resources/schemas/custom_schemas/sampleSchema4.xsd	(revision 0)
@@ -0,0 +1,54 @@
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+
+<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
+	xmlns:ns="http://axisversion.sample" xmlns:ns1="http://org.apache.axis2/xsd"
+	attributeFormDefault="qualified" elementFormDefault="qualified"
+	targetNamespace="http://axisversion.sample">
+	<xs:element name="VersionException">
+		<xs:complexType>
+			<xs:sequence>
+				<xs:element minOccurs="0" name="VersionException"
+					nillable="true" type="ns:Exception" />
+			</xs:sequence>
+		</xs:complexType>
+	</xs:element>
+	<xs:complexType name="Exception">
+		<xs:sequence>
+			<xs:element minOccurs="0" name="Message" nillable="true"
+				type="xs:string" />
+		</xs:sequence>
+	</xs:complexType>
+	<xs:element name="getVersion">
+		<xs:complexType>
+			<xs:sequence />
+		</xs:complexType>
+	</xs:element>
+	<xs:element name="getVersionResponse">
+		<xs:complexType>
+			<xs:sequence>
+				<xs:element minOccurs="0" name="return" nillable="true"
+					type="xs:string" />
+			</xs:sequence>
+		</xs:complexType>
+	</xs:element>
+</xs:schema>
+
+
Index: test-resources/wsdl/printWSDLreference.wsdl
===================================================================
--- test-resources/wsdl/printWSDLreference.wsdl	(revision 0)
+++ test-resources/wsdl/printWSDLreference.wsdl	(revision 0)
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://echo.sample.axis2.apache.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://echo.sample.axis2.apache.org">
+    <wsdl:types>
+        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://echo.sample.axis2.apache.org">
+            <xs:element name="echoStringArray">
+                <xs:complexType>
+                    <xs:sequence>
+                        <xs:element maxOccurs="unbounded" minOccurs="0" name="in" nillable="true" type="xs:string"/>
+                    </xs:sequence>
+                </xs:complexType>
+            </xs:element>
+            <xs:element name="echoStringArrayResponse">
+                <xs:complexType>
+                    <xs:sequence>
+                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
+                    </xs:sequence>
+                </xs:complexType>
+            </xs:element>
+            <xs:element name="echoString">
+                <xs:complexType>
+                    <xs:sequence>
+                        <xs:element minOccurs="0" name="in" nillable="true" type="xs:string"/>
+                    </xs:sequence>
+                </xs:complexType>
+            </xs:element>
+            <xs:element name="echoStringResponse">
+                <xs:complexType>
+                    <xs:sequence>
+                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
+                    </xs:sequence>
+                </xs:complexType>
+            </xs:element>
+        </xs:schema>
+    </wsdl:types>
+    <wsdl:message name="echoStringArrayRequest">
+        <wsdl:part name="parameters" element="ns:echoStringArray"/>
+    </wsdl:message>
+    <wsdl:message name="echoStringArrayResponse">
+        <wsdl:part name="parameters" element="ns:echoStringArrayResponse"/>
+    </wsdl:message>
+    <wsdl:message name="echoStringRequest">
+        <wsdl:part name="parameters" element="ns:echoString"/>
+    </wsdl:message>
+    <wsdl:message name="echoStringResponse">
+        <wsdl:part name="parameters" element="ns:echoStringResponse"/>
+    </wsdl:message>
+    <wsdl:portType name="MessagetestServicePortType">
+        <wsdl:operation name="echoStringArray">
+            <wsdl:input message="ns:echoStringArrayRequest" wsaw:Action="urn:echoStringArray"/>
+            <wsdl:output message="ns:echoStringArrayResponse" wsaw:Action="urn:echoStringArrayResponse"/>
+        </wsdl:operation>
+        <wsdl:operation name="echoString">
+            <wsdl:input message="ns:echoStringRequest" wsaw:Action="urn:echoString"/>
+            <wsdl:output message="ns:echoStringResponse" wsaw:Action="urn:echoStringResponse"/>
+        </wsdl:operation>
+    </wsdl:portType>
+    <wsdl:service name="MessagetestService"/>
+</wsdl:definitions>
Index: test-resources/wsdl/testGenerateInterfaceOperationElement_WSDL.wsdl
===================================================================
--- test-resources/wsdl/testGenerateInterfaceOperationElement_WSDL.wsdl	(revision 0)
+++ test-resources/wsdl/testGenerateInterfaceOperationElement_WSDL.wsdl	(revision 0)
@@ -0,0 +1,49 @@
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+<wsdl2:description xmlns:wsdl2="http://www.w3.org/ns/wsdl" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://echo.sample.axis2.apache.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:wrpc="http://www.w3.org/ns/wsdl/rpc" xmlns:tns="http://echo.sample.axis2.apache.org" xmlns:wsoap="http://www.w3.org/ns/wsdl/soap" xmlns:wsdlx="http://www.w3.org/ns/wsdl-extensions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:whttp="http://www.w3.org/ns/wsdl/http" targetNamespace="http://echo.sample.axis2.apache.org"><wsdl2:types><xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://echo.sample.axis2.apache.org">
+    <xs:element name="echoStringArray">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" minOccurs="0" name="in" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoStringArrayResponse">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoString">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element minOccurs="0" name="in" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoStringResponse">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+</xs:schema></wsdl2:types><wsdl2:interface name="ServiceInterface"><wsdl2:operation name="echoStringArray" style="http://www.w3.org/ns/wsdl/style/rpc" wrpc:signature="in #in return #return " pattern="http://www.w3.org/ns/wsdl/in-out"><wsdl2:input element="ns:echoStringArray" wsaw:Action="urn:echoStringArray"/><wsdl2:output element="ns:echoStringArrayResponse" wsaw:Action="urn:echoStringArrayResponse"/></wsdl2:operation><wsdl2:operation name="echoString" style="http://www.w3.org/ns/wsdl/style/rpc" wrpc:signature="in #in return #return " pattern="http://www.w3.org/ns/wsdl/in-out"><wsdl2:input element="ns:echoString" wsaw:Action="urn:echoString"/><wsdl2:output element="ns:echoStringResponse" wsaw:Action="urn:echoStringResponse"/></wsdl2:operation></wsdl2:interface><wsdl2:binding name="MessagetestServiceSOAP11Binding" interface="tns:ServiceInterface" type="http://www.w3.org/ns/wsdl/soap" wsoap:version="1.1" wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP"><wsdl2:operation ref="tns:echoStringArray" wsoap:action="urn:echoStringArray"/><wsdl2:operation ref="tns:echoString" wsoap:action="urn:echoString"/></wsdl2:binding><wsdl2:binding name="MessagetestServiceSOAP12Binding" interface="tns:ServiceInterface" type="http://www.w3.org/ns/wsdl/soap" wsoap:version="1.2" wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP"><wsdl2:operation ref="tns:echoStringArray" wsoap:action="urn:echoStringArray"/><wsdl2:operation ref="tns:echoString" wsoap:action="urn:echoString"/></wsdl2:binding><wsdl2:binding name="MessagetestServiceSOAP11Binding" interface="tns:ServiceInterface" type="http://www.w3.org/ns/wsdl/soap" wsoap:version="1.1" wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP"><wsdl2:operation ref="tns:echoStringArray" wsoap:action="urn:echoStringArray"/><wsdl2:operation ref="tns:echoString" wsoap:action="urn:echoString"/></wsdl2:binding><wsdl2:binding name="MessagetestServiceHttpBinding" interface="tns:ServiceInterface" type="http://www.w3.org/ns/wsdl/http"><wsdl2:operation ref="tns:creatSeq" whttp:location="creatSeq"/><wsdl2:operation ref="tns:echoStringArray" whttp:location="echoStringArray"/><wsdl2:operation ref="tns:echoString" whttp:location="echoString"/></wsdl2:binding><wsdl2:service name="MessagetestService" interface="tns:ServiceInterface"/></wsdl2:description>
Index: test-resources/wsdl/testGenerateInterfaceOperationElement11_WSDL.wsdl
===================================================================
--- test-resources/wsdl/testGenerateInterfaceOperationElement11_WSDL.wsdl	(revision 0)
+++ test-resources/wsdl/testGenerateInterfaceOperationElement11_WSDL.wsdl	(revision 0)
@@ -0,0 +1,51 @@
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+
+
+<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://echo.sample.axis2.apache.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://echo.sample.axis2.apache.org"><wsdl:types><xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://echo.sample.axis2.apache.org">
+    <xs:element name="echoStringArray">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" minOccurs="0" name="in" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoStringArrayResponse">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoString">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element minOccurs="0" name="in" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoStringResponse">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+</xs:schema></wsdl:types><wsdl:message name="echoStringArrayRequest"><wsdl:part name="parameters" element="ns:echoStringArray"/></wsdl:message><wsdl:message name="echoStringArrayResponse"><wsdl:part name="parameters" element="ns:echoStringArrayResponse"/></wsdl:message><wsdl:message name="echoStringRequest"><wsdl:part name="parameters" element="ns:echoString"/></wsdl:message><wsdl:message name="echoStringResponse"><wsdl:part name="parameters" element="ns:echoStringResponse"/></wsdl:message><wsdl:portType name="MessagetestServicePortType"><wsdl:operation name="echoStringArray"><wsdl:input message="ns:echoStringArrayRequest" wsaw:Action="urn:echoStringArray"/><wsdl:output message="ns:echoStringArrayResponse" wsaw:Action="urn:echoStringArrayResponse"/></wsdl:operation><wsdl:operation name="echoString"><wsdl:input message="ns:echoStringRequest" wsaw:Action="urn:echoString"/><wsdl:output message="ns:echoStringResponse" wsaw:Action="urn:echoStringResponse"/></wsdl:operation></wsdl:portType><wsdl:service name="MessagetestService"/></wsdl:definitions>
Index: test-resources/SchemaDataLocatorTest.xml
===================================================================
--- test-resources/SchemaDataLocatorTest.xml	(revision 0)
+++ test-resources/SchemaDataLocatorTest.xml	(revision 0)
@@ -0,0 +1,49 @@
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one
+  ~ or more contributor license agreements. See the NOTICE file
+  ~ distributed with this work for additional information
+  ~ regarding copyright ownership. The ASF licenses this file
+  ~ to you under the Apache License, Version 2.0 (the
+  ~ "License"); you may not use this file except in compliance
+  ~ with the License. You may obtain a copy of the License at
+  ~
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing,
+  ~ software distributed under the License is distributed on an
+  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  ~ KIND, either express or implied. See the License for the
+  ~ specific language governing permissions and limitations
+  ~ under the License.
+  -->
+
+<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://echo.sample.axis2.apache.org" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://echo.sample.axis2.apache.org">
+    <xs:element name="echoStringArray">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" minOccurs="0" name="in" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoStringArrayResponse">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoString">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element minOccurs="0" name="in" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+    <xs:element name="echoStringResponse">
+        <xs:complexType>
+            <xs:sequence>
+                <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
+            </xs:sequence>
+        </xs:complexType>
+    </xs:element>
+</xs:schema>
Index: test/org/apache/axis2/util/SchemaUtilTest.java
===================================================================
--- test/org/apache/axis2/util/SchemaUtilTest.java	(revision 0)
+++ test/org/apache/axis2/util/SchemaUtilTest.java	(revision 0)
@@ -0,0 +1,36 @@
+package org.apache.axis2.util;
+
+import java.util.ArrayList;
+
+import org.apache.axis2.description.java2wsdl.XMLSchemaTest;
+import org.apache.ws.commons.schema.XmlSchema;
+
+public class SchemaUtilTest extends XMLSchemaTest{
+    
+    private SchemaUtil schemaUtil;
+
+    @Override
+    protected void setUp() throws Exception {
+        schemaUtil=new SchemaUtil();
+        super.setUp();
+    }
+
+    @Override
+    protected void tearDown() throws Exception {
+        schemaUtil=null;
+        super.tearDown();
+    }
+    
+    public void testGetAllSchemas() throws Exception{
+        ArrayList<XmlSchema> schemaList=new ArrayList<XmlSchema>();
+        loadSampleSchemaFile(schemaList);
+        assertNotNull(schemaList.get(0));
+        loadSampleSchemaFile(schemaList);
+        XmlSchema[] schemas=SchemaUtil.getAllSchemas(schemaList.get(0));
+        XmlSchema schema=schemas[0];
+        assertEquals(schema, schemaList.get(0));
+    }
+
+    
+    
+}
Index: test/org/apache/axis2/deployment/WSDLLocatorTest.java
===================================================================
--- test/org/apache/axis2/deployment/WSDLLocatorTest.java	(revision 0)
+++ test/org/apache/axis2/deployment/WSDLLocatorTest.java	(revision 0)
@@ -0,0 +1,41 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.axis2.deployment;
+
+import org.apache.axis2.deployment.resolver.AARBasedWSDLLocator;
+import org.apache.axis2.deployment.resolver.WarBasedWSDLLocator;
+import org.xml.sax.InputSource;
+
+import junit.framework.TestCase;
+
+public class WSDLLocatorTest extends TestCase {
+    
+    public void testGetInputSource() {
+        AARBasedWSDLLocator aarBasedWSDLLocator=new AARBasedWSDLLocator(null, null, null);
+        WarBasedWSDLLocator warBasedWSDLLocator=new WarBasedWSDLLocator(null, null, null);
+        InputSource inputSource=aarBasedWSDLLocator.resolveEntity(null, "http://www.test.org/test.xsd", "http://www.test.org/schema.xsd");
+        assertNotNull(inputSource);
+        assertEquals(inputSource.getSystemId(), "http://www.test.org/test.xsd");
+        inputSource=warBasedWSDLLocator.resolveEntity(null, "http://www.test.org/test.xsd", "http://www.test.org/schema.xsd");
+        assertNotNull(inputSource);
+        assertEquals(inputSource.getSystemId(), "http://www.test.org/test.xsd");
+    }
+
+}
Index: test/org/apache/axis2/deployment/AxisMessageTest.java
===================================================================
--- test/org/apache/axis2/deployment/AxisMessageTest.java	(revision 1346296)
+++ test/org/apache/axis2/deployment/AxisMessageTest.java	(working copy)
@@ -27,6 +27,7 @@
 import org.apache.axis2.description.AxisService;
 import org.apache.axis2.description.Parameter;
 import org.apache.axis2.engine.AxisConfiguration;
+import org.apache.ws.commons.schema.XmlSchemaElement;
 
 import javax.xml.namespace.QName;
 
@@ -66,4 +67,5 @@
         assertEquals(para.getValue(), "messageOut");
 
     }
+
 }
Index: test/org/apache/axis2/deployment/URIResolverTest.java
===================================================================
--- test/org/apache/axis2/deployment/URIResolverTest.java	(revision 0)
+++ test/org/apache/axis2/deployment/URIResolverTest.java	(revision 0)
@@ -0,0 +1,43 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.axis2.deployment;
+
+import junit.framework.TestCase;
+
+import org.apache.axis2.deployment.resolver.AARFileBasedURIResolver;
+import org.apache.axis2.deployment.resolver.WarFileBasedURIResolver;
+import org.xml.sax.InputSource;
+
+public class URIResolverTest extends TestCase {
+
+    public void testResolveEntity() {
+        AARFileBasedURIResolver aar = new AARFileBasedURIResolver(null);
+        WarFileBasedURIResolver war = new WarFileBasedURIResolver(null);
+        InputSource inputSource = aar.resolveEntity(null,
+                "http://www.test.org/test.xsd",
+                "http://www.test.org/schema.xsd");
+        assertNotNull(inputSource);
+        assertEquals(inputSource.getSystemId(), "http://www.test.org/test.xsd");
+        inputSource = war.resolveEntity(null, "http://www.test.org/test.xsd",
+                "http://www.test.org/schema.xsd");
+        assertNotNull(inputSource);
+        assertEquals(inputSource.getSystemId(), "http://www.test.org/test.xsd");
+    }
+}
Index: test/org/apache/axis2/description/AxisService2WSDLTest.java
===================================================================
--- test/org/apache/axis2/description/AxisService2WSDLTest.java	(revision 0)
+++ test/org/apache/axis2/description/AxisService2WSDLTest.java	(revision 0)
@@ -0,0 +1,52 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.axis2.description;
+
+import java.io.File;
+import java.io.PrintWriter;
+
+import org.apache.axiom.om.OMElement;
+
+
+public class AxisService2WSDLTest extends AxisMessageTest{
+    
+    //This test implicitly test the checkStyle(axisOperation); method
+    //This test belongs to AxisService2WSDL20 class
+    public void testGenerateInterfaceOperationElement20() throws Exception{
+        assertNull(service.getParameterValue(WSDL2Constants.OPERATION_STYLE));
+        AxisService2WSDL20 service2wsdl20=new AxisService2WSDL20(service);
+        OMElement element=service2wsdl20.generateOM();
+        String s=readFile("test-resources"+ File.separator + "wsdl" + File.separator +"testGenerateInterfaceOperationElement_WSDL.wsdl");
+        assertSimilarXML(s, element.toString());
+        
+    }
+    
+    //This test belongs to AxisService2WSDL11 class
+    public void testGenerateInterfaceOperationElement11() throws Exception {
+        assertNull(service.getParameterValue(WSDL2Constants.OPERATION_STYLE));
+        AxisService2WSDL11 service2wsdl11=new AxisService2WSDL11(service);
+        OMElement element=service2wsdl11.generateOM();
+        String s=readFile("test-resources"+ File.separator + "wsdl" + File.separator +"testGenerateInterfaceOperationElement11_WSDL.wsdl");
+        assertSimilarXML(s, element.toString());
+    }
+    
+    
+
+}
Index: test/org/apache/axis2/description/AxisMessageTest.java
===================================================================
--- test/org/apache/axis2/description/AxisMessageTest.java	(revision 0)
+++ test/org/apache/axis2/description/AxisMessageTest.java	(revision 0)
@@ -0,0 +1,68 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.axis2.description;
+
+import javax.xml.namespace.QName;
+
+import org.apache.axis2.AbstractTestCase;
+import org.apache.axis2.context.ConfigurationContextFactory;
+import org.apache.axis2.description.java2wsdl.XMLSchemaTest;
+import org.apache.axis2.engine.AxisConfiguration;
+import org.apache.axis2.wsdl.WSDLConstants;
+import org.apache.ws.commons.schema.XmlSchemaElement;
+
+public class AxisMessageTest extends XMLSchemaTest {
+
+    private AxisMessage axisMessage;
+    protected AxisService service;
+
+    private XmlSchemaElement element;
+
+    @Override
+    public void setUp() throws Exception {
+        String filename = AbstractTestCase.basedir
+                + "/test-resources/deployment/AxisMessageTestRepo";
+        AxisConfiguration er = ConfigurationContextFactory
+                .createConfigurationContextFromFileSystem(filename,
+                        filename + "/axis2.xml").getAxisConfiguration();
+
+        assertNotNull(er);
+        service = er.getService("MessagetestService");
+        assertNotNull(service);
+        AxisOperation op = service.getOperation(new QName("echoString"));
+        assertNotNull(op);
+        axisMessage = op.getMessage("In");
+        super.setUp();
+    }
+
+    @Override
+    protected void tearDown() throws Exception {
+        axisMessage = null;
+        super.tearDown();
+    }
+
+    public void testGetSchemaElement() throws Exception {
+        element = axisMessage.getSchemaElement();
+        assertEquals(element.getName(), "echoString");
+        assertEquals(element.getQName(), new QName(
+                "http://echo.sample.axis2.apache.org", "echoString"));
+    }
+
+}
Index: test/org/apache/axis2/description/java2wsdl/DummyService.java
===================================================================
--- test/org/apache/axis2/description/java2wsdl/DummyService.java	(revision 0)
+++ test/org/apache/axis2/description/java2wsdl/DummyService.java	(revision 0)
@@ -0,0 +1,86 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.axis2.description.java2wsdl;
+
+import org.apache.axiom.om.OMElement;
+import org.apache.axiom.om.OMText;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+
+public class DummyService {
+
+    private static final Log log = LogFactory.getLog(DummyService.class);
+    public static final String SERVICE_NAME = "EchoXMLService";
+    public static final String ECHO_OM_ELEMENT_OP_NAME = "echoOMElement";
+
+    public void echoVoid() {
+        log.info("echo Service Called");
+    }
+
+    public void echoOMElementNoResponse(OMElement omEle) {
+        System.setProperty("echoOMElementNoResponse", "echoOMElementNoResponse");
+        log.info("echoOMElementNoResponse service called.");
+    }
+
+    public void echoWithExeption(OMElement omEle) throws Exception {
+        throw new Exception("Invoked the service");
+    }
+
+    public OMElement echoOMElement(OMElement omEle) {
+        omEle.buildWithAttachments();
+        omEle.setLocalName(omEle.getLocalName() + "Response");
+        if (omEle.getFirstElement().getText().trim().startsWith("fault")) {
+            throw new RuntimeException("fault string found in echoOMElement");
+        }
+        return omEle;
+    }
+
+    public OMElement longRunning(OMElement omEle) {
+        omEle.buildWithAttachments();
+        omEle.setLocalName(omEle.getLocalName() + "Response");
+        if (omEle.getFirstElement().getText().trim().startsWith("fault")) {
+            throw new RuntimeException("fault string found in echoOMElement");
+        }
+        try {
+            Thread.sleep(60000);
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        }
+        return omEle;
+    }
+
+    public OMElement echoOM(OMElement omEle) {
+        return omEle;
+    }
+
+    public String echoString(String in) {
+        return in;
+    }
+
+    public int echoInt(int in) {
+        return in;
+    }
+
+    public OMElement echoMTOMtoBase64(OMElement omEle) {
+        OMText omText = (OMText) (omEle.getFirstElement()).getFirstOMChild();
+        omText.setOptimize(false);
+        return omEle;
+    }
+}
Index: test/org/apache/axis2/description/java2wsdl/XMLSchemaTest.java
===================================================================
--- test/org/apache/axis2/description/java2wsdl/XMLSchemaTest.java	(revision 1346296)
+++ test/org/apache/axis2/description/java2wsdl/XMLSchemaTest.java	(working copy)
@@ -19,30 +19,40 @@
 
 package org.apache.axis2.description.java2wsdl;
 
+import java.io.BufferedReader;
 import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileReader;
+import java.io.InputStream;
 import java.util.ArrayList;
 
-import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.transform.stream.StreamSource;
 
+import junit.framework.TestCase;
+
 import org.apache.ws.commons.schema.XmlSchema;
 import org.apache.ws.commons.schema.XmlSchemaCollection;
 import org.custommonkey.xmlunit.Diff;
-import org.w3c.dom.Document;
 
-import junit.framework.TestCase;
-
 public abstract class XMLSchemaTest extends TestCase {
 
     public final String XMLSchemaNameSpace = "xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"";
 
-    public final String CustomSchemaLocation = "test-resources" + File.separator + "schemas"
-            + File.separator + "custom_schemas" + File.separator + "note.xsd";
+    public final String CustomSchemaLocation = "test-resources"
+            + File.separator + "schemas" + File.separator + "custom_schemas"
+            + File.separator + "note.xsd";
+    
+    public final String customDirectoryLocation = "test-resources"
+            + File.separator + "schemas" + File.separator + "custom_schemas"
+            + File.separator;
 
-    public final String SampleSchemasDirectory = "test-resources" + File.separator + "schemas"
-            + File.separator + "custom_schemas" + File.separator;
+    public final String SampleSchemasDirectory = "test-resources"
+            + File.separator + "schemas" + File.separator + "custom_schemas"
+            + File.separator;
 
-    public final String MappingFileLocation = "test-resources" + File.separator + "schemas"
-            + File.separator + "mapping_files" + File.separator + "mapping1.txt";
+    public final String MappingFileLocation = "test-resources" + File.separator
+            + "schemas" + File.separator + "mapping_files" + File.separator
+            + "mapping1.txt";
 
     public void assertSimilarXML(String XML1, String XML2) throws Exception {
         Diff myDiff = new Diff(XML1, XML2);
@@ -56,21 +66,46 @@
 
     }
 
-    public void loadSampleSchemaFile(ArrayList<XmlSchema> schemas) throws Exception {
+    public void loadSampleSchemaFile(ArrayList<XmlSchema> schemas) throws Exception{
         XmlSchemaCollection xmlSchemaCollection = new XmlSchemaCollection();
         File file = null;
         int i = 1;
-
-        file = new File(SampleSchemasDirectory + "sampleSchema" + i + ".xsd");
-        while (file.exists()) {
-            DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
-            documentBuilderFactory.setNamespaceAware(true);
-            Document doc = documentBuilderFactory.newDocumentBuilder().parse(file);
-            schemas.add(xmlSchemaCollection.read(doc, null));
-            i++;
-            file = new File(SampleSchemasDirectory + "sampleSchema" + i + ".xsd");
+       
+            file = new File(SampleSchemasDirectory + "sampleSchema" + i
+                    + ".xsd");
+            while (file.exists()) {
+                InputStream is = new FileInputStream(file);
+                XmlSchemaCollection schemaCol = new XmlSchemaCollection();
+                XmlSchema schema = schemaCol.read(new StreamSource(is), null);
+                schemas.add(schema);
+                i++;
+                file = new File(SampleSchemasDirectory + "sampleSchema" + i
+                        + ".xsd");
+            }
+       
+    }
+    
+    public XmlSchema loadSingleSchemaFile(int i) throws Exception{
+        File file = new File(SampleSchemasDirectory + "sampleSchema" + i
+                + ".xsd");
+        InputStream is = new FileInputStream(file);
+        XmlSchemaCollection schemaCol = new XmlSchemaCollection();
+        XmlSchema schema = schemaCol.read(new StreamSource(is), null);
+        return schema;
+    }
+    
+    public String readFile(String fileName) throws Exception {
+        File file = new File(fileName);
+        char[] buffer = null;
+        BufferedReader bufferedReader = new BufferedReader(new FileReader(file));
+        buffer = new char[(int) file.length()];
+        int i = 0;
+        int c = bufferedReader.read();
+        while (c != -1) {
+            buffer[i++] = (char) c;
+            c = bufferedReader.read();
         }
-
+        return new String(buffer);
     }
 
 }
Index: test/org/apache/axis2/description/java2wsdl/TypeTableTest.java
===================================================================
--- test/org/apache/axis2/description/java2wsdl/TypeTableTest.java	(revision 1346296)
+++ test/org/apache/axis2/description/java2wsdl/TypeTableTest.java	(working copy)
@@ -21,6 +21,7 @@
 
 import java.math.BigDecimal;
 import java.math.BigInteger;
+import java.net.URI;
 import java.util.GregorianCalendar;
 import java.util.Locale;
 import java.util.TimeZone;
@@ -115,6 +116,46 @@
         assertNull("Not the expected value",
                 typeTable.getSchemaTypeName(className));
     }
+    
+    
+    //Following test is relted to apache XMLSchema libaray usage
+    public void testXMLSchemaConstantsUsage(){
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_STRING), String.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_INT), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_INTEGER), BigInteger.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_LONG), Long.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_SHORT), Short.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_DECIMAL), BigDecimal.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_FLOAT), Float.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_DOUBLE), Double.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_BOOLEAN), Boolean.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_BYTE), Byte.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_QNAME), QName.class.getName());         
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_UNSIGNEDINT), Long.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_UNSIGNEDSHORT), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_UNSIGNEDBYTE), Short.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_UNSIGNEDLONG), BigInteger.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_TIME), XMLGregorianCalendar.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_DATE), XMLGregorianCalendar.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_DATETIME), XMLGregorianCalendar.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_DURATION), Duration.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_NOTATION), QName.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_ANYURI), URI.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_ANY), Object.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_ANYSIMPLETYPE), Object.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_ANYTYPE), Object.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_NONNEGATIVEINTEGER), BigInteger.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_NONPOSITIVEINTEGER), BigInteger.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_NEGATIVEINTEGER), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_POSITIVEINTEGER), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_NORMALIZEDSTRING),String.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_POSITIVEINTEGER), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_POSITIVEINTEGER), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_POSITIVEINTEGER), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_POSITIVEINTEGER), Integer.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_BASE64), DataHandler.class.getName());
+        assertEquals(typeTable.getClassNameForQName(Constants.XSD_HEXBIN), DataHandler.class.getName());
+    }
 
     class TestXMLGregorianCalendarImpl extends XMLGregorianCalendar {
         @Override
@@ -300,5 +341,7 @@
     class TestCalendarImpl {
 
     }
+    
+    
 
 }
Index: test/org/apache/axis2/description/AxisServiceTest.java
===================================================================
--- test/org/apache/axis2/description/AxisServiceTest.java	(revision 1346296)
+++ test/org/apache/axis2/description/AxisServiceTest.java	(working copy)
@@ -20,12 +20,18 @@
 package org.apache.axis2.description;
 
 import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.InputStream;
 import java.io.ObjectOutputStream;
 import java.util.ArrayList;
 
 import javax.xml.namespace.QName;
+import javax.xml.transform.stream.StreamSource;
 
+import org.apache.axis2.AbstractTestCase;
 import org.apache.axis2.context.ConfigurationContext;
+import org.apache.axis2.context.ConfigurationContextFactory;
 import org.apache.axis2.context.MessageContext;
 import org.apache.axis2.context.ServiceContext;
 import org.apache.axis2.context.ServiceGroupContext;
@@ -33,6 +39,8 @@
 import org.apache.axis2.description.java2wsdl.XMLSchemaTest;
 import org.apache.axis2.engine.AxisConfiguration;
 import org.apache.ws.commons.schema.XmlSchema;
+import org.apache.ws.commons.schema.XmlSchemaCollection;
+import org.apache.ws.commons.schema.XmlSchemaElement;
 
 public class AxisServiceTest extends XMLSchemaTest {
     public static final String PARAM_NAME = "CustomParameter";
@@ -50,69 +58,65 @@
             }
         }
     }
-    
-    
 
     @Override
     protected void setUp() throws Exception {
         service = new AxisService();
-        sampleSchemas=new ArrayList<XmlSchema>();
+        sampleSchemas = new ArrayList<XmlSchema>();
         super.setUp();
     }
-    
+
     @Override
     protected void tearDown() throws Exception {
-        service=null;
-        sampleSchemas=null;
+        service = null;
+        sampleSchemas = null;
         super.tearDown();
     }
 
+    public void testAddMessageElementQNameToOperationMappingBasic() {
 
-
-    public void testAddMessageElementQNameToOperationMappingBasic() {
-        
         AxisOperation op1 = new InOnlyAxisOperation();
         QName opName = new QName("foo");
-        
+
         // test registering the same operation multiple times
-        
+
         assertEquals(null, service.getOperationByMessageElementQName(opName));
-        
+
         service.addMessageElementQNameToOperationMapping(opName, op1);
-        
+
         assertEquals(op1, service.getOperationByMessageElementQName(opName));
-        
+
         service.addMessageElementQNameToOperationMapping(opName, op1);
-        
+
         assertEquals(op1, service.getOperationByMessageElementQName(opName));
-        
+
         service.addMessageElementQNameToOperationMapping(opName, op1);
-        
-        assertEquals(op1, service.getOperationByMessageElementQName(opName));        
+
+        assertEquals(op1, service.getOperationByMessageElementQName(opName));
     }
-    
+
     public void testAddMessageElementQNameToOperationMappingOverloading() {
-        
+
         AxisOperation op1 = new InOnlyAxisOperation();
         AxisOperation op2 = new InOnlyAxisOperation();
         AxisOperation op3 = new InOnlyAxisOperation();
         QName opName = new QName("foo");
-        
+
         // test registering different operations under the same opName
-        
+
         assertEquals(null, service.getOperationByMessageElementQName(opName));
-        
+
         service.addMessageElementQNameToOperationMapping(opName, op1);
-        
+
         assertEquals(op1, service.getOperationByMessageElementQName(opName));
-        
+
         service.addMessageElementQNameToOperationMapping(opName, op2);
-        
+
         assertEquals(null, service.getOperationByMessageElementQName(opName));
-        
+
         service.addMessageElementQNameToOperationMapping(opName, op3);
-        
-        assertEquals(null, service.getOperationByMessageElementQName(opName));       
+
+        assertEquals(null, service.getOperationByMessageElementQName(opName));
     }
 
     public void testParameterObserver() throws Exception {
@@ -122,30 +126,31 @@
         service.addParameter(PARAM_NAME, PARAM_VALUE);
         assertTrue("Didn't get notification", observer.gotIt);
     }
-     
+
     /**
-     * Simple test to ensure that Parameters marked as Transient
-     * are not persisted.
+     * Simple test to ensure that Parameters marked as Transient are not
+     * persisted.
+     * 
      * @throws Exception
      */
     public void testTransientParameters() throws Exception {
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
-        
+
         Parameter p1 = new Parameter("NORMAL", "Hello World");
         Parameter p2 = new Parameter("TRANSIENT", "Hello World");
         p2.setTransient(true);
-        
+
         // The header in an object output is 4 bytes
         final int HEADER_LENGTH = 4;
-        
+
         // Make sure that non-transient value is written
         ObjectOutputStream oos = new ObjectOutputStream(baos);
         p1.writeExternal(oos);
         oos.flush();
         oos.close();
         int length1 = baos.toByteArray().length;
-        assertTrue( length1 > HEADER_LENGTH);
-        
+        assertTrue(length1 > HEADER_LENGTH);
+
         // Make sure the transient value is not written
         baos = new ByteArrayOutputStream();
         oos = new ObjectOutputStream(baos);
@@ -153,88 +158,162 @@
         oos.flush();
         oos.close();
         int length2 = baos.toByteArray().length;
-        assertTrue( length2 <= HEADER_LENGTH);
-        
-        
+        assertTrue(length2 <= HEADER_LENGTH);
+
     }
-    
+
     /**
-     * Simple test to make verify that the MessageContext listener
-     * is invoked when a ServiceContext is attached to the MessageContext
+     * Simple test to make verify that the MessageContext listener is invoked
+     * when a ServiceContext is attached to the MessageContext
+     * 
      * @throws Exception
      */
     public void testMessageContextListener() throws Exception {
-        
+
         AxisConfiguration ac = new AxisConfiguration();
         ConfigurationContext cc = new ConfigurationContext(ac);
-        
+
         // Create a dummy AxisService
         AxisService service = new AxisService();
         service.setName("dummy");
-        
+
         AxisServiceGroup asg = new AxisServiceGroup();
         asg.addService(service);
-        
+
         // Attach a ServiceContextListener
-        // The ServiceContextListener will copy sample information from 
+        // The ServiceContextListener will copy sample information from
         // the ServiceContext onto the MessageContext
         service.addMessageContextListener(new MyMessageContextListener());
-        
+
         // Create a Dummy ServiceContext
         ServiceGroupContext sgc = new ServiceGroupContext(cc, asg);
         ServiceContext sc = sgc.getServiceContext(service);
         sc.setProperty("SERVICE_PROPERTY", "SUCCESSFUL");
-        
+
         // Create a MessageContext
         MessageContext mc = new MessageContext();
-        
+
         // Attach the ServiceContext and MessageContext.
         // This will trigger the MyServiceContextListener.attachEvent
         mc.setServiceContext(sc);
-        
+
         // Verify success
         assertTrue("SUCCESSFUL".equals(mc.getProperty("MESSAGE_PROPERTY")));
     }
-    
-    public void testOperationActionMapping() throws Exception {                
+
+    public void testOperationActionMapping() throws Exception {
         AxisOperation op1 = new InOutAxisOperation();
         AxisOperation op2 = new InOutAxisOperation();
         op2.addParameter(DeploymentConstants.TAG_ALLOWOVERRIDE, "true");
         AxisOperation op3 = new InOutAxisOperation();
-        
+
         service.mapActionToOperation("testaction1", op1);
         assertEquals(service.getOperationByAction("testaction1"), op1);
-        //Test duplicate registration with same operation
+        // Test duplicate registration with same operation
         service.mapActionToOperation("testaction1", op1);
         assertEquals(service.getOperationByAction("testaction1"), op1);
-        //Test duplicate registration with different operation and allowOverride
+        // Test duplicate registration with different operation and
+        // allowOverride
         service.mapActionToOperation("testaction1", op2);
         assertEquals(service.getOperationByAction("testaction1"), op1);
-        //Test registration of new operation with allowOverride
+        // Test registration of new operation with allowOverride
         service.mapActionToOperation("testaction2", op2);
         assertEquals(service.getOperationByAction("testaction1"), op1);
         assertEquals(service.getOperationByAction("testaction2"), op2);
-        //Test duplicate registration with different operation and no allowOverride
+        // Test duplicate registration with different operation and no
+        // allowOverride
         service.mapActionToOperation("testaction1", op3);
         assertNull(service.getOperationByAction("testaction1"));
         assertEquals(service.getOperationByAction("testaction2"), op2);
     }
-    
+
+    public void testReleaseSchemaList() throws Exception {
+        loadSampleSchemaFile(sampleSchemas);
+        service.addSchema(sampleSchemas);
+        assertTrue(service.getSchema().size() != 0);
+        service.releaseSchemaList();
+        assertTrue(service.getSchema().size() == 0);
+    }
+
+    public void testPrintSchema() throws Exception {
+        loadSampleSchemaFile(sampleSchemas);
+        service.addSchema(sampleSchemas);
+        ByteArrayOutputStream stream = new ByteArrayOutputStream();
+        service.printSchema(stream);
+        String a = stream.toString();
+        stream.reset();
+        for (XmlSchema schema : sampleSchemas) {
+            schema.write(stream);
+        }
+        String b = stream.toString();
+        stream.close();
+        assertEquals(a, b);
+    }
+
+    public void testPrintXSD() throws Exception {
+        InputStream is = new FileInputStream(SampleSchemasDirectory + "sampleSchema1.xsd");
+        XmlSchemaCollection schemaCol = new XmlSchemaCollection();
+        XmlSchema schema = schemaCol.read(new StreamSource(is), null);
+        ByteArrayOutputStream stream = new ByteArrayOutputStream();
+        ArrayList<XmlSchema> xmlSchemas = new ArrayList<XmlSchema>();
+        xmlSchemas.add(schema);
+        service.addSchema(xmlSchemas);
+        service.printXSD(stream, "");
+        // service has a single schema and it is printed. The it is compared
+        // with the saved file
+        assertSimilarXML(stream.toString(), readFile(SampleSchemasDirectory
+                + "printXSDReference.xsd"));
+    }
+
+    public void testPrintWSDL() throws Exception {
+        // create a test service
+        // if MessageTestService is changed somehow printWSDLreference.wsdl file
+        // must changed according to it. Otherwise the test will fail
+        String filename = AbstractTestCase.basedir
+                + "/test-resources/deployment/AxisMessageTestRepo";
+        AxisConfiguration er = ConfigurationContextFactory
+                .createConfigurationContextFromFileSystem(filename, filename + "/axis2.xml")
+                .getAxisConfiguration();
+
+        assertNotNull(er);
+        service = er.getService("MessagetestService");
+        ByteArrayOutputStream stream = new ByteArrayOutputStream();
+        service.printWSDL(stream, null);
+        // printed WSDL value is compared with saved value
+        assertSimilarXML(stream.toString(), readFile("test-resources" + File.separator + "wsdl"
+                + File.separator + "printWSDLreference.wsdl"));
+    }
+
+    public void testGetSchema() throws Exception {
+        loadSampleSchemaFile(sampleSchemas);
+        service.addSchema(sampleSchemas);
+        assertEquals(service.getSchema(0), sampleSchemas.get(0));
+    }
+
+    public void testGetSchemaElement() throws Exception {
+        loadSampleSchemaFile(sampleSchemas);
+        service.addSchema(sampleSchemas);
+        XmlSchemaElement schemaElement1 = service.getSchemaElement(new QName(
+                "http://www.w3schools.com", "note"));
+        XmlSchemaElement schemaElement2 = sampleSchemas.get(0).getElementByName(
+                new QName("http://www.w3schools.com", "note"));
+        assertEquals(schemaElement1, schemaElement2);
+    }
+
     /**
-     * Sameple MessageContextListener which sets a property 
-     * on the MessageContext when the SerivceContext is attached.
+     * Sameple MessageContextListener which sets a property on the
+     * MessageContext when the SerivceContext is attached.
      */
     class MyMessageContextListener implements MessageContextListener {
 
+        public void attachEnvelopeEvent(MessageContext mc) {
 
-        public void attachEnvelopeEvent(MessageContext mc) {
-            
         }
 
         public void attachServiceContextEvent(ServiceContext sc, MessageContext mc) {
             String value = (String) sc.getProperty("SERVICE_PROPERTY");
             mc.setProperty("MESSAGE_PROPERTY", value);
         }
-        
+
     }
 }
Index: test/org/apache/axis2/dataretrieval/SchemaDataLocatorTest.java
===================================================================
--- test/org/apache/axis2/dataretrieval/SchemaDataLocatorTest.java	(revision 0)
+++ test/org/apache/axis2/dataretrieval/SchemaDataLocatorTest.java	(revision 0)
@@ -0,0 +1,83 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements. See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership. The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License. You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.axis2.dataretrieval;
+
+import java.io.File;
+
+import javax.xml.namespace.QName;
+
+import org.apache.axis2.AbstractTestCase;
+import org.apache.axis2.context.ConfigurationContextFactory;
+import org.apache.axis2.context.MessageContext;
+import org.apache.axis2.description.AxisMessage;
+import org.apache.axis2.description.AxisOperation;
+import org.apache.axis2.description.AxisService;
+import org.apache.axis2.description.java2wsdl.XMLSchemaTest;
+import org.apache.axis2.engine.AxisConfiguration;
+
+public class SchemaDataLocatorTest extends XMLSchemaTest {
+
+    private AxisService service;
+    private AxisMessage axisMessage;
+    private SchemaDataLocator schemaDataLocator;
+
+    @Override
+    public void setUp() throws Exception {
+        String filename = AbstractTestCase.basedir
+                + "/test-resources/deployment/AxisMessageTestRepo";
+        AxisConfiguration er = ConfigurationContextFactory
+                .createConfigurationContextFromFileSystem(filename,
+                        filename + "/axis2.xml").getAxisConfiguration();
+
+        assertNotNull(er);
+        service = er.getService("MessagetestService");
+        assertNotNull(service);
+        AxisOperation op = service.getOperation(new QName("echoString"));
+        assertNotNull(op);
+        axisMessage = op.getMessage("In");
+        schemaDataLocator = new SchemaDataLocator();
+        super.setUp();
+    }
+
+    @Override
+    protected void tearDown() throws Exception {
+        axisMessage = null;
+        super.tearDown();
+    }
+
+    // Tests the Apache XMLSchema usage using a dummy MessageContext object
+    public void testOutputInlineForm() throws Exception {
+        MessageContext mc = new MessageContext();
+        mc.setAxisService(service);
+        ;
+        mc.setAxisMessage(axisMessage);
+
+        Data[] data = schemaDataLocator
+                .outputInlineForm(mc, new ServiceData[0]);
+        String s = data[0].getData().toString();
+        String expected = readFile("test-resources" + File.separator
+                + "SchemaDataLocatorTest.xml");
+        assertNotNull(data);
+        assertEquals(data.length, 1);
+        assertSimilarXML(s, expected);
+
+    }
+
+}
