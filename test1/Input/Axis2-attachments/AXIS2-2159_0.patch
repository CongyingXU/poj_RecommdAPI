Index: /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/mail/SimpleMailListener.java
===================================================================
--- /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/mail/SimpleMailListener.java  (revision 506243)
+++ /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/mail/SimpleMailListener.java  (working copy)
@@ -360,7 +360,7 @@
                         }
 
                         InputStream inputStream = part.getInputStream();
-                        OMBuilder builder = Builder.getBuilder(inputStream, null, soapNamespaceURI);
+                        OMBuilder builder = Builder.getSOAPBuilder(inputStream, soapNamespaceURI);
                         SOAPEnvelope envelope = (SOAPEnvelope) builder.getDocumentElement();
                         msgContext.setEnvelope(envelope);
                     }
Index: /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/mail/server/MailSorter.java
===================================================================
--- /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/mail/server/MailSorter.java   (revision 506243)
+++ /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/mail/server/MailSorter.java   (working copy)
@@ -125,7 +125,7 @@
                 soapNamespaceURI = SOAP11Constants.SOAP_ENVELOPE_NAMESPACE_URI;
             }
 
-            OMBuilder builder = Builder.getBuilder(bais, null, soapNamespaceURI);
+            OMBuilder builder = Builder.getSOAPBuilder(bais, soapNamespaceURI);
 
             SOAPEnvelope envelope = (SOAPEnvelope) builder.getDocumentElement();
 
Index: /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/jms/JMSUtils.java
===================================================================
--- /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/jms/JMSUtils.java     (revision 506243)
+++ /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/jms/JMSUtils.java     (working copy)
@@ -304,7 +304,7 @@
         } else {
             String charSetEnc = Builder.getCharSetEncoding(contentType);
             String soapNS = Builder.getEnvelopeNamespace(contentType);
-            builder = Builder.getBuilder(in, charSetEnc, soapNS);
+            builder = Builder.getSOAPBuilder(in, charSetEnc, soapNS);
 
             // Set the encoding scheme in the message context
             msgContext.setProperty(Constants.Configuration.CHARACTER_SET_ENCODING, charSetEnc);
Index: /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java
===================================================================
--- /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java   (revision 506243)
+++ /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/transport/TransportUtils.java   (working copy)
@@ -218,7 +218,7 @@
               if (builder==null)
               {
                      //FIXME making soap defualt for the moment..might effect the performance
-                     builder = Builder.getBuilder(inStream, charSetEnc,soapNamespaceURI);
+                     builder = Builder.getSOAPBuilder(inStream, charSetEnc, soapNamespaceURI);
 //                   throw new AxisFault("Cannot find a matching builder for the message. Unsupported Content Type.");
               }
               
Index: /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/util/Builder.java
===================================================================
--- /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/util/Builder.java       (revision 506243)
+++ /home/sanjaya/Projects/Axis2/trunk/java/modules/kernel/src/org/apache/axis2/util/Builder.java       (working copy)
@@ -6,16 +6,12 @@
 import java.io.InputStreamReader; 
 import java.io.PushbackInputStream; 
 import java.io.Reader; 
-import java.lang.reflect.Constructor; 
-import java.lang.reflect.InvocationTargetException; 
-import java.util.HashMap; 
  
 import javax.xml.parsers.FactoryConfigurationError; 
 import javax.xml.stream.XMLStreamException; 
 import javax.xml.stream.XMLStreamReader; 
  
 import org.apache.axiom.attachments.Attachments; 
-import org.apache.axiom.om.OMAbstractFactory; 
 import org.apache.axiom.om.OMException; 
 import org.apache.axiom.om.impl.MTOMConstants; 
 import org.apache.axiom.om.impl.builder.OMBuilder; 
@@ -25,14 +21,11 @@
 import org.apache.axiom.om.util.StAXUtils; 
 import org.apache.axiom.soap.SOAP11Constants; 
 import org.apache.axiom.soap.SOAP12Constants; 
-import org.apache.axiom.soap.SOAPEnvelope; 
 import org.apache.axiom.soap.SOAPFactory; 
 import org.apache.axiom.soap.impl.builder.MTOMStAXSOAPModelBuilder; 
 import org.apache.axiom.soap.impl.builder.StAXSOAPModelBuilder; 
-import org.apache.axiom.soap.impl.llom.soap11.SOAP11Factory; 
 import org.apache.axis2.AxisFault; 
 import org.apache.axis2.Constants; 
-import org.apache.axis2.context.ConfigurationContext; 
 import org.apache.axis2.context.MessageContext; 
 import org.apache.axis2.description.Parameter; 
 import org.apache.axis2.transport.http.HTTPConstants; 
@@ -280,27 +273,74 @@
         return attachments; 
     } 
  
+    /** 
+     * @deprecated If some one really need this method, please shout. 
+     *  
+     * @param in 
+     * @return 
+     * @throws XMLStreamException 
+     */ 
     public static StAXBuilder getBuilder(Reader in) throws XMLStreamException { 
         XMLStreamReader xmlreader = StAXUtils.createXMLStreamReader(in); 
         StAXBuilder builder = new StAXSOAPModelBuilder(xmlreader, null); 
         return builder; 
     } 
  
-    public static OMBuilder getBuilder(InputStream inStream, String charSetEnc, String soapNamespaceURI) throws XMLStreamException { 
-        OMBuilder builder; 
-        XMLStreamReader xmlreader; 
-        if(charSetEnc == null) { 
-            xmlreader = StAXUtils.createXMLStreamReader(inStream); 
-        } else { 
-            xmlreader = StAXUtils.createXMLStreamReader(inStream, charSetEnc); 
-        } 
-        if(soapNamespaceURI == null) { 
-            builder = new StAXOMBuilder(xmlreader); 
-        } else { 
-            builder = new StAXSOAPModelBuilder(xmlreader, soapNamespaceURI); 
-        } 
-        return builder; 
+    /** 
+     * Creates an OMBuilder for a plain XML message. Default character set encording is used. 
+     *  
+     * @param inStream InputStream for a XML message 
+     * @return Handler to a OMBuilder implementation instance 
+     * @throws XMLStreamException 
+     */ 
+    public static OMBuilder getBuilder(InputStream inStream) throws XMLStreamException { 
+       XMLStreamReader xmlReader = StAXUtils.createXMLStreamReader(inStream); 
+       return new StAXOMBuilder(xmlReader); 
     } 
+     
+    /** 
+     * Creates an OMBuilder for a plain XML message. 
+     *  
+     * @param inStream InputStream for a XML message 
+     * @param charSetEnc Character set encoding to be used 
+     * @return Handler to a OMBuilder implementation instance 
+     * @throws XMLStreamException 
+     */ 
+    public static OMBuilder getBuilder(InputStream inStream, String charSetEnc) throws XMLStreamException { 
+       XMLStreamReader xmlReader = StAXUtils.createXMLStreamReader(inStream, charSetEnc); 
+       return new StAXOMBuilder(xmlReader); 
+    } 
+     
+    /** 
+     * Creates an OMBuilder for a SOAP message. Default character set encording is used. 
+     *  
+     * @param inStream InputStream for a SOAP message 
+     * @param soapNamespaceURI Specifies which SOAP version to use,  
+     *              {@link SOAP11Constants#SOAP_11_CONTENT_TYPE} or  
+     *              {@link SOAP12Constants#SOAP_12_CONTENT_TYPE} 
+     * @return Handler to a OMBuilder implementation instance 
+     * @throws XMLStreamException 
+     */ 
+    public static OMBuilder getSOAPBuilder(InputStream inStream, String soapNamespaceURI) throws XMLStreamException { 
+       XMLStreamReader xmlreader = StAXUtils.createXMLStreamReader(inStream); 
+        return new StAXSOAPModelBuilder(xmlreader, soapNamespaceURI); 
+    } 
+     
+    /** 
+     * Creates an OMBuilder for a SOAP message. 
+     *  
+     * @param inStream InputStream for a SOAP message 
+     * @param charSetEnc Character set encoding to be used 
+     * @param soapNamespaceURI Specifies which SOAP version to use,  
+     *              {@link SOAP11Constants#SOAP_11_CONTENT_TYPE} or  
+     *              {@link SOAP12Constants#SOAP_12_CONTENT_TYPE} 
+     * @return Handler to a OMBuilder implementation instance 
+     * @throws XMLStreamException 
+     */ 
+    public static OMBuilder getSOAPBuilder(InputStream inStream, String charSetEnc, String soapNamespaceURI) throws XMLStreamException { 
+               XMLStreamReader xmlreader = StAXUtils.createXMLStreamReader(inStream, charSetEnc); 
+        return new StAXSOAPModelBuilder(xmlreader, soapNamespaceURI); 
+    } 
  
     public static OMBuilder getBuilder(SOAPFactory soapFactory, InputStream in, String charSetEnc) throws XMLStreamException { 
         StAXBuilder builder;  
