Index: modules/kernel/src/org/apache/axis2/description/AxisService.java
===================================================================
--- modules/kernel/src/org/apache/axis2/description/AxisService.java	(revision 512236)
+++ modules/kernel/src/org/apache/axis2/description/AxisService.java	(working copy)
@@ -924,7 +924,7 @@
             
             Data[] result = getData(request, context);
             OMElement wsdlElement;
-            if (result != null && result[0] != null) {
+            if (result != null && result.length > 0) {
                 wsdlElement = (OMElement) (result[0].getData());
                 try {
                     wsdlElement.serialize(out);
Index: modules/kernel/src/org/apache/axis2/dataretrieval/DataRetrievalUtil.java
===================================================================
--- modules/kernel/src/org/apache/axis2/dataretrieval/DataRetrievalUtil.java	(revision 512236)
+++ modules/kernel/src/org/apache/axis2/dataretrieval/DataRetrievalUtil.java	(working copy)
@@ -18,6 +18,7 @@
 
 import org.apache.axiom.om.OMAbstractFactory;
 import org.apache.axiom.om.OMElement;
+import org.apache.axiom.om.OMException;
 import org.apache.axiom.om.OMFactory;
 import org.apache.axiom.om.impl.builder.StAXOMBuilder;
 import org.apache.axiom.om.util.StAXUtils;
@@ -57,7 +58,9 @@
 
             element = convertToOMElement(servicexmlStream);
         } catch (XMLStreamException e) {
-            throw new DataRetrievalException(e);
+            throw new DataRetrievalException("Failed to load from file, " + file, e);
+        } catch (Exception e) {
+            throw new DataRetrievalException("Failed to load from file, ", e);
         }
 
         return element;
@@ -72,7 +75,7 @@
      */
 
     public static OMElement convertToOMElement(InputStream servicexmlStream)
-            throws XMLStreamException {
+            throws XMLStreamException, OMException {
         OMElement element = null;
 
         XMLStreamReader xmlReader = StAXUtils
Index: modules/kernel/src/org/apache/axis2/dataretrieval/DataLocatorFactory.java
===================================================================
--- modules/kernel/src/org/apache/axis2/dataretrieval/DataLocatorFactory.java	(revision 512236)
+++ modules/kernel/src/org/apache/axis2/dataretrieval/DataLocatorFactory.java	(working copy)
@@ -29,11 +29,11 @@
   /*
    * Return instance of default Data Locator for the dialect.
    */
-  protected static AxisDataLocator createDataLocator(String dialect) {
+  public static AxisDataLocator createDataLocator(String dialect) {
       return (createDataLocator(dialect, null));
   }
   
-  protected static AxisDataLocator createDataLocator(String dialect, ServiceData[] serviceDataArray) {
+  public static AxisDataLocator createDataLocator(String dialect, ServiceData[] serviceDataArray) {
       AxisDataLocator dataLocator = null;
       if (dialect.equals(DRConstants.SPEC.DIALECT_TYPE_WSDL)){
           dataLocator = getWsdlDataLocator(serviceDataArray); 
Index: modules/kernel/src/org/apache/axis2/dataretrieval/ServiceData.java
===================================================================
--- modules/kernel/src/org/apache/axis2/dataretrieval/ServiceData.java	(revision 512236)
+++ modules/kernel/src/org/apache/axis2/dataretrieval/ServiceData.java	(working copy)
@@ -42,14 +42,14 @@
      * @param in_data an Data element in the ServiceData.
      */
 
-    protected ServiceData(OMElement in_data) {
+    public ServiceData(OMElement in_data) {
         data = in_data;
         identifier = getAttributeValue(DRConstants.SERVICE_DATA.IDENTIFIER);
         dialect = getAttributeValue(DRConstants.SERVICE_DATA.DIALECT);
         fileName = getAttributeValue(DRConstants.SERVICE_DATA.FILE);
     }
 
-    protected String getAttributeValue(String qName) {
+    public String getAttributeValue(String qName) {
 
         String value = null;
         OMAttribute attribute = data.getAttribute(new QName(qName));
@@ -62,24 +62,24 @@
     }
 
     // return identifier for this Data element
-    protected String getIdentifier() {
+    public String getIdentifier() {
         return identifier;
     }
 
     // return dialect for this Data element
-    protected String getDialect() {
+    public String getDialect() {
         return dialect;
     }
 
     // return the Data ELement
-    protected OMElement getOMData() {
+    public OMElement getOMData() {
         return data;
     }
 
     
     
     // Get URL from data Element
-    protected String getURL() {
+    public String getURL() {
 
         String urlValue = null;
         OMElement url = data.getFirstChildWithName(new QName(
@@ -92,7 +92,7 @@
     }
     
     // Get ENDPOINT_REFERENCE from Data Element
-    protected OMElement getEndpointReference() {
+    public OMElement getEndpointReference() {
         OMElement epr = data.getFirstChildWithName(new QName(
                 DRConstants.SERVICE_DATA.ENDPOINT_REFERENCE));
         return epr;
@@ -100,7 +100,7 @@
     
     // Load the file content of the file specified in the file attribute
     // in the data element.
-    protected OMElement getFileContent(ClassLoader classloader)
+    public OMElement getFileContent(ClassLoader classloader)
             throws DataRetrievalException {
 
         OMElement metaElement = null;
Index: modules/mex/src/org/apache/axis2/mex/MexMessageReceiver.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/MexMessageReceiver.java	(revision 512236)
+++ modules/mex/src/org/apache/axis2/mex/MexMessageReceiver.java	(working copy)
@@ -217,7 +217,7 @@
 				section = createMetadataSection(outputForm, data[k].getData(),
 						factory, mexNamespaceValue);
 
-				section.setDialet(dialect);
+				section.setDialect(dialect);
 				identifier_value = data[k].getIdentifier();
 
 				if (identifier_value != null) {
@@ -244,7 +244,7 @@
 		else if (outputForm == OutputForm.REFERENCE_FORM) {
 			MetadataReference ref = new MetadataReference(factory,
 					mexNamespaceValue);
-			ref.setEPRElement((OMElement) result);
+			ref.setEPR((OMElement) result);
 			section.setMetadataReference(ref);
 		} else {
 
Index: modules/mex/src/org/apache/axis2/mex/OM/MetadataReference.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/MetadataReference.java	(revision 512236)
+++ modules/mex/src/org/apache/axis2/mex/OM/MetadataReference.java	(working copy)
@@ -19,10 +19,13 @@
 
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
+import org.apache.axiom.soap.SOAP12Constants;
 import org.apache.axis2.AxisFault;
-//import org.apache.axis2.addressing.EndpointReference;
-//import org.apache.axis2.addressing.EndpointReferenceHelper;
+import org.apache.axis2.addressing.EndpointReference;
+import org.apache.axis2.addressing.EndpointReferenceHelper;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 
 /**
  * Class implemented for MetadataReference element defined in 
@@ -34,9 +37,20 @@
 
 	private OMFactory factory;
 	private OMElement eprElement = null; 
-
+    private EndpointReference epr = null;
 	private String namespaceValue = null;
 
+	 /**
+	 * Constructor
+	 * @throws MexException 
+	 */
+
+	public MetadataReference() throws MexException  {
+		
+		this.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);
+		this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;
+	}
+	
 	/**
 	 * Constructor
 	 * @param defaultFactory
@@ -52,8 +66,31 @@
 		this.factory = defaultFactory;
 		this.namespaceValue = namespaceValue;
 		}
-
 	/**
+	 * Populates an MetadataReference object based on the endpoint reference type <code>OMElement</code> passed. 
+	 * @param inElement MetadataReference element
+	 * @return MetadataReference 
+	 * @throws MexOMException
+	 */
+	
+	public MetadataReference fromOM(OMElement element) throws MexOMException{
+		
+		if (element == null) {
+			throw new MexOMException("Null element passed.");
+		}
+		if (!element.getLocalName().equals(MexConstants.SPEC.METADATA_REFERENCE)) {
+			throw new MexOMException("Invalid element passed.");
+		}
+		eprElement = element;
+		try {
+			epr = EndpointReferenceHelper.fromOM(element);
+		} catch (AxisFault e) {
+			throw new MexOMException (e);
+		}
+		
+		return this;
+	}
+	/**
 	 * Convert MetadatReference object content to the OMElement representation.
 	 * @return OMElement representation of MetadatReference.
 	 * @throws MexOMException
@@ -65,31 +102,52 @@
 		}
 
 		OMElement metadataRef = null;
-		/*if (eprElement.getLocalName() == "EndpointReference") {
-			EndpointReference epr;
-			try {
-				epr = EndpointReferenceHelper.fromOM(eprElement);
-				metadataRef = EndpointReferenceHelper.toOM(factory, epr,
-						new QName(namespaceValue,
-								MexConstants.SPEC.METADATA_REFERENCE,
-								MexConstants.SPEC.NS_PREFIX), eprElement
-								.getNamespace().getNamespaceURI());
+		try {
+			metadataRef = EndpointReferenceHelper.toOM(factory, epr, new QName(
+					namespaceValue, MexConstants.SPEC.METADATA_REFERENCE,
+					MexConstants.SPEC.NS_PREFIX), eprElement.getNamespace()
+					.getNamespaceURI());
 
-			} catch (AxisFault e) {
-				throw new MexOMException(e);
-			}
-		} */
+		} catch (AxisFault e) {
+			throw new MexOMException(e);
+		}
 
 		return metadataRef;
 	}
 	
+	
+	public OMElement getEPRElement() {
+		return eprElement;
+	}
+	
+	public EndpointReference getEPR() {
+		return epr;
+	}
+	
 	/**
-	 * Set EPR element
+	 * Set EPR 
 	 * 
-	 * @param element
+	 * @param element Endpoint Reference Type element
 	 */
-	public void setEPRElement(OMElement element) {
+	public void setEPR(OMElement element) throws MexOMException {
 		eprElement = element;
+		try {
+			epr = EndpointReferenceHelper.fromOM(eprElement);
+		} catch (AxisFault e) {
+			throw new MexOMException (e);
+		}
+		
 	}
 	
+	/**
+	 * Set EPR 
+	 * 
+	 * @param element Endpoint Reference Type elem
+	 */
+	public void setEPR(EndpointReference endRef) throws MexOMException {
+		epr = endRef;
+		
+	}
+		
+	
 }
Index: modules/mex/src/org/apache/axis2/mex/OM/Metadata.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/Metadata.java	(revision 512236)
+++ modules/mex/src/org/apache/axis2/mex/OM/Metadata.java	(working copy)
@@ -19,12 +19,17 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
+import javax.xml.namespace.QName;
 
 import org.apache.axiom.om.OMAttribute;
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
 import org.apache.axiom.om.OMNamespace;
+import org.apache.axiom.soap.SOAP12Constants;
+import org.apache.axis2.dataretrieval.OutputForm;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 
 /**
  * 
@@ -33,15 +38,28 @@
  */
 
 public class Metadata extends MexOM implements IMexOM {
+   // private static final Log log = LogFactory.getLog(Metadata.class);
+
 	private String namespaceValue = null;
 	private OMFactory factory;
 	private List  metadataSections = new ArrayList(); 
 	private OMAttribute attribute = null;
 	
 	/**
-	 * 
-	 * @param defaultFactory
-	 * @param namespaceValue
+	 * Constructor
+	 * @throws MexException 
+	 */
+
+	public Metadata() throws MexException  {
+		
+		this.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);;
+		this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;
+	}
+	
+	/**
+	 * Constructor 
+	 * @param defaultFactory 
+	 * @param namespaceValue valid namespace for WS-MEX
 	 * @throws MexOMException
 	 */
 
@@ -50,7 +68,137 @@
 		this.namespaceValue = namespaceValue;
 	}
 
+   /**
+    * 
+    * @return Array of MetadataSection of metadata units
+    */
+	public MetadataSection[] getMetadatSections() {
+		return (MetadataSection[])metadataSections.toArray(new MetadataSection[0]);
+	}
+		
+	/**
+	 * 
+	 * @param dialect dialect to filter 
+	 * @return Array of MetadataSection for the specified dialect metadata type 
+	 */
+    public MetadataSection[] getMetadataSection(String dialect ){
+    	MetadataSection[] sections = getMetadataSection(dialect, null, null);
+    	return sections;
+    }
+    
+    /**
+     * 
+     * @param dialect
+     * @param identifier
+     * @return Array of MetadataSection for the specified dialect metadata type and identifier  
+     */
+    public MetadataSection[] getMetadataSection(String dialect, String identifier){
+    	MetadataSection[] sections = getMetadataSection(dialect, identifier, null);
+    	return sections;
+    }
+    
+    /**
+     * 
+     * Answers the Metadata Sections that met the criteria specified in the dialect, identifier, and form.
+     * Note: Null value parameter will be treated as wild card.
+     * @param dialect
+     * @param identifier
+     * @param form specify the form of metadata: inline or by reference
+     *        See <code>OutputForm</code> for valid output forms.
+     * @return Array of MetadataSection for the specified dialect metadata type and identifier of
+     *         the form specified.
+     *
+     */
+    public MetadataSection[] getMetadataSection(String dialect, String identifier, OutputForm form ){
+        
+    	Iterator sections = metadataSections.iterator();
+    	List foundSections = new ArrayList();
+    	while (sections.hasNext()){
+    		MetadataSection aSection = (MetadataSection) sections.next();
+    		if ((dialect == null || dialect.equals(aSection.getDialect())) &&
+    			(identifier == null || dialect.equals(aSection.getIdentifier())) &&
+    			matchOutputForm(aSection, form)){
+    			foundSections.add(aSection);
+    		}	
+    		
+    	}
+    	return (MetadataSection[])foundSections.toArray(new MetadataSection[0]);
+    }
+    
+    /**
+     * 
+     * @param in_metadataSections List of metadata section to update.
+     */
+	public void setMetadatSections(List in_metadataSections) {
+		metadataSections = in_metadataSections;
+	}
 	
+	/**
+	 * Append List of metadata section to the exising metadata sections.
+	 * @param in_metadataSections
+	 */
+	public void addMetadatSections(List in_metadataSections) {
+		Iterator sections = in_metadataSections.iterator();
+		while (sections.hasNext()) {
+			addMetadataSection((MetadataSection) sections.next());
+		}
+	}
+
+	/**
+	 * Add a new metadata section to the existing metadata sections.
+	 * @param section
+	 */
+	public void addMetadataSection(MetadataSection section) {
+		metadataSections.add(section);
+	}
+	
+	
+	public void setAttribute(OMAttribute in_attribute) {
+		attribute = in_attribute;
+	}
+
+	/**
+	 * Populates an Metadata object based on the <code>OMElement</code> passed. 
+	 * @param inElement mex:Metadata element or element contains mex:Metadata element
+	 * @return Metadata 
+	 * @throws MexOMException
+	 */
+	public Metadata fromOM(OMElement inElement) throws MexOMException {
+			
+		OMElement mexElement = null;
+        if (inElement == null ){
+        	throw new MexOMException("Null element passed.");
+        }
+        if (!inElement.getLocalName().equals(MexConstants.SPEC.METADATA)){
+			mexElement = inElement.getFirstChildWithName(new QName(
+					              namespaceValue, MexConstants.SPEC.METADATA));
+			if (mexElement == null) {
+				throw new MexOMException("Missing expected Metadata element in element passed.");
+			}
+		}
+        else mexElement = inElement;
+        
+		OMFactory aFactory = mexElement.getOMFactory();
+		if (aFactory == null) {
+			aFactory = factory;
+		}
+		Iterator mexSections = mexElement.getChildrenWithName(new QName(MexConstants.SPEC.METADATA_SECTION));
+        if (mexSections == null){
+         	throw new MexOMException("Metadata element does not contain MetadataSection element.");
+        }
+        while (mexSections.hasNext()){
+        	OMElement aSection = (OMElement) mexSections.next();
+            MetadataSection metadataSection = new MetadataSection(aFactory, namespaceValue);
+            addMetadataSection(metadataSection.fromOM(aSection)); 
+        }
+        
+		return this;
+	}
+	
+	
+	/**
+     * Creates an <code>OMElement</code> based on the content of this Metadata object.
+     */
 	public OMElement toOM() throws MexOMException
 	{
 		OMNamespace mexNamespace = factory.createOMNamespace(namespaceValue,MexConstants.SPEC.NS_PREFIX);
@@ -67,27 +215,24 @@
 		return metadata;
 	}
 	
-	public void setMetadatSections(List in_metadataSections) {
-		metadataSections = in_metadataSections;
-	}
-	
-	public void addMetadatSections(List in_metadataSections) {
-		Iterator sections = in_metadataSections.iterator();
-		while (sections.hasNext()) {
-			addMetadatSection((MetadataSection) sections.next());
+
+    
+    // check if section contains data matching the output form requested
+    private boolean matchOutputForm(MetadataSection section,
+			OutputForm outputForm) {
+		boolean match = (outputForm == null);  // no matching needed in null outputForm is passed
+
+		if (!match) {
+			if (outputForm == OutputForm.LOCATION_FORM) {
+				match = (section.getLocation() != null);
+			} else if (outputForm == OutputForm.REFERENCE_FORM) {
+				match = (section.getMetadataReference() != null);
+			} else if (outputForm == OutputForm.INLINE_FORM) {
+				match = (section.getInlineData() != null);
+			}
 		}
-	}
 
-	public void addMetadatSection(MetadataSection section) {
-		metadataSections.add(section);
+		return match;
 	}
 	
-	public MetadataSection[] getMetadatSections() {
-		return (MetadataSection[])metadataSections.toArray(new MetadataSection[0]);
-	}
-	
-	public void setAttribute(OMAttribute in_attribute) {
-		attribute = in_attribute;
-	}
-
 }
Index: modules/mex/src/org/apache/axis2/mex/OM/MetadataSection.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/MetadataSection.java	(revision 512236)
+++ modules/mex/src/org/apache/axis2/mex/OM/MetadataSection.java	(working copy)
@@ -15,21 +15,27 @@
 */
 
 package org.apache.axis2.mex.OM;
+import javax.xml.namespace.QName;
 
-
 import org.apache.axiom.om.OMAttribute;
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
 import org.apache.axiom.om.OMNamespace;
 import org.apache.axiom.om.OMNode;
+import org.apache.axiom.soap.SOAP12Constants;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 
 
 /**
  * Class implemented for MetadataSection element defined in 
- * the WS-MEX spec.
+ * the WS-MEX spec. A unit of metdata i.e. a MetadataSection may be included in-line data, 
+ * or may be by reference as an endpoint reference (MetadataReference) or a URL (Location).
+ * An instance of MetadataSection can have one form of data: inline, location, or reference.
  *
  */
+
 public  class MetadataSection extends MexOM implements IMexOM {
 	private String namespaceValue = null;
 	private OMFactory factory;
@@ -41,10 +47,22 @@
 	private MetadataReference ref = null;
 	
     // Attributes
-    private String dialet;
+    private String dialect;
     private String identifier;
     
+    
     /**
+	 * Constructor
+	 * @throws MexException 
+	 */
+
+	public MetadataSection() throws MexException  {
+		
+		this.factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);;
+		this.namespaceValue = MexConstants.Spec_2004_09.NS_URI;
+	}
+	
+    /**
      * Constructor
      * @param defaultFactory
      * @param namespaceValue
@@ -55,9 +73,62 @@
 		this.namespaceValue = namespaceValue;
 	}
 	
+	
+	/**
+	 * Populates an MetadataSection object based on the <code>OMElement</code> passed. 
+	 * @param inElement mex:MetadataSection element
+	 * @return MetadataSection 
+	 * @throws MexOMException
+	 */
+	
+	public MetadataSection fromOM(OMElement element) throws MexOMException {
+		if (element == null) {
+			throw new MexOMException("Null element passed.");
+		}
+		if (!element.getLocalName().equals(MexConstants.SPEC.METADATA_SECTION)) {
+			throw new MexOMException("Invalid element passed.");
+		}
+		OMAttribute dialectAttr  = element.getAttribute(new QName(MexConstants.SPEC.DIALECT));
+		if (dialectAttr == null){
+			throw new MexOMException("Missing Dialect Attribute in MetadataSection.");
+		}
+		setDialect(dialectAttr.getAttributeValue());
+		OMAttribute identifierAttr  = element.getAttribute(new QName(MexConstants.SPEC.IDENTIFIER));
+		if (identifierAttr != null){
+			setIdentifier(identifierAttr.getAttributeValue());		
+		}
+		// validate one of the following element must exist: Location, MetadataReference, inline data
+		OMElement locationElem = element.getFirstChildWithName(new QName(MexConstants.SPEC.LOCATION));
+		Location location = null;
+		MetadataReference ref = null;
 		
+		if (locationElem != null){
+			location = new Location(factory, namespaceValue);
+		    setLocation(location.fromOM(locationElem));	
+		}
+		else { // check for MetadataReference
+			OMElement refElem = element.getFirstChildWithName(new QName(MexConstants.SPEC.METADATA_REFERENCE));
+			if (refElem != null ){
+				ref = new MetadataReference(factory, namespaceValue);
+				setMetadataReference(ref.fromOM(refElem));
+			}
+		}
+		if (location == null && ref == null) { // check for inline content
+			OMNode inline = element.getFirstOMChild();
+		    if (inline != null)
+		    	setinlineData(inline);
+		    else {
+		    	throw new MexOMException("Invalid empty MetadataSection.");
+		    }
+		    
+		}
+
+		return this;
+	}
+	
 	/**
 	 * Convert MetadatSection content to the OMElement representation.
+	 * 
 	 * @return OMElement representation of MetadataSection.
 	 * @throws MexOMException
 	 */
@@ -68,11 +139,11 @@
 				MexConstants.SPEC.METADATA_SECTION, mexNamespace);
 
 		// dialet is required
-		if (dialet == null) {
+		if (dialect == null) {
 			throw new MexOMException("Dialet was not set. Dialet must be set.");
 		}
 		OMAttribute dialetAttrib = factory.createOMAttribute(
-				MexConstants.SPEC.DIALECT, null, dialet);
+				MexConstants.SPEC.DIALECT, null, dialect);
 
 		metadataSection.addAttribute(dialetAttrib);
 
@@ -105,8 +176,8 @@
 
 	}
 	
-	public String getDialet() {
-		return dialet;
+	public String getDialect() {
+		return dialect;
 	}
 	
 	public String getIdentifier() {
@@ -116,14 +187,28 @@
 	public String getanyAttribute() {
 		return anyAttribute;
 	}
+	
+	/**
+	 * Return metadata unit in URL form i.e. mex:Location
+	 * 
+	 * @return
+	 */
 	public Location getLocation() {
 		return location;
 	}
 	
+	/**
+	 * Return metadata unit in inline form such as WSDL definitions, XML schema document, etc.
+	 * @return
+	 */
 	public OMNode getInlineData() {
 		return inlineData;
 	}
 	
+	/**
+	 * Return metadata unit in endpoint reference form i.e. mex:MetadataReference.
+	 * @return
+	 */
 	public MetadataReference getMetadataReference() {
 		return ref;
 	}
@@ -132,8 +217,8 @@
 		identifier =in_identifier;
 	}
 	
-	public void setDialet(String in_dialet) {
-		dialet = in_dialet;
+	public void setDialect(String in_dialect) {
+		dialect = in_dialect;
 	}
 	
 	
Index: modules/mex/src/org/apache/axis2/mex/OM/Location.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/Location.java	(revision 512236)
+++ modules/mex/src/org/apache/axis2/mex/OM/Location.java	(working copy)
@@ -16,17 +16,29 @@
 
 package org.apache.axis2.mex.OM;
 
+import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMFactory;
+import org.apache.axiom.soap.SOAP12Constants;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.MexException;
+import org.apache.axis2.mex.util.MexUtil;
 
 /**
  * Class implemented for Location element defined in 
  * the WS-MEX spec.
- *
  */
 
 public class Location extends AnyURIType {
 
+	
+	/**
+	 * @param uri  valid URL to retrieve the metadata using HTTP Get
+	 * @throws MexException
+	 */
+	public Location(String uri) throws MexException {
+		super(MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI), MexConstants.Spec_2004_09.NS_URI, uri);
+	}
+	
 	public Location(OMFactory defaultFactory, String namespaceValue, String uri) throws MexOMException {
 		super(defaultFactory, namespaceValue, uri);
 	}
@@ -34,6 +46,20 @@
 		super(defaultFactory, MexConstants.Spec_2004_09.NS_URI, uri );
 	}
 	
+	public Location fromOM(OMElement element) throws MexOMException{
+		if (element == null) {
+			throw new MexOMException("Null element passed.");
+		}
+		if (!element.getLocalName().equals(MexConstants.SPEC.LOCATION)) {
+			throw new MexOMException("Invalid element passed.");
+		}
+		super.setURI(element.getText());
+			
+		return this;
+	}
+	
+	
+	
 	/*
 	 * Return name of this element
 	 * (non-Javadoc)
Index: modules/mex/src/org/apache/axis2/mex/OM/AnyURIType.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/OM/AnyURIType.java	(revision 512236)
+++ modules/mex/src/org/apache/axis2/mex/OM/AnyURIType.java	(working copy)
@@ -60,6 +60,14 @@
 		return element;
 	}
 	
+    protected void setURI(String uri){
+	     this.uri = uri;	
+	}
+    
+    public String getURI(){
+	   return uri;	
+	}
+        
 	/*
 	 * Child class must implement to answer the element name.
 	 */
Index: modules/mex/src/org/apache/axis2/mex/util/MexUtil.java
===================================================================
--- modules/mex/src/org/apache/axis2/mex/util/MexUtil.java	(revision 512236)
+++ modules/mex/src/org/apache/axis2/mex/util/MexUtil.java	(working copy)
@@ -22,11 +22,13 @@
 import org.apache.axiom.om.impl.OMNamespaceImpl;
 import org.apache.axiom.soap.SOAP11Constants;
 import org.apache.axiom.soap.SOAP12Constants;
+import org.apache.axiom.soap.SOAPBody;
 import org.apache.axiom.soap.SOAPEnvelope;
 import org.apache.axiom.soap.SOAPFactory;
 import org.apache.axis2.AxisFault;
 import org.apache.axis2.mex.MexException;
 import org.apache.axis2.mex.MexConstants;
+import org.apache.axis2.mex.OM.Metadata;
 import org.apache.axis2.dataretrieval.OutputForm;
 
 public class MexUtil {
@@ -107,5 +109,41 @@
 		return wsa;
 
 	}
+	 
+	 
+	/**
+	 * API to map mex:Metadata element to a Metadata object representation. Data validation will 
+	 * be performed on omElement content. See {@link Metadata} for APIs to access metadata section.
+	 * 
+	 * @param omElement an element such as endpoint reference type that contains mex:Metadata or
+	 *                  an mex:Metadata element 
+	 * @return Metadata object representation of mex:Metadata element passed.
+	 * @throws MexException if invalid mex:Metadata element content is detected 
+	 */ 
+	 
+    public static Metadata fromOM(OMElement omElement) throws MexException{
+	      Metadata metadata = fromOM(omElement, MexConstants.Spec_2004_09.NS_URI);
+	      return metadata;
+	}	
+	
+    /**
+	 * API to map mex:Metadata element to a Metadata object representation. Data validation will 
+	 * be performed on omElement content. See {@link Metadata} for APIs to access metadata section.
+	 * 
+	 * @param omElement an element such as endpoint reference type that contains mex:Metadata or
+	 *                  an mex:Metadata element 
+	 * @param mexNamespaceValue  the namespace of the WS-MEX spec to comply with.
+	 * @return Metadata object representation of mex:Metadata element passed.
+	 * @throws MexException if invalid mex:Metadata element content is detected 
+	 */ 	
+	public static Metadata fromOM(OMElement omElement, String mexNamespaceValue) throws MexException{
+		
+		SOAPFactory factory = MexUtil.getSOAPFactory(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);
+		Metadata metadata = new Metadata(factory, mexNamespaceValue);
+		metadata = metadata.fromOM(omElement);
+		return metadata;
+	}
+	
+	
 
 }
Index: modules/samples/mex/build.xml
===================================================================
--- modules/samples/mex/build.xml	(revision 512236)
+++ modules/samples/mex/build.xml	(working copy)
@@ -36,7 +36,8 @@
 		</javac>
 		<jar destfile="build/userguideMex.jar">
             		<fileset dir="${classes.dir}">
-                		<include name="userguide/**"/>
+                		<include name="userguide/mex/clients/**"/>
+                                <include name="userguide/mex/datalocators/**"/>
             		</fileset>
        		</jar>
     </target>
