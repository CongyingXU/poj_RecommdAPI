diff -ur axis2-1.3-RC2-src.orig/modules/kernel/src/org/apache/axis2/Constants.java axis2-1.3-RC2-src.disable-11/modules/kernel/src/org/apache/axis2/Constants.java
--- axis2-1.3-RC2-src.orig/modules/kernel/src/org/apache/axis2/Constants.java	2007-07-05 16:10:26.000000000 +0100
+++ axis2-1.3-RC2-src.disable-11/modules/kernel/src/org/apache/axis2/Constants.java	2007-08-06 14:57:59.000000000 +0100
@@ -289,6 +289,7 @@
         public static final String DRILL_DOWN_TO_ROOT_CAUSE_FOR_FAULT_REASON =
                 "drillDownToRootCauseForFaultReason";
 
+        public static final String DISABLE_SOAP12 = "disableSOAP12";
         public static final String DISABLE_REST = "disableREST";
 
         // this will contain the keys of all the properties that will be in the message context
diff -ur axis2-1.3-RC2-src.orig/modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java axis2-1.3-RC2-src.disable-11/modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java
--- axis2-1.3-RC2-src.orig/modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java	2007-07-18 16:47:32.000000000 +0100
+++ axis2-1.3-RC2-src.disable-11/modules/kernel/src/org/apache/axis2/description/AxisService2WSDL11.java	2007-08-06 15:12:38.000000000 +0100
@@ -52,7 +52,6 @@
  */
 
 public class AxisService2WSDL11 implements Java2WSDLConstants {
-
     private AxisService axisService;
 
     private String[] serviceEndpointURLs;
@@ -144,6 +143,15 @@
         namespaceMap.put(prefix, axisService.getTargetNamespace());
         tns = ele.declareNamespace(axisService.getTargetNamespace(), prefix);
 
+	/* SOAP 1.2 bindings break older clients */
+        boolean disableSOAP12 = false;
+        Parameter disableSOAP12Parameter =
+                axisService.getParameter(org.apache.axis2.Constants.Configuration.DISABLE_SOAP12);
+        if (disableSOAP12Parameter != null &&
+                JavaUtils.isTrueExplicitly(disableSOAP12Parameter.getValue())) {
+            disableSOAP12 = true;
+        }
+
         boolean disableREST = false;
         Parameter disableRESTParameter =
                 axisService.getParameter(org.apache.axis2.Constants.Configuration.DISABLE_REST);
@@ -186,12 +194,14 @@
         generateMessages(fac, ele);
         generatePortType(fac, ele);
         generateSOAP11Binding(fac, ele);
-        generateSOAP12Binding(fac, ele);
+	if (!disableSOAP12) {
+	    generateSOAP12Binding(fac, ele);
+	}
         if (!disableREST) {
             generateHTTPBinding(fac, ele);
         }
 
-        generateService(fac, ele, disableREST);
+        generateService(fac, ele, disableREST, disableSOAP12);
         addPoliciesToDefinitionElement(policiesInDefinitions.values()
                 .iterator(), definition);
 
@@ -433,11 +443,27 @@
      */
     public void generateService(OMFactory fac, OMElement defintions, boolean disableREST)
             throws Exception {
+	    generateService(fac, defintions, disableREST, false);
+    }
+
+    /**
+     * Generate the WSDL &lt;service&gt; element
+     *
+     * @param fac the active OMFactory
+     * @param defintions the WSDL &lt;definitions&gt; element under which to put the service
+     * @param disableREST if false, generate REST binding, if true, don't
+     * @param disableSOAP12 if false, generate SOAP 1.2 binding, if true, don't
+     * @throws Exception if there's a problem
+     */
+    public void generateService(OMFactory fac, OMElement defintions, boolean disableREST, boolean disableSOAP12)
+            throws Exception {
         OMElement service = fac.createOMElement(SERVICE_LOCAL_NAME, wsdl);
         defintions.addChild(service);
         service.addAttribute(ATTRIBUTE_NAME, axisService.getName(), null);
         generateSOAP11Ports(fac, service);
-        generateSOAP12Ports(fac, service);
+	if (!disableSOAP12) {
+            generateSOAP12Ports(fac, service);
+	}
 
         addPolicyAsExtElement(PolicyInclude.SERVICE_POLICY, axisService
                 .getPolicyInclude(), service);
