Index: D:/eclipse321/workspace-svn/axis2/modules/jaxws/test/org/apache/axis2/jaxws/sample/MtomSampleTests.java
===================================================================
--- D:/eclipse321/workspace-svn/axis2/modules/jaxws/test/org/apache/axis2/jaxws/sample/MtomSampleTests.java	(revision 471804)
+++ D:/eclipse321/workspace-svn/axis2/modules/jaxws/test/org/apache/axis2/jaxws/sample/MtomSampleTests.java	(working copy)
@@ -29,7 +29,12 @@
     private static final QName QNAME_PORT    = new QName("urn://mtom.test.org", "MtomSample");
     private static final String URL_ENDPOINT = "http://localhost:8080/axis2/services/MtomSampleService";
     
-    public void testSendImageAttachment() throws Exception {
+    /*
+     * Enable attachment Optimization through the SOAPBinding method 
+     * -- setMTOMEnabled([true|false])
+     * Using SOAP11
+     */
+    public void testSendImageAttachmentAPI11() throws Exception {
         System.out.println("----------------------------------");
         System.out.println("test: " + getName());
         
@@ -57,9 +62,9 @@
         // Create the JAX-WS client needed to send the request
         Service service = Service.create(QNAME_SERVICE);
         service.addPort(QNAME_PORT, SOAPBinding.SOAP11HTTP_BINDING, URL_ENDPOINT);
-        Dispatch<Object> dispatch = service.createDispatch(
-                QNAME_PORT, jbc, Mode.PAYLOAD);
+        Dispatch<Object> dispatch = service.createDispatch(QNAME_PORT, jbc, Mode.PAYLOAD);
         
+        //Enable attachment optimization
         SOAPBinding binding = (SOAPBinding) dispatch.getBinding();
         binding.setMTOMEnabled(true);
         
@@ -69,4 +74,91 @@
         assertNotNull(response.getOutput().getImageData());
     }
     
+    /*
+     * Enable attachment optimization using the SOAP11 binding
+     * property for MTOM.
+     */
+    public void testSendImageAttachmentProperty11() throws Exception {
+        System.out.println("----------------------------------");
+        System.out.println("test: " + getName());
+        
+        String imageResourceDir = "modules"+File.separator+"jaxws"+File.separator+"test-resources"+File.separator+"image";
+        
+        //Create a DataSource from an image 
+        File file = new File(imageResourceDir+File.separator+"test.jpg");
+        ImageInputStream fiis = new FileImageInputStream(file);
+        Image image = ImageIO.read(fiis);
+        DataSource imageDS = new DataSourceImpl("image/jpeg","test.jpg",image);
+        
+        //Create a DataHandler with the String DataSource object
+        DataHandler dataHandler = new DataHandler(imageDS);
+        
+        //Store the data handler in ImageDepot bean
+        ImageDepot imageDepot = new ObjectFactory().createImageDepot();
+        imageDepot.setImageData(dataHandler);
+        
+        SendImage request = new ObjectFactory().createSendImage();
+        request.setInput(imageDepot);
+        
+        //Create the necessary JAXBContext
+        JAXBContext jbc = JAXBContext.newInstance("org.test.mtom");
+        
+        // Create the JAX-WS client needed to send the request with soap 11 binding
+        // property for MTOM
+        Service service = Service.create(QNAME_SERVICE);
+        service.addPort(QNAME_PORT, SOAPBinding.SOAP11HTTP_MTOM_BINDING, URL_ENDPOINT);
+        Dispatch<Object> dispatch = service.createDispatch(QNAME_PORT, jbc, Mode.PAYLOAD);
+        
+        SendImageResponse response = (SendImageResponse) dispatch.invoke(request);
+        
+        assertNotNull(response);
+        assertNotNull(response.getOutput().getImageData());
+    }
+    
+    /*
+     * Enable attachment optimization using both the SOAP11 binding
+     * property for MTOM and the Binding API
+     */
+    public void testSendImageAttachmentAPIProperty11() throws Exception {
+        System.out.println("----------------------------------");
+        System.out.println("test: " + getName());
+        
+        String imageResourceDir = "modules"+File.separator+"jaxws"+File.separator+"test-resources"+File.separator+"image";
+        
+        //Create a DataSource from an image 
+        File file = new File(imageResourceDir+File.separator+"test.jpg");
+        ImageInputStream fiis = new FileImageInputStream(file);
+        Image image = ImageIO.read(fiis);
+        DataSource imageDS = new DataSourceImpl("image/jpeg","test.jpg",image);
+        
+        //Create a DataHandler with the String DataSource object
+        DataHandler dataHandler = new DataHandler(imageDS);
+        
+        //Store the data handler in ImageDepot bean
+        ImageDepot imageDepot = new ObjectFactory().createImageDepot();
+        imageDepot.setImageData(dataHandler);
+        
+        SendImage request = new ObjectFactory().createSendImage();
+        request.setInput(imageDepot);
+        
+        //Create the necessary JAXBContext
+        JAXBContext jbc = JAXBContext.newInstance("org.test.mtom");
+        
+        // Create the JAX-WS client needed to send the request with soap 11 binding
+        // property for MTOM
+        Service service = Service.create(QNAME_SERVICE);
+        service.addPort(QNAME_PORT, SOAPBinding.SOAP11HTTP_MTOM_BINDING, URL_ENDPOINT);
+        Dispatch<Object> dispatch = service.createDispatch(QNAME_PORT, jbc, Mode.PAYLOAD);
+        
+        
+        //Enable attachment optimization
+        SOAPBinding binding = (SOAPBinding) dispatch.getBinding();
+        binding.setMTOMEnabled(true);
+        
+        SendImageResponse response = (SendImageResponse) dispatch.invoke(request);
+        
+        assertNotNull(response);
+        assertNotNull(response.getOutput().getImageData());
+    }
+    
 }
Index: D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/message/Protocol.java
===================================================================
--- D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/message/Protocol.java	(revision 471804)
+++ D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/message/Protocol.java	(working copy)
@@ -38,10 +38,12 @@
      */
     public static Protocol getProtocolForBinding(String url) throws MessageException {
         //TODO: Add support for more URLs as needed.
-        if (url.equals(SOAPBinding.SOAP11HTTP_BINDING)) {
+        if (url.equals(SOAPBinding.SOAP11HTTP_BINDING) || 
+        	url.equals(SOAPBinding.SOAP11HTTP_MTOM_BINDING)) {
             return Protocol.soap11;
         }
-        else if (url.equals(SOAPBinding.SOAP12HTTP_BINDING)) {
+        else if (url.equals(SOAPBinding.SOAP12HTTP_BINDING) ||
+        		 url.equals(SOAPBinding.SOAP12HTTP_BINDING)) {
             return Protocol.soap12;
         }
         else {
Index: D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/spi/ServiceDelegate.java
===================================================================
--- D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/spi/ServiceDelegate.java	(revision 471804)
+++ D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/spi/ServiceDelegate.java	(working copy)
@@ -111,7 +111,9 @@
         }
         
         if(bindingId!=null && !(bindingId.equals(SOAPBinding.SOAP11HTTP_BINDING) ||
-                bindingId.equals(SOAPBinding.SOAP12HTTP_BINDING))){
+        		                bindingId.equals(SOAPBinding.SOAP12HTTP_BINDING) ||
+        		                bindingId.equals(SOAPBinding.SOAP11HTTP_MTOM_BINDING) ||
+        		                bindingId.equals(SOAPBinding.SOAP12HTTP_MTOM_BINDING))){
             // TODO Is this the correct exception. Shouldn't this be a WebServiceException ?
             throw new UnsupportedOperationException(Messages.getMessage("addPortErr0", portName.toString()));
         }
Index: D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/client/BaseDispatch.java
===================================================================
--- D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/client/BaseDispatch.java	(revision 471804)
+++ D:/eclipse321/workspace-svn/axis2/modules/jaxws/src/org/apache/axis2/jaxws/client/BaseDispatch.java	(working copy)
@@ -367,6 +367,15 @@
             if (soapBinding.isMTOMEnabled())
                 msg.setMTOMEnabled(true);
         }
+        
+        // Check if the user enabled MTOM using the SOAP binding 
+        // properties for MTOM
+        String bindingID = this.port.getBindingID();
+        if((bindingID.equalsIgnoreCase(SOAPBinding.SOAP11HTTP_MTOM_BINDING) ||
+        	bindingID.equalsIgnoreCase(SOAPBinding.SOAP12HTTP_MTOM_BINDING)) &&
+        	!msg.isMTOMEnabled()){
+        	msg.setMTOMEnabled(true);
+        }
     }
     
     /*
