Index: C:/eclipse322/workspace_axis2/APACHE_axis2/modules/kernel/src/org/apache/axis2/description/AxisService.java
===================================================================
--- C:/eclipse322/workspace_axis2/APACHE_axis2/modules/kernel/src/org/apache/axis2/description/AxisService.java	(revision 646958)
+++ C:/eclipse322/workspace_axis2/APACHE_axis2/modules/kernel/src/org/apache/axis2/description/AxisService.java	(working copy)
@@ -623,6 +623,15 @@
 	 */
 	public void addOperation(AxisOperation axisOperation) {
 		axisOperation.setParent(this);
+        
+        if (log.isDebugEnabled()) {
+            if (axisOperation.getName().equals(ServiceClient.ANON_OUT_ONLY_OP)
+                    || (axisOperation.getName().equals(ServiceClient.ANON_OUT_ONLY_OP))
+                    || (axisOperation.getName().equals(ServiceClient.ANON_OUT_ONLY_OP))) {
+                log.debug("Client-defined operation name matches default operation name. "
+                        + "this may cause interoperability issues.  Name is: " + axisOperation.getName().toString());
+            }
+        }
 
 		Iterator modules = getEngagedModules().iterator();
 
Index: C:/eclipse322/workspace_axis2/APACHE_axis2/modules/kernel/src/org/apache/axis2/client/ServiceClient.java
===================================================================
--- C:/eclipse322/workspace_axis2/APACHE_axis2/modules/kernel/src/org/apache/axis2/client/ServiceClient.java	(revision 646958)
+++ C:/eclipse322/workspace_axis2/APACHE_axis2/modules/kernel/src/org/apache/axis2/client/ServiceClient.java	(working copy)
@@ -75,6 +75,9 @@
 
     /** Counter used to generate the anonymous service name. */
     private static Counter anonServiceCounter = new Counter();
+    
+    /** axis-specific prefix for qnames */
+    private static final String ANON_QNAME_PREFIX = "axis2";
 
 
     /**
@@ -83,7 +86,7 @@
      * In-Only operation).
      */
     public static final QName ANON_OUT_ONLY_OP = new QName(
-            "anonOutonlyOp");
+            null, "anonOutonlyOp", ANON_QNAME_PREFIX);
 
     /**
      * Operation name used for an anonymous robust-out-only operation
@@ -91,13 +94,13 @@
      * equivalent to a WSDL Robust-In-Only operation).
      */
     public static final QName ANON_ROBUST_OUT_ONLY_OP = new QName(
-            "anonRobustOp");
+            null, "anonRobustOp", ANON_QNAME_PREFIX);
 
     /**
      * Operation name used for an anonymous in-out operation (meaning we sent a
      * message and receive a response, equivalent to a WSDL In-Out operation).
      */
-    public static final QName ANON_OUT_IN_OP = new QName("anonOutInOp");
+    public static final QName ANON_OUT_IN_OP = new QName(null, "anonOutInOp", ANON_QNAME_PREFIX);
 
     // the meta-data of the service that this client access
     private AxisService axisService;
