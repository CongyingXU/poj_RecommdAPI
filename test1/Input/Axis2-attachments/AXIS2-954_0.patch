Index: modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java
===================================================================
--- modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java	(revision 427178)
+++ modules/addressing/src/org/apache/axis2/handlers/addressing/AddressingOutHandler.java	(working copy)
@@ -200,7 +200,7 @@
                     String relationshipType = relatesTo[i].getRelationshipType();
 
                     if (relatesToHeader != null) {
-                        if (Final.WSA_DEFAULT_RELATIONSHIP_TYPE.equals(relationshipType) || relationshipType == null || "".equals(relationshipType)) {
+                        if (Final.WSA_DEFAULT_RELATIONSHIP_TYPE.equals(relationshipType) || "".equals(relationshipType)) {
                             relatesToHeader.addAttribute(WSA_RELATES_TO_RELATIONSHIP_TYPE,
                                     this.relationshipType,
                                     addressingNamespaceObject);
Index: modules/core/src/org/apache/axis2/addressing/RelatesTo.java
===================================================================
--- modules/core/src/org/apache/axis2/addressing/RelatesTo.java	(revision 427178)
+++ modules/core/src/org/apache/axis2/addressing/RelatesTo.java	(working copy)
@@ -57,10 +57,13 @@
     }
 
     /**
-     * Method getRelationshipType
+     * Method getRelationshipType. If the relationship type has not been set it returns
+     * the default value {@link AddressingConstants.Final.WSA_DEFAULT_RELATIONSHIP_TYPE}
      */
     public String getRelationshipType() {
-        return relationshipType;
+        return (relationshipType != null ?
+                    relationshipType :
+                    AddressingConstants.Final.WSA_DEFAULT_RELATIONSHIP_TYPE);
     }
 
     /**
Index: modules/core/src/org/apache/axis2/engine/AxisEngine.java
===================================================================
--- modules/core/src/org/apache/axis2/engine/AxisEngine.java	(revision 427178)
+++ modules/core/src/org/apache/axis2/engine/AxisEngine.java	(working copy)
@@ -183,10 +183,7 @@
         faultContext.setTransportOut(processingContext.getTransportOut());
 
         faultContext.setMessageID(UUIDGenerator.getUUID());
-        faultContext.addRelatesTo(
-                new RelatesTo(
-                        processingContext.getOptions().getMessageId(),
-                        AddressingConstants.Final.WSA_RELATES_TO_RELATIONSHIP_TYPE_DEFAULT_VALUE));
+        faultContext.addRelatesTo(new RelatesTo(processingContext.getOptions().getMessageId())); //Uses the default relationship type
         faultContext.setProperty(Constants.Configuration.CHARACTER_SET_ENCODING,
                 processingContext.getProperty(Constants.Configuration.CHARACTER_SET_ENCODING));
 
Index: modules/core/src/org/apache/axis2/util/Utils.java
===================================================================
--- modules/core/src/org/apache/axis2/util/Utils.java	(revision 427178)
+++ modules/core/src/org/apache/axis2/util/Utils.java	(working copy)
@@ -79,10 +79,7 @@
         }
 
         newmsgCtx.setFaultTo(oldOptions.getTo());
-        newmsgCtx.addRelatesTo(
-                new RelatesTo(
-                        oldOptions.getMessageId(),
-                        AddressingConstants.Final.WSA_RELATES_TO_RELATIONSHIP_TYPE_DEFAULT_VALUE));
+        newmsgCtx.addRelatesTo(new RelatesTo(oldOptions.getMessageId())); //Uses the default relationship type
                 
         AxisOperation ao = inMessageContext.getAxisOperation();
         if(ao!=null && ao.getOutputAction()!=null){
Index: modules/core/src/org/apache/axis2/client/Options.java
===================================================================
--- modules/core/src/org/apache/axis2/client/Options.java	(revision 427178)
+++ modules/core/src/org/apache/axis2/client/Options.java	(working copy)
@@ -199,14 +199,9 @@
         for(int i=0;relationships != null && i<relationships.size();i++) {
             RelatesTo relatesTo = (RelatesTo) relationships.get(i);
             String relationshipType = relatesTo.getRelationshipType();
-            if((type.equals(AddressingConstants.Final.WSA_DEFAULT_RELATIONSHIP_TYPE) ||
-                    type.equals(AddressingConstants.Submission.WSA_RELATES_TO_RELATIONSHIP_TYPE_DEFAULT_VALUE))
-                    && relationshipType == null) {
+            if(relationshipType.equals(type)) {
                 return relatesTo;
             }
-            if(relationshipType != null && relationshipType.equals(type)) {
-                return relatesTo;
-            }
         }
         return null;
     }
@@ -222,11 +217,9 @@
         for(int i=0;relationships != null && i<relationships.size();i++) {
             RelatesTo relatesTo = (RelatesTo) relationships.get(i);
             String relationshipType = relatesTo.getRelationshipType();
-            if(relationshipType == null) {
+            if (relationshipType.equals(AddressingConstants.Final.WSA_DEFAULT_RELATIONSHIP_TYPE)
+                || relationshipType.equals(AddressingConstants.Submission.WSA_RELATES_TO_RELATIONSHIP_TYPE_DEFAULT_VALUE)) {
                 return relatesTo;
-            }else if (relationshipType.equals(AddressingConstants.Final.WSA_DEFAULT_RELATIONSHIP_TYPE)
-                    || relationshipType.equals(AddressingConstants.Submission.WSA_RELATES_TO_RELATIONSHIP_TYPE_DEFAULT_VALUE)) {
-                return relatesTo;
             }
         }
         return null;
