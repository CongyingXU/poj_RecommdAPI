Index: test/org/apache/axis2/deployment/FaultyServicesDueToModuleTest.java
===================================================================
--- test/org/apache/axis2/deployment/FaultyServicesDueToModuleTest.java	(revision 759840)
+++ test/org/apache/axis2/deployment/FaultyServicesDueToModuleTest.java	(working copy)
@@ -29,6 +29,7 @@
 import org.apache.axis2.context.ConfigurationContextFactory;
 
 import java.util.HashMap;
+import java.util.Map;
 import java.io.File;
 
 public class FaultyServicesDueToModuleTest extends TestCase {
@@ -45,7 +46,7 @@
         AxisService axisService = axisConfig.getService("echo2");
         assertNull(axisService);
 
-        HashMap<String, FaultyServiceData> faultyServicesMap = axisConfig.getFaultyServicesDuetoModule(
+        Map<String, FaultyServiceData> faultyServicesMap = axisConfig.getFaultyServicesDuetoModule(
                 "sample-logging");
         FaultyServiceData faultyServiceData = faultyServicesMap.get("echo2");
         assertNotNull(faultyServiceData);
@@ -60,7 +61,7 @@
         AxisService axisService = axisConfig.getService("echo2");
         assertNotNull(axisService);
 
-        HashMap<String, FaultyServiceData> faultyServicesMap = axisConfig.getFaultyServicesDuetoModule(
+        Map<String, FaultyServiceData> faultyServicesMap = axisConfig.getFaultyServicesDuetoModule(
                 "sample-logging");
         FaultyServiceData faultyServiceData = faultyServicesMap.get("echo2");
         assertNull(faultyServiceData);
Index: src/org/apache/axis2/deployment/DeploymentEngine.java
===================================================================
--- src/org/apache/axis2/deployment/DeploymentEngine.java	(revision 759840)
+++ src/org/apache/axis2/deployment/DeploymentEngine.java	(working copy)
@@ -557,10 +557,11 @@
         axisConfiguration.addModule(modulemetadata);
         log.debug(Messages.getMessage(DeploymentErrorMsgs.ADDING_NEW_MODULE));
 
-        synchronized (axisConfiguration.getFaultyServicsDuetoModules()) {
+        synchronized (axisConfiguration.getFaultyServicesDuetoModules()) {
 
             //Check whether there are faulty services due to this module
-            HashMap<String, FaultyServiceData> faultyServices = axisConfiguration.getFaultyServicesDuetoModule(
+            HashMap<String, FaultyServiceData> faultyServices =
+                    (HashMap<String, FaultyServiceData>)axisConfiguration.getFaultyServicesDuetoModule(
                     modulemetadata.getName());
             faultyServices = (HashMap<String, FaultyServiceData>)faultyServices.clone();
 
@@ -624,7 +625,7 @@
                                                          URL serviceLocation,
                                                          DeploymentFileData currentDeploymentFile,
                                                          AxisConfiguration axisConfig) throws AxisFault {
-        synchronized (axisConfig.getFaultyServicsDuetoModules()) {
+        synchronized (axisConfig.getFaultyServicesDuetoModules()) {
             String moduleName;
             ArrayList groupModules = serviceGroup.getModuleRefs();
             for (int i = 0; i < groupModules.size(); i++) {
Index: src/org/apache/axis2/engine/AxisConfiguration.java
===================================================================
--- src/org/apache/axis2/engine/AxisConfiguration.java	(revision 759840)
+++ src/org/apache/axis2/engine/AxisConfiguration.java	(working copy)
@@ -117,8 +117,12 @@
      */
     private Hashtable<String, String> faultyServices;
 
-    private final HashMap<String, HashMap<String, FaultyServiceData>> faultyServicesDueToModules = new HashMap<String,
-            HashMap<String, FaultyServiceData>>();
+    /**
+     * To store services which have become faulty due to modules. Here key is the module name and the corresponding
+     * value is an another map which holds the list faulty services due a single module.
+     */
+    private final Map<String, Map<String, FaultyServiceData>> faultyServicesDueToModules = new HashMap<String,
+            Map<String, FaultyServiceData>>();
 
 
     private List<Phase> inFaultPhases;
@@ -653,7 +657,7 @@
      * @param faultyServiceData  Data that are required when recovering the faulty service.
      */
     public void addFaultyServiceDuetoModule(String moduleName, FaultyServiceData faultyServiceData) {
-        HashMap<String, FaultyServiceData> faultyServicesMap;
+        Map<String, FaultyServiceData> faultyServicesMap;
 
         synchronized (faultyServicesDueToModules) {
 
@@ -669,7 +673,12 @@
         }
     }
 
-    public HashMap<String, FaultyServiceData> getFaultyServicesDuetoModule(String moduleName) {
+    /**
+     * Returns a map which contains the faulty services due a module.
+     * @param moduleName
+     * @return
+     */
+    public Map<String, FaultyServiceData> getFaultyServicesDuetoModule(String moduleName) {
         if (faultyServicesDueToModules.containsKey(moduleName)) {
             return faultyServicesDueToModules.get(moduleName);
 
@@ -677,13 +686,22 @@
         return new HashMap<String, FaultyServiceData>(1);
     }
 
-    public HashMap<String, HashMap<String, FaultyServiceData>> getFaultyServicsDuetoModules(){
+    /**
+     * Returns the map which keeps track of faulty services due to modules.
+     * @return
+     */
+    public Map<String, Map<String, FaultyServiceData>> getFaultyServicesDuetoModules(){
         return faultyServicesDueToModules;
     }
 
+    /**
+     * Removes a faulty service from the map faultyServicesDueToModules.
+     * @param moduleName
+     * @param serviceGroupName
+     */
     public void removeFaultyServiceDuetoModule(String moduleName, String serviceGroupName) {
         synchronized (faultyServicesDueToModules) {
-            HashMap<String, FaultyServiceData> faultyServices = faultyServicesDueToModules.get(moduleName);
+            Map<String, FaultyServiceData> faultyServices = faultyServicesDueToModules.get(moduleName);
 
             if(faultyServices != null){
                 faultyServices.remove(serviceGroupName);
