Index: src/org/apache/axis2/dispatchers/RequestURIBasedServiceDispatcher.java
===================================================================
--- src/org/apache/axis2/dispatchers/RequestURIBasedServiceDispatcher.java	(revision 1002166)
+++ src/org/apache/axis2/dispatchers/RequestURIBasedServiceDispatcher.java	(working copy)
@@ -23,6 +23,7 @@
 import org.apache.axis2.addressing.EndpointReference;
 import org.apache.axis2.context.ConfigurationContext;
 import org.apache.axis2.context.MessageContext;
+import org.apache.axis2.description.AxisEndpoint;
 import org.apache.axis2.description.AxisService;
 import org.apache.axis2.description.HandlerDescription;
 import org.apache.axis2.description.WSDL2Constants;
@@ -32,6 +33,7 @@
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 
+import java.util.HashMap;
 import java.util.Map;
 
 public class RequestURIBasedServiceDispatcher extends AbstractServiceDispatcher {
@@ -68,17 +70,20 @@
             	// If the axisService is not null we get the binding that the request came to add
             	// add it as a property to the messageContext
             	if (axisService != null) {
-            		Map endpoints = axisService.getEndpoints();
+            		Map<String, AxisEndpoint> endpoints = axisService.getEndpoints();
             		if (endpoints != null) {
+                     if (messageContext.isDoingREST() && endpoints.size() > 1) {
+                        endpoints = filterEndpointsWithHttpBinding(endpoints);
+                     }
+                     AxisEndpoint endpoint;
             			if (endpoints.size() == 1) {
-            				messageContext.setProperty(WSDL2Constants.ENDPOINT_LOCAL_NAME,
-            						endpoints.get(
-            								axisService.getEndpointName()));
+            				endpoint = endpoints.values().iterator().next();
             			} else {
             				String endpointName = values[0].substring(values[0].indexOf(".") + 1);
-            				messageContext.setProperty(WSDL2Constants.ENDPOINT_LOCAL_NAME,
-            						endpoints.get(endpointName));
+            				endpoint = endpoints.get(endpointName);
             			}
+            			messageContext.setProperty(WSDL2Constants.ENDPOINT_LOCAL_NAME,
+            			   endpoint);
             		}
             	}
 
@@ -98,6 +103,16 @@
             return null;
         }
     }
+    
+    private Map<String, AxisEndpoint> filterEndpointsWithHttpBinding(Map<String, AxisEndpoint> endpoints) {
+       HashMap<String, AxisEndpoint> httpEndpoints = new HashMap<String, AxisEndpoint>();
+       for (Map.Entry<String, AxisEndpoint> endpoint : endpoints.entrySet()) {
+          if (org.apache.axis2.deployment.util.Utils.isHttpBinding(endpoint.getValue().getBinding())) {
+             httpEndpoints.put(endpoint.getKey(), endpoint.getValue());
+          }
+       }
+       return httpEndpoints;
+    }
 
     public void initDispatcher() {
         init(new HandlerDescription(NAME));
